require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

var UserAgent = require('../mod/userAgent');
var userAgent = new UserAgent();
var StringHandle = require('../mod/stringHandle');
var stringHandle = new StringHandle();

function genGoodsInCartHtml(data) {
    var html = "";
    var currencySymbol = data.currencySymbol;
    var allGoods = data.allGoods;
    for (var key in allGoods) {
        var goods = allGoods[key];
        var goodsName = (goods.nick_name == 'undefined') ? goods.nick_name : goods.goods_name;
        var originGoodsName = goodsName;
        var originGoodsName = stringHandle.quoteattr(goodsName);

        if (goodsName.length > 77) {
            goodsName = goodsName.substr(0, 74) + '...';
        }
        var goodsUrl = goods.goods_url;
        var goodsThumb = goods.goods_thumb;
        var styles4display = goods.styles4display;
        var stylesHtml = "<ul>";
        for (var k in styles4display) {
            if(webData.lang == 'fr'){
                stylesHtml += "<li>" + styles4display[k].replace(":"," :") + "</li>";
            }else{
                stylesHtml += "<li>" + styles4display[k] + "</li>";
            }
        }
        stylesHtml += "</ul>";
        var lang_suffix = webData.lang_suffix || ""
        if(!!~['_au', '_uk'].indexOf(lang_suffix)) {
            stylesHtml = stylesHtml.replace(/color/g, 'colour')
            stylesHtml = stylesHtml.replace(/Color/g, 'Colour')
            goodsName = goodsName.replace(/color/g, 'colour')
            goodsName = goodsName.replace(/Color/g, 'Colour')
            originGoodsName = originGoodsName.replace(/color/g, 'colour')
            originGoodsName = originGoodsName.replace(/Color/g, 'Colour')
        }

        var ship_tip = '';
        if(goods.is_sample_dress > 0){ // "0" means true
            if(webData.lang_suffix == '_uk'){
                ship_tip = _lang.page_common_ship_to_uk;
            }else if(webData.lang_suffix == '_au'){
                ship_tip = _lang.page_common_ship_to_au;
            }else if(webData.lang_suffix == '_fr'){
                ship_tip = _lang.page_common_ship_to_fr;
            }else if(webData.lang_suffix == ''){
                ship_tip = _lang.page_common_ship_to_specific_country;
            }

        }
        var freeGift = '';
        var giftMarketPrice = '';
        var freeGiftClass = '';
        if (goods.is_gift == '1') {
            stylesHtml = '';
            freeGift = ' <span class="cart-free-gift">(' + _lang.page_common_free_gift + ')</span> ';
            freeGiftClass = ' cart-free-gift';
            giftMarketPrice = "<div class='nav-cart-desc-plist-goods-desc-amount nav-cart-gift-market-price'>" + goods.market_price_4display + "</div>";
        }
        var goodsHtml =
            "<div class='nav-cart-desc-plist-goods clear' id='cart_desc_goods_" + goods.rec_id + "'>"
            +     "<div class='nav-cart-desc-plist-goods-img fl'>" + "<a target='_blank' href='" + webData.WEB_ROOT + goodsUrl + "'>"
            +     "<img width='100px' height='auto' src='" + goodsThumb + "' alt='" + goodsName + "' /></a>" +"</div>"
            +     "<div class='nav-cart-desc-plist-goods-desc fl'>"
            +         "<div class='nav-cart-desc-plist-goods-desc-title'><a target='_blank' href='" + webData.WEB_ROOT + goodsUrl + "' title='" + originGoodsName + "'>" + goodsName + freeGift + "</a></div>"
            +         "<div class='nav-cart-desc-plist-goods-desc-total-and-amount'>"
            +             "<div class='nav-cart-desc-plist-goods-desc-amount" + freeGiftClass +"'>" + goods.total_price_4display + "</div>"
            + giftMarketPrice
            +             "<div class='nav-cart-desc-plist-goods-desc-total'>" + _lang.page_header_items_in_cart_quantity + " : " + goods.goods_number + "</div>"
            +         "</div>"
            +         "<div class='nav-cart-desc-plist-goods-desc-styles'>"
            +             stylesHtml
            +         "</div>"
            +         "<div class='nav-cart-desc-plist-goods-desc-ship-tip'>"
            +             ship_tip
            +         "</div>"
            +     "</div>"
            + "</div>"
        ;
        html += goodsHtml;
    }
    return html;
}

var hoverCartIcon = function () {
    // $("#cart_num").children("span").addClass("hover");
    $('#nav_cart').addClass('over');

    webData.mouseIsInCartIcon = true;
    if (webData.loadedGoodsInCart == false) {
        $(".nav-cart-desc-loading").show();
        if (webData.loadingGoodsInCart == false) {
            webData.loadingGoodsInCart = true;
            $.ajax({
                type: 'get',
                url: webData.WEB_ROOT + 'ajax.php?act=getAllInCart',
                data: '',
                dataType: 'json',
                success: function (r) {
                    if (r.code == 'success') {
                        if (r.total > 0) {
                            webData.cartIsEmpty = false;
                            var total = r.total;
                            var totalAmount = r.totalAmount;
                            webData.totalAmountNumber = r.totalAmountNumber;
                            var currencySymbol = r.currencySymbol;
                            var goodsInCartHtml = genGoodsInCartHtml(r);
                            $(".nav-cart-desc .nav-cart-desc-header-num-total").html(total);
                            var tips = total > 1 ? _lang.page_XX_items_in_shopping_cart : _lang.page_XX_item_in_shopping_cart;
                            tips = tips.replace("XX", "");
                            $(".nav-cart-desc .nav-cart-desc-header-num-total-tips").html(tips);
                            $("#shoppingCartGoodsTotal").html(total);
                            $(".nav-cart-desc .nav-cart-desc-footer-desc-cs").html(currencySymbol);
                            $(".nav-cart-desc .nav-cart-desc-footer-desc-amount").html(totalAmount);
                            $(".nav-cart-desc .nav-cart-desc-plist").html(goodsInCartHtml);
                            $(".nav-cart-desc .nav-cart-desc-plist .nav-cart-desc-plist-goods:last-child").css("border-bottom", "none");
                        }
                        if (webData.mouseIsInCartIcon == true) {
                            $(".nav-cart-desc-loading").hide();
                            $(".nav-cart-desc-error").hide();
                            $(".nav-cart-desc-net-error").hide();
                            if (webData.cartIsEmpty == true) {
                                $(".nav-cart-desc-empty").show();
                            } else {
                                $(".nav-cart-desc").show();
                                $('.nav-cart-desc .nav-cart-desc-plist').scrollTop(0);
                            }

                        }
                        webData.loadedGoodsInCart = true;
                    } else {
                        webData.loadedGoodsInCart = false;
                    }
                    webData.loadingGoodsInCart = false;
                },
                error: function () {
                    webData.loadingGoodsInCart = false;
                }
            });
        }
    } else {
        if (webData.cartIsEmpty == true) {
            $(".nav-cart-desc-empty").show();
        } else {
            $(".nav-cart-desc").show();
        }
    }
}

var init = function () {
    $(".nav-cart-desc-header-close").click(function (){
        $('#nav_cart').removeClass('over');
    });

    webData.loadingGoodsInCart = false;
    webData.loadedGoodsInCart = false;
    webData.cartIsEmpty = true;
    webData.mouseIsInCartIcon = false;

    if (!userAgent.isIpad() && $("#nav_cart").children(".tools-content").children("div").length > 0) {
        $("#cart_num").parent("#nav_cart").hover(
            hoverCartIcon,
            function () {
                $("#cart_num").children("span").removeClass("hover");

                webData.mouseIsInCartIcon = false;
                $(".nav-cart-desc-loading").hide();
                $(".nav-cart-desc-net-error").hide();
                $(".nav-cart-desc-error").hide();
                $(".nav-cart-desc-empty").hide();
                $(".nav-cart-desc").hide();
            }
        );
    }

    $(document).ready(function () {
        require('../lib/PayPalCheckout').addToCartInit();
    });
}

module.exports = {
    "init": init,
    "hoverCartIcon": hoverCartIcon
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{"../lib/PayPalCheckout":12,"../mod/stringHandle":27,"../mod/userAgent":29}],2:[function(require,module,exports){
/*
 * This is used to defined the application level event names.
 * The application events are fired in the document level.
     $( document ).on( "myCustomEvent", {
         foo: "bar"
     }, function( event, arg1, arg2 ) {
         console.log( event.data.foo ); // "bar"
         console.log( arg1 );           // "bim"
         console.log( arg2 );           // "baz"
     });

     $( document ).trigger( "myCustomEvent", [ "bim", "baz" ] );
 *
 */
module.exports = {
    addToCart: "es-addToCart",
    removeFromCart: "es-removeFromCart",
    updateCart: "es-updateCart",
    checkoutStep: "es-checkoutStep",
    purchase: "es-purchase",
    checkoutError: 'es-checkoutError',
    clickCheckout: "es-clickCheckout",
    clickGoodsQuantity: "es-clickGoodsQuantity",
    clickGoodsSize: "es-clickGoodsSize",
    clickGoodsSizeOption: "es-clickGoodsSizeOption",
};
},{}],3:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {
    var UserAgent = require('../mod/userAgent');
    var userAgent = new UserAgent();
    var thumb = require('./thumb_pictures');
    var header = require('../common/cart_quick_display');
    var Cookie = require('../mod/cookie');
    var addToCartUtil = require('./add_to_cart_util');
    var popSubscribeOffGoods = require('../mod/popSubscribeOffGoods');
    var cookie = new Cookie();
    var events = require('../common/events');
    var finalTplVersion = typeof pageData.finalTplVersion != "undefined" ? pageData.finalTplVersion : '_simple_tab';
    var colorClickCount = 0;
    var revisingFeaturesList = typeof pageData.revisingFeaturesList != 'undefined' ? pageData.revisingFeaturesList : [];
    var customSizeTermsSwitch = typeof pageData.customSizeTermsSwitch != 'undefined' ? pageData.customSizeTermsSwitch : false;
    var videoPlayCount = 0;
    window.dataLayer = window.dataLayer || [];
    var allowAutoPlay = false;
    var isOnSale = pageData.isOnSale
    var alertError = require('../mod/alertMessage');
    var paypal_checkout = require('../lib/PayPalCheckout');
    var paymentPlacements = require('../lib/paymentPlacements');

    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

    //表单元素

    var styles_form = $('#goods_form');
    var mix_styles_form = $('#cart_succ_form');

    var personalize = $('#personalize');
    var personalizeData = {"quantity":"", "color":"", "size_type":"", "trim":"", "paper_type":""};

    // styles need to check delivery time except for Color & Size
    var stylesCheckDelivery = addToCartUtil.getStylesCheckDelivery();

    // 非24小时模式下custom状态
    var isCheckedCustom = false
    var isCheckedUnsureSize = false

    var sizeClickState = true
    var quantityClickState = true

    $(window).resize(function () {
        var taketimeImg = $(".prod-info-time .made-to-order_simple_tab_img")
        if (window.innerWidth >= 1400 && !is24hrsMode()) {
            taketimeImg.show()
        } else {
            taketimeImg.hide()
        }
    });

    //判断是否选择了wrap
    function selectedWrap() {
        var selectedWrap = is24hrsMode() || isSpecialOfferMode() ? styles_form.find('.pis-wrap-box .pis-wrap-a.selected .pis-wrap').attr('kvalue') : styles_form.find('select[name="styles[select][wrap]"] option:selected').attr('kvalue');
        return (selectedWrap != undefined && selectedWrap == 'Yes');
    }

    function wrapChange() {
        var custom_wrap = styles_form.find('.custom_wrap');
        if (styles_form.find('.custom-size-switch-btn.active').data('value') == '_inch') {
            var custom_wrap_ipts = custom_wrap.find('.inch_select select');
        } else {
            var custom_wrap_ipts = custom_wrap.find('.cm_select select');
        }

        var size_detail = styles_form.find('#size_detail');
        var with_wrap_tip = size_detail.find('.with_wrap_tip');

        if (selectedWrap()) {
            if (size_detail.length > 0 && with_wrap_tip.length == 0) {
                size_detail.append('<p class="with_wrap_tip clear">' + _lang.page_goods_size_note_wrap + '</p>');
                with_wrap_tip = size_detail.find('.with_wrap_tip');
            }
            with_wrap_tip.show();
            custom_wrap.show();
            custom_wrap_ipts.prop('disabled', false);
        } else {
            with_wrap_tip.hide();
            custom_wrap.hide();
            custom_wrap_ipts.prop('disabled', true);
        }
        cal_fee();
    }

    //计算价格
    var priceStyle = require('../mod/priceStyle');

    function cal_fee() {
        var custom_fee = 0;
        var large_size_fee = 0;
        var origin_custom_fee = 0;
        var origin_large_size_fee = 0;
        var fee = pageData.fee;
        var plussizeFeeDisabled = typeof pageData.plussizeFeeDisabled != "undefined" && pageData.plussizeFeeDisabled;
        var plus_price = pageData.plus_price != undefined ? pageData.plus_price : 0;
        var plus_price_USDollar = pageData.plus_price_USDollar != undefined ? pageData.plus_price_USDollar : 0;

        var origin_exclusive_color_fee = 0;
        if($('.pis-color-a.selected.exclusive-color').is(':visible')){//already show
            origin_exclusive_color_fee = $('.pis-color-a.selected.exclusive-color').find('.pis-color').data('exclusive-color-price')
        }
        var exclusive_color_fee = priceStyle.fromUSD(origin_exclusive_color_fee, pageData.currency);

        if (styles_form.find('input[name="custom"]').prop('checked')) {
            custom_fee = parseFloat(fee.custom_fee);
            origin_custom_fee = parseFloat(fee.origin_custom_fee);
        } else {
            var selectedSize = styles_form.find('select[name="styles[select][size]"]').not(':disabled').find('option:selected').attr('kvalue');
            if (selectedSize == undefined) {
                selectedSize = styles_form.find('a.pis-size-a.selected dl').attr('kvalue');
            }

            if (selectedSize != undefined && selectedSize.search(/^\d+W/) > -1 && pageData.is_sample_dress != "1" && !plussizeFeeDisabled) {
                large_size_fee = parseFloat(fee.plussize_fee);
                origin_large_size_fee = parseFloat(fee.origin_plussize_fee);
            }
        }

        var wrap_fee = selectedWrap() ? parseFloat(fee.wrap_fee) : 0;
        var origin_wrap_fee = selectedWrap() ? parseFloat(fee.origin_wrap_fee) : 0;

        var quantity = parseInt(styles_form.find('input[name="goods_number"]').val());

        var specialOfferStyleInfo = addToCartUtil.getSpecialOfferStyleInfo(styles_form, stylesCheckDelivery);
        var shop_price = parseFloat(fee.shop_price);
        if(specialOfferStyleInfo.shop_price > 0) {
            shop_price = parseFloat(specialOfferStyleInfo.shop_price);
        } else if (isSpecialOfferMode() && fee.lowest_special_shop_price && fee.lowest_special_shop_price > 0) {
            shop_price = parseFloat(fee.lowest_special_shop_price);
        } else {
            shop_price += custom_fee + large_size_fee + exclusive_color_fee + wrap_fee + parseFloat(plus_price); //Price
        }
        var market_price = parseFloat(fee.market_price) + custom_fee + large_size_fee + exclusive_color_fee + wrap_fee + parseFloat(plus_price); //List Price
        var cart_price = shop_price * quantity; //total

        //origin shop price/bonus -> USDollar
        var origin_shop_price = parseFloat(fee.origin_shop_price);
        if(specialOfferStyleInfo.origin_shop_price > 0) {
            origin_shop_price = parseFloat(specialOfferStyleInfo.origin_shop_price);
        } else if (isSpecialOfferMode() && fee.lowest_origin_special_shop_price && fee.lowest_origin_special_shop_price > 0) {
            origin_shop_price = parseFloat(fee.lowest_origin_special_shop_price);
        } else {
            origin_shop_price += origin_custom_fee + origin_large_size_fee + origin_exclusive_color_fee + origin_wrap_fee + parseFloat(plus_price_USDollar);
        }
        var bonus =  origin_shop_price * parseFloat(fee.activity_discount_percent_value);

        if(parseFloat(fee.activity_discount_percent_value) != 0){
            bonus = priceStyle.fromUSD(bonus, pageData.currency)
        }
        var activity_discount_price =  shop_price - bonus;

        $('#id_shop_price').html(priceStyle.formatStyle(shop_price)); //Price
        $('#page_common_list_price').html(priceStyle.formatWithSymbol(market_price, true)); //List Price
        $('#price_total').html(priceStyle.formatWithSymbol(cart_price, true)); //total
        $('#activity_discount_format_price').html(priceStyle.formatPrice(activity_discount_price)); //activity discount Price

        paypal_checkout.setMessageAmount(shop_price);
        paymentPlacements.setMessageAmount(shop_price);
    }

    var changeUrl = function(personalizeData) {
        var url = personalize.attr('base-url');
        var invalidData = checkValidPersonalizeData(personalizeData);
        if(invalidData.length !== 0) {
            var invalidDataName = invalidData.replace('_', ' ');
            if (invalidDataName != 'quantity'){
                jumpToElement('_'+invalidDataName);
                var styleElem = $('#_'+invalidDataName);
                animateStyles(styleElem, 6);
            }
        } else {
            url += parseParam(personalizeData);
            personalize.attr('href', url);
        }
    };

    var getEnNameById = function(id){
        var attrName = '';
        if(id !== "" || id !== 0) {
            attrDl = styles_form.find('dl[data-style-id="'+ id +'"]');
            if(attrDl.attr('data-kvalue') != undefined ) {
                attrName = attrDl.attr('data-kvalue');
            }
        }
        return attrName;
    };

    var parseParam=function(param){
        var paramStr = '';
        $.each(param,function(i){
            paramStr+='&'+ i + '=' + param[i];
        });
        return paramStr;
    };

    var checkValidPersonalizeData = function(personalizeData){
        valid = "";
        for(var i in personalizeData) {
            if(personalizeData[i] === "0" || personalizeData[i] === "") {
                valid = i;
                break;
            }
        }
        return valid;
    };

    function cal_personalize_fee() {
        var unit_fee = 0;
        var total = 0;
        var personalize_total = $('#personalize-total');
        var selectedNum = parseInt(styles_form.find('input[name="goods_number"]').val());
        var styleElements = pageData.addedFee.styleElements;
        var seletedEle = null;
        var added_fee = 0;
        var total_added_fee = 0;
        if(selectedNum != 0) {
            for (var i in styleElements) {
                var selectEle = styles_form.find('#'+ styleElements[i]);
                var seletedEleId = selectEle.attr('value') == undefined ? selectEle.val() : selectEle.attr('value');
                if(seletedEleId != undefined) {
                    added_fee = parseFloat(pageData.addedFee.style[seletedEleId]);
                    added_fee = isNaN(added_fee) ? 0 : added_fee;
                    total_added_fee += added_fee;
                }
            }
            unit_fee = parseFloat(pageData.addedFee.quantity[selectedNum]);
            total = (unit_fee + total_added_fee) * selectedNum;
        }
        personalize_total.html(priceStyle.formatPrice(total));
    }

    function changeSelectType() {
        var allStyles = styles_form.find(".all-styles")
        var specialOfferStyles = styles_form.find(".special-offer-styles")
        var ship24hrsStyles = styles_form.find(".ship-in-24hrs-styles")

        if (specialOfferStyles.length === 0 && ship24hrsStyles.length === 0) {
            return
        }

        var taketimeText = $(".prod-info-time .taketime_context_wrap .made-to-order-left")
        var taketimeImg = $(".prod-info-time .made-to-order_simple_tab_img")

        if (is24hrsMode()) {
            if (isCheckedCustom) {
                setCustom(false)
                isCheckedCustom = true
            }

            if (styles_form.find('input[name="unsure_size"]').prop('checked')) {
                styles_form.find('input[name="unsure_size"]').prop('checked', false);
                setUnsureSize(false)
                isCheckedUnsureSize = true
            }

            allStyles.hide().find("input,select").prop('disabled', true)
            specialOfferStyles.hide().find("input,select").prop('disabled', true)
            ship24hrsStyles.show().find("input,select").prop('disabled', false)

            cal_fee()

            taketimeImg.hide()
            taketimeText.hide()
            
            setStyleSelectable();
            showSpecialSelectTypeSizeDetail()
        } else if(isSpecialOfferMode()) {
            if (isCheckedCustom) {
                setCustom(false)
                isCheckedCustom = true
            }

            if (styles_form.find('input[name="unsure_size"]').prop('checked')) {
                styles_form.find('input[name="unsure_size"]').prop('checked', false);
                setUnsureSize(false)
                isCheckedUnsureSize = true
            }

            allStyles.hide().find("input,select").prop('disabled', true)
            specialOfferStyles.show().find("input,select").prop('disabled', false)
            ship24hrsStyles.hide().find("input,select").prop('disabled', true)

            cal_fee()

            taketimeImg.hide()
            taketimeText.hide()

            setStyleSelectable();
            showSpecialSelectTypeSizeDetail()
        } else {
            ship24hrsStyles.hide().find("input,select").prop('disabled', true)
            specialOfferStyles.hide().find("input,select").prop('disabled', true)
            allStyles.show().find("input,select").prop('disabled', false)

            setCustom(isCheckedCustom)
            if(isCheckedUnsureSize){
                styles_form.find('input[name="unsure_size"]').prop('checked', true);
                setUnsureSize(true)
                isCheckedUnsureSize = false
            }

            var type = styles_form.find('.custom-size-switch-btn.active').data('value')

            if (type == '_cm') {
                styles_form.find('.inch_select').hide().find('select').prop('disabled', true)
            } else {
                styles_form.find('.cm_select').hide().find('select').prop('disabled', true)
            }

            taketimeText.show()
            if (window.innerWidth >= 1400) {
                taketimeImg.show()
            }
        }
        setSizeTipClass();

        switchProcessingTime()

        // 更新P图,SimilarGoods,Swatch
        var colorBox = styles_form.find('input[name="styles[select][color]"]').not(':disabled').parent()
        var selectedBoxItem = colorBox.find('.pis-color-a .selected').parent()
        selectedBoxItem.click()
        var colorSelect = styles_form.find('select[name="styles[select][color]"]').not(':disabled')
        colorSelect.change()
        var kcolor = selectedBoxItem.attr('data-kvalue') || colorSelect.find('option:selected').attr('kvalue')
        var selectedItem = getSelectedItem()

        if (kcolor != undefined && selectedItem != undefined) {
            kcolor = kcolor.replace(' ', '_').toLowerCase()
            if (thumb.change_pics != undefined) {
                thumb.change_pics(selectedItem)
            }
            setShopThisColorUrl(kcolor)
            setSwatchIconClass(kcolor)
            setBoundModuleImg(kcolor)
        }
        addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
    }

    function is24hrsMode() {
        return styles_form.find(".styles-show-select-type.selected").attr("type") == 'shipIn24hrsStyleMode'
    }

    function isSpecialOfferMode() {
        return styles_form.find(".styles-show-select-type.selected").attr("type") == 'specialOfferStyleMode'
    }

    function showSizeDetail(selectedSize) {
        var sizeSelect = styles_form.find('select[name="styles[select][size]"]');
        if(sizeSelect.length == 0 && pageData.is_sample_dress){
            sizeSelect = styles_form.find('#_size');
            var sizeSelectOption = sizeSelect.find('.selected');
        }else{
            var sizeSelectOption = typeof selectedSize === 'undefined' ? sizeSelect.find('option:selected') : selectedSize;
        }
        var sizeDetailShow = styles_form.find("#size_detail_show");
        if (sizeDetailShow.length > 0) {
            sizeDetailShow.find('tr[size]').hide().removeClass("selected");
            sizeDetailShow.find('table').hide();
            if (sizeSelect.val() > 0 || (sizeSelectOption.length > 0 && pageData.is_sample_dress)) {
                var unit = sizeDetailShow.find(".size-detail-show-unit.selected").attr("unit");
                sizeDetailShow.find('table[unit="' + unit + '"]').show();
                var size = sizeSelectOption.attr("kvalue");

                var isLackSizeDetail = sizeDetailShow.find('table[unit="' + unit + '"]').find('tr[size="' + size +'"]').length;
                if(isLackSizeDetail === 0){
                    sizeDetailShow.hide();
                    return 0;
                }

                var sizename = sizeSelectOption.attr("sizename");
                sizeDetailShow.find('tr[size="' + size +'"]').show().addClass("selected").find('td:first').html(sizename);
                if (sizeSelectOption.prev().attr('value') > 0) {
                    sizeDetailShow.find('tr[size="' + sizeSelectOption.prev().attr('kvalue') +'"]').show().find('td:first').html(sizeSelectOption.prev().attr("sizename"));
                } else {
                    sizeDetailShow.find('tr[size="' + sizeSelectOption.next().next().attr('kvalue') +'"]').show().find('td:first').html(sizeSelectOption.next().next().attr("sizename"));
                }
                if (sizeSelectOption.next().attr('value') > 0) {
                    sizeDetailShow.find('tr[size="' + sizeSelectOption.next().attr('kvalue') +'"]').show().find('td:first').html(sizeSelectOption.next().attr("sizename"));
                } else {
                    sizeDetailShow.find('tr[size="' + sizeSelectOption.prev().prev().attr('kvalue') +'"]').show().find('td:first').html(sizeSelectOption.prev().prev().attr("sizename"));
                }
                sizeDetailShow.show();
            } else {
                sizeDetailShow.hide();
            }
        }
    }

    function showSpecialSelectTypeSizeDetail() {
        var sizeSelect = styles_form.find('input[name="styles[select][size]"]').not(':disabled');
        var sizeSelectOption = sizeSelect.parent().find('a.pis-size-a.selected');
        var sizeDetailShow = sizeSelect.parent().siblings("#size_detail_show");

        if (sizeDetailShow.length > 0) {
            sizeDetailShow.find('tr[size]').hide().removeClass("selected");
            sizeDetailShow.find('table').hide();
            if (sizeSelect.val() > 0) {
                var unit = sizeDetailShow.find(".size-detail-show-unit.selected").attr("unit");
                sizeDetailShow.find('table[unit="' + unit + '"]').show();
                var size = sizeSelectOption.find("dl").attr("kvalue");

                var isLackSizeDetail = sizeDetailShow.find('table[unit="' + unit + '"]').find('tr[size="' + size +'"]').length;
                if(isLackSizeDetail === 0){
                    sizeDetailShow.hide();
                    return 0;
                }

                var sizename = sizeSelectOption.find("dl").attr("sizename");

                sizeDetailShow.find('tr[size="' + size +'"]').show().addClass("selected").find('td:first').html(sizename);
                if (sizeSelectOption.prev().find('dl').attr('data-style-id') > 0) {
                    sizeDetailShow.find('tr[size="' + sizeSelectOption.prev().find("dl").attr('kvalue') +'"]').show().find('td:first').html(sizeSelectOption.prev().find("dl").attr("sizename"));
                } else {
                    sizeDetailShow.find('tr[size="' + sizeSelectOption.next().next().find("dl").attr('kvalue') +'"]').show().find('td:first').html(sizeSelectOption.next().next().find("dl").attr("sizename"));
                }
                if (sizeSelectOption.next().find('dl').attr('data-style-id') > 0) {
                    sizeDetailShow.find('tr[size="' + sizeSelectOption.next().find("dl").attr('kvalue') +'"]').show().find('td:first').html(sizeSelectOption.next().find("dl").attr("sizename"));
                } else {
                    sizeDetailShow.find('tr[size="' + sizeSelectOption.prev().prev().find("dl").attr('kvalue') +'"]').show().find('td:first').html(sizeSelectOption.prev().prev().find("dl").attr("sizename"));
                }
                sizeDetailShow.show();
            } else {
                sizeDetailShow.hide();
            }
        }
    }

    function initStyleConfig() {

        if (userAgent.isIpad()) {
            var allSize = {};
            var sizeOptions = $('#_size').find('option');
            if(pageData.is_sample_dress && sizeOptions.length == 0){
                //sample dress size
                var sizeOptions = $('#_size').find('span');
            }
            sizeOptions.each(function(){
                var id = $(this).attr("value");
                if (id > 0) {
                    var data = {
                        "value" : id,
                        "kvalue": $(this).attr("kvalue"),
                        "text"  : $(this).attr("text")
                    };
                    allSize[id] = data;
                }
            });

            var allColor = {};
            var colorOptions = $('#_color').find('option');
            colorOptions.each(function(){
                var id = $(this).val();
                if (id > 0) {
                    var data = {
                        "value" : id,
                        "kvalue": $(this).attr("kvalue"),
                        "text"  : $(this).attr("text")
                    };
                    allColor[id] = data;
                }
            });
            pageData.allSize = allSize;
            pageData.allColor = allColor;
        }

        var styleId = 0;
        var _color = $('#_color').find('option:selected');
        if (_color.length > 0) {
            styleId = _color.attr('value');
        } else if (styles_form.find('input[name="styles[select][color]"]').length > 0) {
            styleId = styles_form.find('input[name="styles[select][color]"]').attr('value');
        }

        if (styleId > 0) {
            setSizeWithColorChange(styleId);
        }
    }

    function getOptionByData(data) {
        return "<option value=\"" + data["value"] + "\" kvalue=\"" + data["kvalue"] +
                "\" text=\"" + data["text"] + "\" >" + data["text"] + "</option>"
    }

    function updateSampleShoesStyleByConfig(styleId, goodsStyleConfig, targetStyleElement) {
        if($('#_product_country').length > 0){
            var selectedFacility = $('#_product_country').find('option:selected').attr('kvalue');
            if(typeof goodsStyleConfig[selectedFacility] != 'undefined'){
                goodsStyleConfig = goodsStyleConfig[selectedFacility];
            }
        }
        var styleOptions = targetStyleElement.find('option');

        styleOptions.each(function(){
            $(this).show();
        });
        if(typeof goodsStyleConfig[styleId] != 'undefined') {
            var removeSelected = true;
            var selectedStyleId = targetStyleElement.find('option:selected').val();
            if ($.inArray(selectedStyleId, goodsStyleConfig[styleId]) >= 0) {
                removeSelected = false;
            }
            styleOptions.each(function(){
                var id = $(this).val();
                if ($.inArray(id, goodsStyleConfig[styleId]) < 0 && id > 0) {
                    $(this).hide();
                }
                if (removeSelected) {
                    $(this).removeAttr('selected')
                }
            });
        }
    }

    function updateSampleDressSizeByConfig(styleId, goodsStyleConfig) {
        var sizeOptions = $('#_size').find('span');

        if($('#_product_country').length > 0){
            var selectedFacility = $('#_product_country').find('option:selected').attr('kvalue');
            if(typeof goodsStyleConfig[selectedFacility] != 'undefined'){
                goodsStyleConfig = goodsStyleConfig[selectedFacility];
            }
        }
        if (styleId == 0) {
            sizeOptions.each(function(){
                $(this).removeClass('disable');
            });
        }else if(goodsStyleConfig[styleId]) {
            var removeSelected = true;
            var selectedSizeId = $('#_size').find('input').val();
            if ($.inArray(selectedSizeId, goodsStyleConfig[styleId]) >= 0) {
                removeSelected = false;
            } else {
                $('#_size').find('input').val('');
                $('.simple_tab_select_res').find('.selected_tip').html(_lang.page_goods_select_size_tip);
            }
            sizeOptions.each(function(){
                $(this).removeClass('disable');
                if (removeSelected) {
                    $(this).removeClass('selected');
                }

                var id = $(this).attr("value");
                if ($.inArray(id, goodsStyleConfig[styleId]) >= 0) {
                    $(this).show();
                } else if(id != 0) {
                    $(this).addClass('disable');
                }
            });
        }else {
            sizeOptions.each(function(){
                $(this).removeClass('selected').addClass('disable');
            });
        }
    }

    function updateSampleDressColorByConfig(styleId, goodsStyleConfig) {
        var colorOptions = $('.pis-color-box .pis-color-a').find('dt');
        var colorSelect = $('#_color');

        if($('#_product_country').length > 0){
            var selectedFacility = $('#_product_country').find('option:selected').attr('kvalue');
            if(typeof goodsStyleConfig[selectedFacility] != 'undefined'){
                goodsStyleConfig = goodsStyleConfig[selectedFacility];
            }
        }
        if (styleId == 0) {
            colorOptions.each(function(){
                $(this).removeClass('disable');
                $(this).parents('.pis-color-a').removeClass('disable');
                $(this).parents('.pis-color-a').show();
            });
        }else if(goodsStyleConfig[styleId]) {
            colorOptions.each(function(){
                var currStyleId = $(this).parent('dl').attr('data-style-id');
                if ($.inArray(currStyleId, goodsStyleConfig[styleId]) >= 0) {
                    $(this).removeClass('disable');
                    $(this).parents('.pis-color-a').removeClass('disable');
                    $(this).parents('.pis-color-a').show();
                } else {
                    $(this).removeClass('selected').addClass('disable');
                    $(this).parents('.pis-color-a').removeClass('selected').addClass('disable');
                    $(this).parents('.pis-color-a').hide();
                }
            });

            var selectedStyleId = colorSelect.val();
            if($.inArray(selectedStyleId, goodsStyleConfig[styleId]) < 0) {
                colorSelect.val('0');
                colorSelect.parent().find('strong.selected_tip').html('');
            }
        }else {
            colorOptions.each(function(){
                $(this).removeClass('selected').addClass('disable');
                $(this).parents('.pis-color-a').removeClass('selected').addClass('disable');
                $(this).parents('.pis-color-a').hide();
            });
            colorSelect.val('0');
            colorSelect.parent().find('strong.selected_tip').html('');
        }
    }

    function setSizeWithColorChange(styleId) {
        var goodsStyleConfig = getGoodsStyleConfig();
        if (!goodsStyleConfig) {
            return;
        }
        var sizeOptions = $('#_size').find('option');
        var sizeSelectSpanItems = $('#style-select-item-size').find('.style-select-item');

        if (userAgent.isIpad()) {
            if(pageData.is_sample_dress){
                // if(sizeOptions.length == 0){
                //     updateSampleDressSizeByConfig(styleId, goodsStyleConfig);
                // }else{
                //     updateSampleShoesStyleByConfig(styleId, goodsStyleConfig, $('#_size'));
                // }
            } else {
                var curSizeId = $('#_size option:selected').val();
                sizeOptions.each(function(){
                    var id = $(this).val();
                    if (id > 1) {
                        $(this).remove();
                    }
                });
                if (styleId == 0) {
                    for (var id in pageData.allSize) {
                        var optionHtm = getOptionByData(pageData.allSize[id]);
                        $('#_size').append(optionHtm);
                    }
                    sizeSelectSpanItems.each(function(){
                        $(this).removeClass('disabled');
                        $(this).show();
                    });
                } else{
                    for (var id in pageData.allSize) {
                        if ($.inArray(id, goodsStyleConfig[styleId]) >= 0) {
                            var optionHtm = getOptionByData(pageData.allSize[id]);
                            $('#_size').append(optionHtm);
                        }
                    }
                    sizeSelectSpanItems.each(function(){
                        var id = $(this).attr('value');
                        if ($.inArray(id, goodsStyleConfig[styleId]) >= 0) {
                            $(this).removeClass('disabled');
                            $(this).show();
                        } else if(id != 0) {
                            $(this).addClass('disabled');
                            $(this).removeClass('selected');
                            $(this).hide();
                        }
                    });
                }
                $("#_size").prop('value',curSizeId);
            }
        } else {
            if(pageData.is_sample_dress){
                // if(sizeOptions.length == 0){
                //     updateSampleDressSizeByConfig(styleId, goodsStyleConfig);
                // }else{
                //     updateSampleShoesStyleByConfig(styleId, goodsStyleConfig, $('#_size'));
                // }
            } else {
                if (styleId == 0) {
                    sizeOptions.each(function(){
                        $(this).show();
                    });
                    sizeSelectSpanItems.each(function(){
                        $(this).removeClass('disabled');
                        $(this).show();
                    });
                } else if(goodsStyleConfig[styleId]) {
                    sizeOptions.each(function(){
                        var id = $(this).val();
                        if ($.inArray(id, goodsStyleConfig[styleId]) >= 0) {
                            $(this).show();
                        } else if(id != 0) {
                            $(this).hide();
                            $(this).prop('selected', false);
                        }
                    });
                    sizeSelectSpanItems.each(function(){
                        var id = $(this).attr('value');
                        if ($.inArray(id, goodsStyleConfig[styleId]) >= 0) {
                            $(this).removeClass('disabled');
                            $(this).show();
                        } else if(id != 0) {
                            $(this).addClass('disabled');
                            $(this).removeClass('selected');
                            $(this).hide();
                        }
                    });
                } else {
                    sizeOptions.each(function(){
                        var id = $(this).val();
                        if (id != 0) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        }
                    });
                    sizeSelectSpanItems.each(function(){
                        var id = $(this).attr('value');
                        if (id != 0) {
                            $(this).addClass('disabled');
                            $(this).hide();
                        } else {
                            $(this).removeClass('disabled');
                            $(this).show();
                        }
                    });
                }
            }
        }
        addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
    }

    function setColorWithSizeChange (styleId) {
        var goodsStyleConfig = getGoodsStyleConfig();
        if (!goodsStyleConfig) {
            return;
        }

        var colorOptions = $('#_color').find('option');
        var colorSelectSpanItems = $('#style-select-item-color').find('.style-select-item');
        var colorLumps = styles_form.find('.color .pis-color-a');
        var elems = colorOptions.length > 0 ? colorOptions : (colorLumps.length > 0 ? colorLumps : []);
        var elemType = colorOptions.length > 0 ? 'selectBox' : (colorLumps.length > 0 ? 'colorLump' : '');


        if (elems.length > 0) {
            if(pageData.is_sample_dress){
                if(colorOptions.length == 0){
                    updateSampleDressColorByConfig(styleId, goodsStyleConfig);
                }else{
                    updateSampleShoesStyleByConfig(styleId, goodsStyleConfig, $('#_color'));
                }
            }else if (userAgent.isIpad() &&elemType == 'selectBox') {
                var curColorId = $('#_color option:selected').val();
                elems.each(function(){
                    var id = $(this).val();
                    if (id > 1) {
                        $(this).remove();
                    }
                });
                if (styleId == 0) {
                    for (var id in pageData.allColor) {
                        var optionHtm = getOptionByData(pageData.allColor[id]);
                        $('#_color').append(optionHtm);
                    }
                    colorSelectSpanItems.each(function(){
                        $(this).removeClass('disabled');
                    });
                } else {
                    for (var id in pageData.allColor) {
                        if ($.inArray(id, goodsStyleConfig[styleId]) >= 0) {
                            var optionHtm = getOptionByData(pageData.allColor[id]);
                            $('#_color').append(optionHtm);
                        }
                    }
                    colorSelectSpanItems.each(function(){
                        var id = $(this).attr('value');
                        if ($.inArray(id, goodsStyleConfig[styleId]) >= 0) {
                            $(this).removeClass('disabled');
                        } else if(id != 0) {
                            $(this).addClass('disabled');
                            $(this).removeClass('selected');
                        }
                    });
                }
                $("#_color").prop('value',curColorId);
            } else {
                if (styleId == 0) {
                    elems.each(function(){
                        $(this).show();
                    });
                    colorSelectSpanItems.each(function(){
                        $(this).removeClass('disabled');
                    });
                } else if(goodsStyleConfig[styleId]) {
                    elems.each(function () {
                        var id = 0;
                        if (elemType == 'selectBox') {
                            id = $(this).val();
                        } else if (elemType == 'colorLump') {
                            id = $(this).find(".pis-color").attr('data-style-id');
                        }
                        if ($.inArray(id, goodsStyleConfig[styleId]) >= 0) {
                            $(this).show();
                        } else if(id != 0) {
                            $(this).hide();
                        }
                    });
                    colorSelectSpanItems.each(function(){
                        var id = $(this).attr('value');
                        if ($.inArray(id, goodsStyleConfig[styleId]) >= 0) {
                            $(this).removeClass('disabled');
                        } else if(id != 0) {
                            $(this).addClass('disabled');
                            $(this).removeClass('selected');
                        }
                    });
                } else {
                    elems.each(function(){
                        var id = 0;
                        if (elemType == 'selectBox') {
                            id = $(this).val();
                        } else if (elemType == 'colorLump') {
                            id = $(this).find(".pis-color").attr('data-style-id');
                        }
                        if (id != 0) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        }
                    });
                    colorSelectSpanItems.each(function(){
                        var id = $(this).attr('value');
                        if (id != 0) {
                            $(this).addClass('disabled');
                        } else {
                            $(this).removeClass('disabled');
                        }
                    });
                }
            }
        }
        addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
    }

    function getGoodsStyleConfig() {
        if (!pageData.goodsStyleConfig || Object.keys(pageData.goodsStyleConfig).length == 0) {
            return false;
        }
        if ($('#_product_country').length > 0) {
            return pageData.goodsStyleConfig;
        }
        var _goodsStyleConfig = {};
        for (var i in pageData.goodsStyleConfig) {
            for (var j in pageData.goodsStyleConfig[i]) {
                if (!_goodsStyleConfig[pageData.goodsStyleConfig[i][j]]) {
                    _goodsStyleConfig[pageData.goodsStyleConfig[i][j]] = [];
                }
                _goodsStyleConfig[pageData.goodsStyleConfig[i][j]].push(i);
            }
        }
        return $.extend({}, pageData.goodsStyleConfig, _goodsStyleConfig);
    }

    function switchProcessingTime() {
        // Custom Size return
        var isCustomSize = styles_form.find('input[name="custom"]').prop('checked');

        var isUnsureSize = styles_form.find('input[name="unsure_size"]').prop('checked');
        addToCartUtil.showProcessingTime((isCustomSize||isUnsureSize), styles_form, stylesCheckDelivery)
    }

    function setStyleSelectable() {
        if (!is24hrsMode() && !isSpecialOfferMode()) {
            return
        }

        var selectedStyle = [];
        for (var i in pageData.selectStyles) {
            var styleName = pageData.selectStyles[i];
            var selectableStyle = [];
            if(is24hrsMode()) {
                selectableStyle = addToCartUtil.getSelectableStyle(selectedStyle, styleName);
            } else if(isSpecialOfferMode()) {
                selectableStyle = addToCartUtil.getSelectableStyleFromSpecialSku(selectedStyle, styleName);
            }

            var styleInput = styles_form.find('input[name="styles[select][' + styleName.toLowerCase().replace(/\s+/g, "_") + ']"]').not('[disabled]');
            styleInput.parent().find('a.pis-' + styleName.toLowerCase().replace(/\s+/g, "_").replace("'", "\\\'") + '-a').each(function() {
                var styleId = $(this).find('dl').attr('data-style-id');

                if ($.inArray(styleId, selectableStyle) == -1) {
                    if ($(this).hasClass('selected')) {
                        styleInput.val(0);
                        styleInput.parent().find('strong.selected_tip').html('');
                        $(this).removeClass('selected');
                        if(styleName.toLowerCase().replace(/\s+/g, "_") === 'size') {
                            showSpecialSelectTypeSizeDetail();
                        }
                    }

                    $(this).addClass('disabled')
                    $(this).hide();
                } else {
                    $(this).removeClass('disabled')
                    $(this).show();
                }
            });

            var validStyle = styleInput.parent().find('a.pis-' + styleName.toLowerCase().replace(/\s+/g, "_").replace("'", "\\\'") + '-a').not('.disabled');
            if (validStyle.length === 1 && !validStyle.eq(0).hasClass('selected')) {
                validStyle.eq(0).click();
            }

            selectedStyle[styleName] = styleInput.val();
        }
    }

    function getGoodsStylePrice() {
        // empty goods style price return
        var check = false;
        for (var i in pageData.goodsStylePrice) {
            check = true;
            break;
        }
        if (!check) {
            return;
        }

        var styleList = {};
        styles_form.find('select').each(function(){
            if($(this).attr('name') == 'styles[select][hair_length]'){
                var styleId = $('select[name="styles[select][hair_length]"] option:selected').attr('value');
                if(styleId > 0){
                    styleList['hair_length'] = styleId;
                }
            }
            if($(this).attr('name') == 'styles[select][size]'){
                var styleId = $('select[name="styles[select][size]"] option:selected').attr('value');
                if(styleId > 0){
                    styleList['size'] = styleId;
                }
            }
            if($(this).attr('name') == 'styles[select][veil_length]'){
                var styleId = $('select[name="styles[select][veil_length]"] option:selected').attr('value');
                if(styleId > 0){
                    styleList['veil_length'] = styleId;
                }
            }
        });

        if(checkStylePrice(styleList)){
            cal_fee();
        }
    }

    function checkStylePrice(styleList) {
        var plusPriceArray = calcGoodsStylePrice(styleList);
        if (plusPriceArray[0] > 0 && plusPriceArray[1] > 0) {
            pageData.plus_price = plusPriceArray[0];
            pageData.plus_price_USDollar = plusPriceArray[1];
            return true;
        }

        // var plus_price = 0;
        // for (var name in styleList) {
        //     var temp = [];
        //     temp[name] = styleList[name];
        //     var tempPrice = calcGoodsStylePrice(temp);
        //     plus_price = parseInt(plus_price) + parseInt(tempPrice);
        // }

        pageData.plus_price = 0;
        pageData.plus_price_USDollar = 0;
        return true;
    }

    function calcGoodsStylePrice(styleList) {
        stylepriceLoop:
        for(var i in pageData.goodsStylePrice){
            var config = pageData.goodsStylePrice[i];
            for(var styleName in config['relation']){
                if(typeof styleList[styleName] == 'undefined'){
                    continue stylepriceLoop;
                }
            }
            for(var name in styleList){
                if(typeof config['relation'] == 'undefined'
                   || typeof config['relation'][name] == 'undefined'
                   || $.inArray(styleList[name], config['relation'][name]) == -1){
                    continue stylepriceLoop;
                }
            }
            return [config['exchanged_plus_price'], config['plus_price']];
        }
        return [0,0];
    }

    function setShopThisColorUrl(kcolor) {
        var shopThisColor = $('#shop_this_color');
        if (kcolor == 'picture'|| kcolor == 'as_picture') {
            shopThisColor.hide();
            return;
        }
        if (pageData.shopThisColorUrls !== undefined && pageData.shopThisColorUrls &&
            pageData.shopThisColorUrls[kcolor]!== undefined && pageData.shopThisColorUrls[kcolor]) {
            shopThisColor.attr('href', '/' + pageData.shopThisColorUrls[kcolor]);
            shopThisColor.show();
        } else {
            shopThisColor.hide();
        }
    }

    function setSwatchIconClass(kcolor) {
        if ($.inArray(kcolor, pageData.hideOrderSwatchSpecialColor) >= 0) {
            $('.color_chart_and_swatch').hide();
        } else {
            $('.color_chart_and_swatch').show();
        }
        var swatchIcon = $('#swatch_icon');
        swatchIcon.removeClass();
        swatchIcon.addClass("swatch-icon " + kcolor);
        setColorSwatchHref(kcolor);
    }

    function setBoundModuleImg(kcolor) {
        if(typeof kcolor != "undefined") {
            var color = kcolor.toLowerCase().replace(' ', '_');
            getSimilarGoods(color);
            setBestsellingGoodsImg(color);
        }
    }

    function getSimilarGoods(kcolor) {
        if (typeof pageData.similarRepeat == "undefined" || pageData.similarRepeat == 1) {
            pageData.similarRepeat = 1;
            if (typeof pageData.similarColorList == "undefined") {
                pageData.similarColorList = [];
            }
            if (typeof pageData.similarColorList[kcolor] == "undefined") {
                pageData.similarColorList[kcolor] = []
                var data = {
                    act: "get_similar_products",
                    goods_id: pageData.goods_id,
                    cat_id: pageData.cat_id,
                    color: kcolor,
                };

                $.ajax({
                    type: "GET",
                    url: webData.WEB_ROOT + "ajax.php",
                    cache: false,
                    dataType: "json",
                    data: data,
                    success: function (r) {
                        if (!r || r.code != 0) {
                            return false;
                        }
                        pageData.similarRepeat = r.data.similarRepeat;
                        if (r.data.similarRepeat == 1) {
                            pageData.similarColorList[kcolor] = r.data.products;
                        }
                        setSimilarGoodsImg(kcolor);
                    },
                });
            } else {
                setSimilarGoodsImg(kcolor);
            }
        } else {
            pageData.similarRepeat = 0;
            setSimilarGoodsImg(kcolor);
        }
    }

    function set_best_selling_imgs() {
        //select color
        var colorSelector = styles_form.find('#_color');
        var color = colorSelector.find('option:selected').attr('kvalue');
        if(!color) {
            //color lump
            var colorDom = colorSelector.parent('.pis-color-box').find('.selected').parent('.pis-color');
            color = colorDom.data('kvalue');
        }
        if(!color) {
            return
        }
        color = color.toLowerCase().replace(' ', '_');
        setBestsellingGoodsImg(color);
    }

    function setBestsellingGoodsImg(kcolor) {
        var showPhoto = [];
        if (pageData.bestsellingGoodsPhotos != "") {
            var bestsellingGoodsPhotos = eval("(" + pageData.bestsellingGoodsPhotos + ")");
            for(var goodId in bestsellingGoodsPhotos) {
                showPhoto[goodId] = false;
                if ($('#bestselling_goods_'+goodId).length > 0 && typeof (kcolor) != "undefined") {
                    for(var index in bestsellingGoodsPhotos[goodId]) {
                        if (typeof bestsellingGoodsPhotos[goodId][index]['img_color'] != "undefined" &&
                            bestsellingGoodsPhotos[goodId][index]['img_color'].toLowerCase().replace(' ', '_') === kcolor) {
                            var newSrc = bestsellingGoodsPhotos[goodId]['goods_thumb_prefix'] + bestsellingGoodsPhotos[goodId][index]['url'];
                            $('#bestselling_goods_'+goodId).attr('src',newSrc);

                            var newHref = $('#bestselling_goods_'+goodId).parent('a').data('href') + '&filterColor=' + kcolor;
                            $('#bestselling_goods_'+goodId).parent('a').attr('href', newHref)
                            showPhoto[goodId] = true;
                            if(bestsellingGoodsPhotos[goodId][index]['is_default'] == 1){
                                break;
                            }
                        }
                    }
                }
            }
        }
        if (pageData.bestsellingGoodsShopByColorImgs != "") {
            var bestsellingGoodsShopByColorImgs = eval("(" + pageData.bestsellingGoodsShopByColorImgs + ")");
            for(var x in bestsellingGoodsShopByColorImgs) {
                if (!showPhoto[x] && $('#bestselling_goods_'+x).length > 0) {
                    if (typeof(bestsellingGoodsShopByColorImgs[x][kcolor]) != "undefined") {
                        var newSrc = bestsellingGoodsShopByColorImgs[x]['goods_thumb_prefix'] + bestsellingGoodsShopByColorImgs[x][kcolor];
                        $('#bestselling_goods_'+x).attr('src',newSrc);

                        var newHref = $('#bestselling_goods_'+x).parent('a').data('href') + '&filterColor=' + kcolor;
                        $('#bestselling_goods_'+x).parent('a').attr('href', newHref)
                    }
                }
            }
        }
    }
    function setSimilarGoodsImg(kcolor) {
        var showPhoto = [];
        if (pageData.similarRepeat == 0) {
            if (pageData.otherSimilarGoods != "") {
                var otherSimilarGoodsImg = eval("(" + pageData.otherSimilarGoods + ")");
                for (var goodId in otherSimilarGoodsImg) {
                    showPhoto[goodId] = false;
                    if ($('#similar_good_' + goodId).length > 0 && typeof (kcolor) != "undefined") {
                        for (var index in otherSimilarGoodsImg[goodId]) {
                            if (typeof otherSimilarGoodsImg[goodId][index]['img_color'] != "undefined" &&
                                otherSimilarGoodsImg[goodId][index]['img_color'].toLowerCase().replace(' ', '_') === kcolor.toLowerCase().replace(' ', '_')) {
                                var newSrc = otherSimilarGoodsImg[goodId]['goods_thumb_prefix'] + otherSimilarGoodsImg[goodId][index]['url'];
                                $('#similar_good_' + goodId).attr('src', newSrc);
                                $('#find_similar_good_' + goodId).attr('src', newSrc);

                                var newHref = $('#similar_good_' + goodId).parent('a').data('href') + '&filterColor=' + kcolor.toLowerCase().replace(' ', '_');
                                $('#similar_good_' + goodId).parent('a').attr('href', newHref)
                                $('#find_similar_good_' + goodId).parent('a').attr('href', newHref)
                                showPhoto[goodId] = true;
                                if (otherSimilarGoodsImg[goodId][index]['is_default'] == 1) {
                                    break;
                                }
                            }
                        }
                    }
                }
            }
            if (pageData.similarGoods != "") {
                var similarGoodsImg = eval("(" + pageData.similarGoods + ")");
                for (var x in similarGoodsImg) {
                    if (!showPhoto[x] && $('#similar_good_' + x).length > 0) {
                        if (typeof (similarGoodsImg[x][kcolor]) != "undefined") {
                            var newSrc = similarGoodsImg[x]['goods_thumb_prefix'] + similarGoodsImg[x][kcolor];
                            $('#similar_good_' + x).attr('src', newSrc);
                            $('#find_similar_good_' + x).attr('src', newSrc);

                            var newHref = $('#similar_good_' + x).parent('a').data('href') + '&filterColor=' + kcolor.toLowerCase().replace(' ', '_');
                            $('#similar_good_' + x).parent('a').attr('href', newHref)
                            $('#find_similar_good_' + x).parent('a').attr('href', newHref)
                        }
                    }
                }
            }
        }
        else {
            var similarGoods = pageData.similarColorList[kcolor];
            var similarList = $('.similar_goods_list').find('.goods_content');
            var findSimilarList = $('.find-similar-box').find('.goods_content');
            let posIndex = 0;
            for (var x in similarGoods) {
                posIndex++;
                if (isNaN(x)) {
                    continue;
                }
                var similarDom = $(similarList[x]);
                similarDom.find('a').attr('href', similarGoods[x].url + '?filterColor=' + similarGoods[x].curImgColor.toLowerCase().replace(' ', '_') + '&pos=similar_styles_' + posIndex);
                similarDom.find('.similar_goods_pic').attr('src', similarGoods[x]['goods_thumb_prefix'] + similarGoods[x]['original_goods_thumb']);
                similarDom.find('.similar_goods_price').remove();
                similarDom.find('.similar_market_price').remove();
                
                var findSimilarDom = $(findSimilarList[x]);
                findSimilarDom.find('a').attr('href', similarGoods[x].url + '?filterColor=' + similarGoods[x].curImgColor.toLowerCase().replace(' ', '_'));
                findSimilarDom.find('.similar_goods_pic').attr('src', similarGoods[x]['goods_thumb_prefix'] + similarGoods[x]['original_goods_thumb']);
                findSimilarDom.find('.similar_goods_price').remove();
                findSimilarDom.find('.similar_market_price').remove();
                findSimilarDom.find('.find_similar_icon').remove();
                
                if (parseInt(similarGoods[x].off) > 0) {
                    similarDom.append('<p class="similar_goods_price with-off">' + similarGoods[x].display_shop_price + '</p>');
                    similarDom.append('<p class="similar_market_price">' + similarGoods[x].display_market_price + '</p>');

                    findSimilarDom.append('<p class="similar_goods_price with-off">' + similarGoods[x].display_shop_price + '</p>');
                    findSimilarDom.append('<p class="similar_market_price">' + similarGoods[x].display_market_price + '</p>');
                    findSimilarDom.append('<div class="find_similar_icon"><span class="icon-off icon-off-en">' + similarGoods[x].off + '</span></div>');
                } else {
                    similarDom.append('<p class="similar_goods_price" >' + similarGoods[x].display_shop_price + '</p>');
                    findSimilarDom.append('<p class="similar_goods_price" >' + similarGoods[x].display_shop_price + '</p>');
                    
                }
            }
        }
        if(!isOnSale==0){
            showFindSimilar();
        }
    }
    function setColorSwatchHref(kcolor) {
        var swatch_color_a= styles_form.find('.color_chart_and_swatch').children('div').find("a")
        var swatch_color_href= swatch_color_a.attr('href')
        if(swatch_color_href != undefined){
            var swatch_color_length = swatch_color_href.indexOf('?swatch_color=')
            if(swatch_color_length !== -1){
                swatch_color_href = swatch_color_href.substr(0,swatch_color_length)
            }
            swatch_color_a.attr('href',swatch_color_href + '?swatch_color=' + kcolor)
        }
    }

    //自定义尺寸
    var setCustom = function (isChecked) {
        var ipt_custom = styles_form.find('input[name="custom"]');
        var ipt_size = styles_form.find('select[name="styles[select][size]"]');
        var size_detail = styles_form.find('#size_detail');
        var custom_size = styles_form.find('.custom_size');
        var custom_wrap = custom_size.find('.custom_wrap');

        if (styles_form.find('input[name="unsure_size"]').prop('checked')) {
            styles_form.find('input[name="unsure_size"]').prop('checked',false)
            setUnsureSize(false)
        }

        if (isChecked) {
            var custom_fee = parseFloat(pageData.fee.custom_fee);
            ipt_custom.closest('li').find('strong.selected_tip').html(_lang.page_goods_custom_size + " (" + priceStyle.formatWithSymbol(custom_fee, true) + ")");
            styles_form.find("#size_detail_show").hide();
            ipt_size.prop('disabled', true);
            size_detail.hide();

            ipt_custom.prop('checked', true);
            custom_size.show();

            $(".custom_checkbox").addClass("customColor");

            if (selectedWrap()) {
                custom_wrap.show();
            } else {
                custom_wrap.hide();
            }
        } else {
            ipt_custom.closest('li').find('strong.selected_tip').html(styles_form.find('select[name="styles[select][size]"]').find('option:selected').attr('text'));
            showSizeDetail();
            ipt_size.prop('disabled', false);
            ipt_custom.prop('checked', false);
            custom_size.hide();
            $(".custom_checkbox").removeClass("customColor");
            if (ipt_size.val() > 0) {
                size_detail.show();
            }
        }
        isCheckedCustom = isChecked
        
        cal_fee()
        setSizeTipClass()
    };

    var setUnsureSize = function (isChecked) {
        var ipt_custom = styles_form.find('input[name="custom"]');
        var ipt_size = styles_form.find('select[name="styles[select][size]"]');
        var size_detail = styles_form.find('#size_detail');
        var custom_size = styles_form.find('.custom_size');
        if(isChecked){
            size_detail.hide();
            styles_form.find("#size_detail_show").hide();
            custom_size.hide();
            ipt_size.prop('disabled', true);
            ipt_custom.prop('checked', false);
            ipt_size.parent().parent().find('.selected_tip').html(_lang.page_common_unsure_size);

            $(".unsure_size_checkbox").addClass("customColor");
            $(".custom_checkbox").removeClass("customColor");
        }else{
            ipt_size.prop('disabled', false);
            $(".unsure_size_checkbox").removeClass("customColor");

            ipt_custom.closest('li').find('strong.selected_tip').html(styles_form.find('select[name="styles[select][size]"]').find('option:selected').attr('text'));
            showSizeDetail();
        }
    };

    //控件宽度初始化
    var init_width = function () {
        function setMaxWidth(elems, offset) {
            elems = $(elems);
            var maxWidth = 0;
            for (var i = 0; i < elems.length; i++) {
                if (elems.eq(i).width() > maxWidth) {
                    maxWidth = elems.eq(i).width();
                }
            }
            elems.width(maxWidth + offset);
        }
        var styles_wrap = styles_form.find('ul:eq(0)');
        if (styles_wrap.hasClass('prod-info-styles')) {
            //下拉框
            setMaxWidth(styles_wrap.find('select[name^="styles[select]"]'), 0);

            //输入框
            styles_wrap.find('input[type="text"]').focus(function () {
                if ($(this).val() == $(this).attr('data-value')) {
                    $(this).val('');
                }
            }).blur(function () {
                if ($(this).val() == '' && $(this).attr('data-style-type') != 'promptText') {
                    $(this).val($(this).attr('data-value'));
                }
                if ($(this).attr('name') == 'styles[select][sash_size]') {
                    var _sash_size = parseInt($(this).val());
                    if (_sash_size == 0 || isNaN(_sash_size)) {
                        $(this).val($(this).attr('data-value'));
                    }
                }
            });
        } else {
            //label
            setMaxWidth(styles_wrap.find('label').not('.accept_our_conditions_checkbox'), 0);
        }

        //计算右侧数量按钮等外层宽度
        var cart_act = styles_form.find('.cart_act');
        if (cart_act.length > 0) {
            var cart_act_width = cart_act.width();
            var add2fav_width = cart_act.find('#add2fav').width() + 56;
            if (add2fav_width > cart_act_width) {
                cart_act.width(add2fav_width);
            }
        }
    };

    //初始化Custom Size相关数据
    var init_custom_size = function () {
        //inch/cm
        styles_form.find('.custom-size-switch-btn.active').click();

        //expand Custom Size pannel
        setCustom(styles_form.find('input[name="custom"]').prop('checked'));
    };

    var getSelectedItem = function () {
        var selected = {"color":"", "kcolor":"", "rgb":"", "trim":""};
        var selectedColor = styles_form.find('.pis-color-box input[name="styles[select][color]"], .pis-color-box input[name="styles[select][3683_favorcolor_iimmpp]"]').not(':disabled').parent().find('.pis-color-a .selected span');
        var rgb = null;
        var trim = null;
        if(selectedColor !== undefined && selectedColor.length > 0) {
            selected.color = selectedColor.parent().parent().attr('data-value');
            selected.kcolor = selectedColor.parent().parent().attr('data-kvalue');
            rgb = selectedColor.css('background-color');
            if(rgb !== undefined) {
                selected.rgb = rgb;
            }
        }
        var selectedTrim = styles_form.find('.trim-box .trim-a .selected span');
        if(selectedTrim !== undefined) {
            trim = selectedTrim.attr('class');
            if(trim !== undefined) {
                selected.trim = trim;
            }
        }
        return selected;
    };

    var getFilterColor = function () {
        var color = {"color":"", "kcolor":"", "rgb":"", "trim":""};
        if(pageData.filterColor) {
            var colorSpan = styles_form.find('.pis-color-box .pis-color-a .'+pageData.filterColor);
            var colorName = colorSpan.parent().parent().attr('data-value');

            if(typeof colorName == "undefined"){
                colorName = pageData.filterColor.replace('_', ' ');
                colorName = colorName.toLowerCase().replace(/\b[a-z]/g,function(s){return s.toUpperCase();});
            }
            color.color = colorName;
            color.kcolor = pageData.filterColor;
            rgb = colorSpan.css('background-color');
            if(rgb !== undefined) {
                color.rgb = rgb;
            }
        }
        return color;
    }

    var isEmptyObject = function(variable) {
        for (var name in variable) {
            if (variable.hasOwnProperty(name)) {
                return false;
            }
        }
        return true;
    };

    var resetStockWithWrap = function () {
        if(typeof pageData.stockWithWrapExt == 'undefined' || isEmptyObject(pageData.stockWithWrapExt)){
            return;
        }
        var colorStyleId = $('.pis-color-a').find('dt.selected').parent().attr('data-style-id');
        var sizeStyleId = $('.sample_dress_size').find('span.selected').attr('id');
        var key = 'color' + colorStyleId + 'size' + sizeStyleId;
        if (typeof pageData.stockWithWrapExt[key] !== 'undefined'){
            var lang_code = 'page_common_' + pageData.stockWithWrapExt[key];
            var wrapValue = _lang[lang_code];
            $('.stock-with-wrap').find('#stock-wrap-value').text(wrapValue);
            $('.stock-with-wrap').show();
        } else {
            $('.stock-with-wrap').hide();
        }
    }

    //针对单个输入框/下拉框的事件
    var change_handler = function () {
        styles_form.find('.pis-color-box').find('dt.selected').each(function(){
            var style_id = $(this).parent().attr('data-style-id');
            var color = $(this).parent().attr('data-value');
            if($(this).parent().find('.text-tip-new').length){
                color = '<span class="text-tip-new">'+$(this).parent().find('.text-tip-new').eq(0).html()+' </span>' + color;
            }
            $(this).parent().parent().parent().find('.selected_tip').html(color);
            $(this).parent().parent().parent().find('input').val(style_id);
        });
        styles_form.find('.pis-size-box').find('.pis-size-a.selected').each(function(){
            var style_id = $(this).find('.pis-size').attr('data-style-id');
            var size = $(this).find('.pis-size').attr('sizename');
            $(this).parent().find('.selected_tip').html(size);
            $(this).parent().find('input[name="styles[select][size]"]').val(style_id);            
        });

        if (!userAgent.isIpad()) { // ipad need click 2 times if has hover
            styles_form.delegate('.exclusive-color-icon', 'mouseenter', function () {
                var noteBoxLeft = styles_form.find('.selected-exclusive-color-name').width()
                    + styles_form.find('.selected-exclusive-color').width()
                    + styles_form.find('.selected-exclusive-price').width();
                if(noteBoxLeft > 0){
                    if(styles_form.find('.selected-exclusive-color').width()){
                        noteBoxLeft -= 28;
                    }else{
                        noteBoxLeft -= 32;
                    }
                }
                styles_form.find('.exclusive-color-note').removeClass('hide').css({'left': noteBoxLeft + 'px'});
            });
            styles_form.delegate('.exclusive-color-icon', 'mouseleave', function () {
                styles_form.find('.exclusive-color-note').addClass('hide');
            });

            styles_form.delegate('.pis-color-box .pis-color-a dt', 'mouseover', function () {
                $(this).addClass('over').next('dd').show();
            });
            styles_form.delegate('.pis-color-box .pis-color-a dt', 'mouseout', function () {
                $(this).removeClass('over').next('dd').hide();
            });
            styles_form.delegate('.personalize-card .trim-box .trim-a dt', 'mouseover', function () {
                $(this).addClass('over').next('dd').show();
            });
            styles_form.delegate('.personalize-card .trim-box .trim-a dt', 'mouseout', function () {
                $(this).removeClass('over').next('dd').hide();
            });
            styles_form.delegate('.mix-pis-color-box .mix-pis-color-a dt', 'mouseover', function () {
                $(this).addClass('over').next('dd').show();
            });
            styles_form.delegate('.mix-pis-color-box .mix-pis-color-a dt', 'mouseout', function () {
                $(this).removeClass('over').next('dd').hide();
            });
        }
        styles_form.delegate('.pis-color-box .pis-color-a', 'click', function () {
            if($(this).find('dt').hasClass('disable')) {
                return false;
            }

            if(pageData.is_sample_dress && $(this).find('dt').hasClass('selected')) {
                $(this).removeClass('selected');
                $(this).find('dt').removeClass('selected');
                $(this).parent().find('.selected_tip').html('');
                $(this).parent().find('input').val('0');
                // setSizeWithColorChange('0');

                pis_color_sample_dress_size_select();
                
                return;
            }

            //add GA track
            colorClickCount += 1;
            $(this).attr('data-click-count', colorClickCount)

            var style_id = $(this).find('dl').attr('data-style-id');
            var color = $(this).find('dl').attr('data-value');
            var kcolor = $(this).find('dl').attr('data-kvalue');

            $(this).parent().find('.selected').removeClass('selected');
            $(this).find('dt').addClass('selected');
            $(this).addClass('selected');

            var colorWithNewTag = color;
            if($(this).find('.text-tip-new').length){
                colorWithNewTag = '<span class="text-tip-new">'+$(this).find('.text-tip-new').eq(0).html()+' </span>' + colorWithNewTag;
            }

            if($(this).hasClass('exclusive-color')) {
                $(this).parent().find('.selected_tip').html('');
                $(this).parent().find('.selected-exclusive-color').html(colorWithNewTag);
                $(this).parent().find('.selected-exclusive-price').html($(this).find('.colorAlt').data('color-tip'));
            }else{
                $(this).parent().find('.selected-exclusive-color').html('');
                $(this).parent().find('.selected-exclusive-price').html('');
                $(this).parent().find('.selected_tip').html(colorWithNewTag);
            }
            $(this).parent().find('input').val(style_id);
            setSizeWithColorChange(style_id);

            if ($(this).parent().hasClass('color') || $(this).parent().hasClass('3683_favorcolor_iimmpp')) {
                thumb.change_pics(getSelectedItem());
                setShopThisColorUrl(kcolor);
                setSwatchIconClass(kcolor);
            }
            if($(this).closest('.personalize-card').length != 0) {
                cal_personalize_fee();
            }
            if(pageData.is_sample_dress){
                showSizeDetail();
                setSizeTipClass();
                cal_fee();
            }

            if (pageData.similarGoods != "" || pageData.otherSimilarGoods != '') {
                var kcolor = $(this).find('dl').attr('data-kvalue');
                setBoundModuleImg(kcolor)
            }
            setStyleSelectable();
            switchProcessingTime();
            cal_fee();
            addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());

            pis_color_sample_dress_size_select();
        });

        styles_form.delegate('.mix-item-styles select[name$="[styles][select][color]"]','change',function(){
            var goods_id = $(this).attr("id").replace(/_mix_/g,"").replace(/_color/g,"");
            var selected_value_color = $(this).children("option:selected").val()

            if(pageData.mixMatchGoodsStyleConfig[goods_id]  !== "") {
                var styleConfig = JSON.parse(pageData.mixMatchGoodsStyleConfig[goods_id]);
                if (styleConfig == "") return;
                if ($("#_mix_" + goods_id + "_size").length == 0) return;

                var selected_value_size = $("#_mix_" + goods_id + "_size").children("option:selected").val();


                $("#_mix_" + goods_id + "_size").children("option").each(function () {
                    if (selected_value_color == 0) {
                        $(this).css("display", "block")
                    } else {
                        var size_value = $(this).attr("value");
                        if (!$.inArray(selected_value_size, styleConfig[selected_value_color]) && size_value == 0) {
                            $(this).attr("selected", "selected")
                        }

                        if (size_value != 0
                            && ($.inArray(size_value.toString(), styleConfig[selected_value_color])
                                || $.inArray(selected_value_color, styleConfig[size_value]) ) >= 0) {
                            $(this).css("display", "none")
                        } else {
                            $(this).css("display", "block")
                        }
                    }
                });
            }

            // if(pageData.multiColorImages[goods_id]) {
            //     console.log(pageData.multiColorImages[goods_id])
            var colorImages = pageData.multiColorImages[goods_id];
            var mix_item = $(this).parents('.mix-item-styles').prev();
            if(typeof $(this).children("option:selected").attr("kvalue") != "undefined") {
                var currColor = $(this).children("option:selected").attr("kvalue").toLowerCase().replace(/ /g, '_');
                if(typeof colorImages[currColor] != "undefined") {
                    var src = colorImages[currColor].image;
                    mix_item.find('img').attr('src', src);
                }
            }

        });

        styles_form.delegate('.pis-size-box .pis-size-a', 'click', function () {
            if ($(this).hasClass('selected') || $(this).hasClass('disabled')) {
                return false;
            }

            var style_id = $(this).find('.pis-size').attr('data-style-id');
            var size = $(this).find('.pis-size').attr('sizelabel');
            $(this).parent().find('.selected').removeClass('selected');
            $(this).addClass('selected');
            $(this).parent().find('.selected_tip').html(size);
            $(this).parent().find('input').val(style_id);

            setStyleSelectable();
            cal_fee();
            showSpecialSelectTypeSizeDetail();
            addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
        });

        var pis_color_sample_dress_size_select = function () {
            var objs = $('.sample_dress_size_value.selected');
            if(objs.length <= 0) return false;
            show_dress_size_info(objs[0])
        }

        //sample dress size
        styles_form.delegate('.sample_dress_size_value', 'click', function () {
            sample_dress_size_select(this)
        });


        var sample_dress_size_select =  function (obj) {
            
            if ($(obj).hasClass('disable')) {
                return false;
            }
            if($(obj).hasClass('selected')) {                
                $(obj).parent().find('span.selected').removeClass('selected');
            } else {
                $(obj).parent().find('span.selected').removeClass('selected');
                $(obj).addClass('selected');
            }

            show_dress_size_info(obj);
        }

        var show_dress_size_info = function (obj) {
            var value = $(obj).attr('value');
            var sizename = $(obj).attr('sizename');

            if(!$(obj).hasClass('selected')) {
                value = '0';
                sizename = _lang.page_goods_select_size_tip;
            }            

            $(obj).parent().find('input').val(value);
            $(obj).parent().parent().siblings('.simple_tab_select_res').find('.selected_tip').html(sizename);
            setColorWithSizeChange(value);
            cal_fee();

            showSizeDetail();
            setSizeTipClass();

            // resetStockWithWrap();
            addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
        }

        styles_form.delegate('.styles-show-select-types .styles-show-select-type', 'click', function () {
            $(this).siblings().removeClass('selected');
            $(this).addClass('selected');
            changeSelectType();
        });

        styles_form.delegate('#shop_wrap_mapping_dress', 'click', function () {
            var dressGoodsUrl = "";
            dressGoodsUrl = $("#shop_wrap_mapping_dress").attr("href");
            var kcolor = getSelectedItem().kcolor;
            var dressGoodsUrlLength = dressGoodsUrl.indexOf("&color=");
            if(dressGoodsUrlLength > 0){
                var ampersandParam = dressGoodsUrl.substring(dressGoodsUrlLength);
                var paramSuffix = ampersandParam.indexOf("&");
                if(paramSuffix > 0){
                    var oldColor = dressGoodsUrl.substring(dressGoodsUrlLength + 7,paramSuffix);
                    dressGoodsUrl = dressGoodsUrl.replace(oldColor,kcolor);
                }else{
                    dressGoodsUrl = dressGoodsUrl.replace(dressGoodsUrl.substring(dressGoodsUrlLength + 7),kcolor);
                }
            }else{
                if(kcolor){
                    dressGoodsUrl = dressGoodsUrl + "&color=" + kcolor;
                }
            }
            $("#shop_wrap_mapping_dress").attr("href",dressGoodsUrl);
        });

        styles_form.delegate('.personalize-card .trim-box .trim-a', 'click', function () {
            if ($(this).find('dt').hasClass('selected')) {
                return false;
            }
            var style_id = $(this).find('dl').attr('data-style-id');
            var style_kvalue = $(this).find('dl').attr('data-kvalue');
            $(this).parent().find('dt.selected').removeClass('selected');
            $(this).find('dt').addClass('selected');
            $(this).parent().find('input').val(style_id);
            $(this).parent().find('input').attr('style-value', style_kvalue);
            thumb.change_pics(getSelectedItem());
            cal_personalize_fee();
        });
        styles_form.delegate('.personalize-card select[name="cart_quantity"]', 'change', function() {
            styles_form.find('input[name="goods_number"]').val($(this).val());
            cal_personalize_fee();
        });
        styles_form.delegate('.personalize-card select[name="styles[select][paper_type]"]', 'change', function() {
            cal_personalize_fee();
        });

        $('.pis-color-box .pis-color .colorAlt').bind('click', function () {
            return false;
        });

        styles_form.delegate('.size-detail-show .size-detail-show-unit', 'click', function () {
            $(this).siblings().removeClass('selected');
            $(this).addClass('selected');

            if (is24hrsMode() || isSpecialOfferMode()) {
                showSpecialSelectTypeSizeDetail();
            } else {
                showSizeDetail();
            }
        });
        //wrap
        styles_form.delegate('select[name="styles[select][wrap]"]', 'change', function () {
            $(this).parent().find('.selected_tip').html($(this).find('option:selected').attr('text'));
            $(this).parent().siblings('.simple_tab_select_res').find('.selected_tip').html($(this).find('option:selected').attr('text'));

            wrapChange();
        });

        styles_form.delegate('select[name="styles[select][veil_length]"]', 'change', function() {
            $(this).parent().siblings('.simple_tab_select_res').find('.selected_tip').html($(this).find('option:selected').attr('text'));
        })

        styles_form.delegate('select[name="styles[select][ring_size]"]', 'change', function() {
            $(this).parent().siblings('label[for*="_ring_size"]').find('span').html($(this).find('option:selected').attr('text'));
        })

        styles_form.delegate('#personalize', 'click', function() {
            var selectedNum = styles_form.find('input[name="goods_number"]').val();
            var color_id = styles_form.find('#_color').val();
            var trim_id = styles_form.find('#_trim').val();
            var size_type_id = styles_form.find('#_size_type').val();
            var paper_type_id = styles_form.find('#_paper_type').val();
            personalizeData['quantity'] = selectedNum ? selectedNum : 10;
            personalizeData['size_type'] = size_type_id;
            personalizeData['paper_type'] = paper_type_id;
            personalizeData['color'] = getEnNameById(color_id);
            personalizeData['trim'] = getEnNameById(trim_id);
            changeUrl(personalizeData);
        });
        //size
        styles_form.delegate('select[name="styles[select][size]"], select[name$="[styles][select][size]"]', 'change', function () {
            $(this).parent().find('.selected_tip').html($(this).find('option:selected').attr('text'));
            $(this).parent().siblings('.simple_tab_select_res').find('.selected_tip').html($(this).find('option:selected').attr('text'));
            $(this).parents('li').find('.size-switch').find('.simple_tab_select_res').find('.selected_tip').html($(this).find('option:selected').attr('text'));

            if($(this).parents('div.mix-match').length > 0) {
                var plusFree = parseInt(pageData.fee.plussize_fee);  // current currency
                var selected_value = $(this).find('option:selected').attr('text');
                var origin_price = $(this).parents('.mix-item-styles').prev().find('#mix_id_shop_price_origin').html();
                var reg = /\d+W/;
                if (reg.test(selected_value)) {
                    var stringArray = origin_price.split(" ");
                    stringArray[1] = (parseInt(stringArray[1]) + plusFree).toFixed(2).toString();
                    $(this).parents('.mix-item-styles').prev().find('#mix_id_shop_price').html(stringArray[0] + " " + stringArray[1]);
                } else {
                    $(this).parents('.mix-item-styles').prev().find('#mix_id_shop_price').html(origin_price);
                }
            }
            showSizeDetail();
            cal_fee();
            if(!isOnSale==0){
                showFindSimilar();
            }
            var size_detail = styles_form.find('#size_detail');
            if (size_detail.length == 0) {
                return;
            }

            if ($(this).val() > 0) {
                var opttext = $(this).find('option:selected').text();
                var note = (pageData.cat_id == 199) ? _lang.page_goods_size_note_no_custom : _lang.page_goods_size_note;
                var tip = "<p>" + note.replace('{{opttext}}', opttext) + "</p>";

                var sizing_guide = $('#size_detail').prev().find(".simple_tab_openwin_help_wrap").find("input").attr("value");
                tip = tip.replace('#_a_size_chart', sizing_guide);

                var key_in_json = $(this).find('option:selected').attr('kvalue');
                var details = (pageData['size_chart_json'] && pageData['size_chart_json'][key_in_json]) ? pageData['size_chart_json'][key_in_json] : '';

                //带有wrap选项的商品多加一句提示
                var with_wrap_tip = selectedWrap() ? ('<p class="with_wrap_tip clear">' + _lang.page_goods_size_note_wrap + '</p>') : '';

                size_detail.html(tip + details + with_wrap_tip).show('fast');

                size_detail.find('#custom_tailor').click(function () {
                    styles_form.find('input[name="custom"]').prop('checked',true);
                    setCustom(true);
                    return false;
                });

            } else {
                size_detail.empty().hide();
            }
        });
        styles_form.delegate('.style-select-item', 'click', function () {
            var styleName = $(this).attr('data-style-name');
            if ($(this).hasClass('selected') || $(this).hasClass('disabled')) {
                return false;
            }
            $(this).parent().find('span.selected').removeClass('selected');
            $(this).addClass('selected');
            var styleSelect = styles_form.find('select[name="styles[select][' + styleName + ']"]');
            styleSelect.val($(this).attr('value'));
            styleSelect.change();
        });

        styles_form.find('.style-select-item').hover(function(){
            if ($(this).hasClass('disabled')) {
                return false;
            }
            var styleName = $(this).attr('data-style-name');
            if(styleName === 'size' && styles_form.find("#size_detail_show").is(':visible')) {
                showSizeDetail(styles_form.find('select[name="styles[select][size]"] option[value="' + $(this).attr('value') + '"]'));
            }
        },function(){
            if ($(this).hasClass('disabled')) {
                return false;
            }
            var styleName = $(this).attr('data-style-name');
            if(styleName === 'size') {
                showSizeDetail();
            }
        });
        styles_form.delegate('select[name*="color"]', 'change', function () {
            $(this).parent().find('.selected_tip').html($(this).find('option:selected').attr('text'));
        });
        var colorSelectElements = styles_form.find('select[name*="color"]');
        colorSelectElements.each(function () {
            $(this).change();
        });

        //Quantity - 分为 输入框 和 下拉框+隐藏域 两种
        styles_form.delegate('select[name="cart_quantity"]', 'change', function () {
            styles_form.find('input[name="goods_number"]').val($(this).val());
            cal_fee();
            quantityClickState = false
        });

        styles_form.delegate('select[name="cart_quantity"]', 'click', function () {
            if(quantityClickState){
                $(document).trigger(events.clickGoodsQuantity);
            }else{
                quantityClickState = true;
            }
        });

        styles_form.delegate('.input-quantity', 'change', function () {
            var quantityLimit = $(this).attr('data-quantity-limit');
            var reduceBtn = $(this).siblings('.quantity-reduce');
            var increaseBtn = $(this).siblings('.quantity-increase');
            $(this).val($(this).val().replace(/[^\d]/g));
            reduceBtn.removeClass('disabled');
            increaseBtn.removeClass('disabled');
            if($(this).val() <= 1){
                reduceBtn.addClass('disabled');
            } else if($(this).val() >= quantityLimit) {
                increaseBtn.addClass('disabled');
            }
        });

        styles_form.undelegate('.quantity-reduce', 'click');
        styles_form.undelegate('.quantity-increase', 'click');
        styles_form.delegate('.quantity-reduce', 'click', function () {
            var increaseBtn = $(this).siblings('.increase-quantity');
            var quantityDom = $(this).siblings('.input-quantity');
            var quantity = quantityDom.val();
            if(quantity <= 1){
                return;
            }
            quantity--;
            quantityDom.val(quantity);
            if(quantity <= 1) {
                $(this).addClass('disabled')
            }
            increaseBtn.removeClass('disabled')
        });
        styles_form.delegate('.quantity-increase', 'click', function () {
            var quantityDom = $(this).siblings('.input-quantity');
            var reduceBtn = $(this).siblings('.quantity-reduce');
            var quantityLimit = quantityDom.attr('data-quantity-limit');
            var quantity = quantityDom.val();
            if(quantity >= quantityLimit) {
                return;
            }
            quantity++;
            quantityDom.val(quantity);
            if(quantity >= quantityLimit) {
                $(this).addClass('disabled');
            }
            reduceBtn.removeClass('disabled');
        });

        if (styles_form.find('select[name="cart_quantity"]').length > 0) {
            styles_form.delegate('select[name="cart_quantity"]', 'change', function () {
                styles_form.find('input[name="goods_number"]').val($(this).val());
                cal_fee();
            });
        } else {
            var change_goods_number = function (elem) {
                var num = parseInt($(elem).val());
                if (num == 0 || isNaN(num)) {
                    num = 1;
                }
                $(elem).val(num);
                cal_fee();
            };
            styles_form.delegate('input[name="goods_number"]', 'keydown', function (e) {
                if (!!window.ActiveXObject) { //IE only
                    return ((e.keyCode > 47 && e.keyCode < 58) || (e.keyCode > 95 && e.keyCode < 106) || (e.keyCode == 8));
                } else {
                    return ((e.which > 47 && e.which < 58) || (e.which > 95 && e.which < 106) || (e.which == 8) || (e.keyCode == 17));
                }
            }).delegate('input[name="goods_number"]', 'keyup', function (e) {
                if($(this).val().length > 0) {
                    change_goods_number($(this));
                }
            }).delegate('input[name="goods_number"]', 'blur', function () {
                change_goods_number($(this));
            });
        }

        //Custom Size
        styles_form.delegate('input[name="custom"]', 'click', function () {
            setCustom($(this).prop('checked'));
            switchProcessingTime();
            setSizeTipClass();
        });

        styles_form.delegate('.unsure-size-notice', 'click', function () {
            $('.unsure_size_dialog_c').show();
            $('.unsure-size-mask').show();
        });
        styles_form.delegate('.unsure_size_dialog', 'click', function () {
            $('.unsure_size_dialog_c').hide();
            $('.unsure-size-mask').hide();
        });
        //Unsure Size
        styles_form.delegate('input[name="unsure_size"]', 'click', function () {
            var isChecked = $(this).prop('checked');
            setUnsureSize(isChecked);
            switchProcessingTime();
            setSizeTipClass()
            cal_fee();
        });

        //inch or cm
        $('.custom-size-switcher-tpl').delegate('.custom-size-switch-btn', 'click', function () {
            $('.custom-size-switch-btn').removeClass('active');
            $(this).addClass('active');

            var cm_conts = styles_form.find('.cm_select');
            var inch_conts = styles_form.find('.inch_select');

            if ($(this).data('value') == '_inch') {
                cm_conts.hide().find('select').prop('disabled', true);
                inch_conts.show();
                styles_form.find('.custom_dress .inch_select select').prop('disabled', false)
                if (selectedWrap()) {
                    styles_form.find('.custom_wrap .inch_select select').prop('disabled', false);
                }
            } else {
                inch_conts.hide().find('select').prop('disabled', true);
                cm_conts.show();
                styles_form.find('.custom_dress .cm_select select').prop('disabled', false);
                if (selectedWrap()) {
                    styles_form.find('.custom_wrap .cm_select select').prop('disabled', false);
                }
            }
        });

        //use inch or cm , for sashes
        styles_form.delegate('select[name="styles[select][9844_measureunit]"]', 'change', function () {
            controlWaistStyle();
        });
        function controlWaistStyle() {
            var measureUnit = $('select[name*="_measureunit]"] option:selected').attr('kvalue');
            var labelText = $('label[for*="_sashwaist"]').text();
            var labelInch = "("+_lang.page_common_length_inch+")";
            var labelCm ="("+ _lang.page_common_length_cm+")";
            labelText = labelText.replace(labelInch,'');
            labelText = labelText.replace(labelCm,'');
            var labelUnit = measureUnit == 'cm' ? labelCm : labelInch;
            $('label[for*="_sashwaist"]').text(labelText+labelUnit);
            if (measureUnit == 'cm') {
                $('select[id*="_sashwaist"] option[kvalue*="cm"]').show();
                $('select[id*="_sashwaist"] option[kvalue*="inch"]').hide();
            } else {
                $('select[id*="_sashwaist"] option[kvalue*="cm"]').hide();
                $('select[id*="_sashwaist"] option[kvalue*="inch"]').show();
            }
            $('select[id*="_sashwaist"]').get(0).selectedIndex=0
        }
        if ($('select[name*="_measureunit]"]').length > 0) {
            controlWaistStyle();
        }

        var colorSelector = styles_form.find('#_color');
        var sizeSelector = styles_form.find('#_size');
        var promptTexts = styles_form.find('.all-styles input[type="text"]');
        var countrySelector = styles_form.find('#_product_country');
        $(colorSelector).change(function () {
            switchProcessingTime();

            // set available size options with color change (selectBox)
            var selectedColorId = colorSelector.find('option:selected').attr('value');
            var kcolor = $(this).find('option:selected').attr('kvalue');
            if (typeof selectedColorId !== "undefined") {
                setSizeWithColorChange(selectedColorId);
            }
            setBoundModuleImg(kcolor);
            // if (pageData.otherSimilarGoods != "") {
            //     var kcolor = $(this).find('option:selected').attr('kvalue');
            //     var otherSimilarGoodsImg = eval("(" + pageData.otherSimilarGoods + ")");
            //     for(var goodId in otherSimilarGoodsImg) {
            //         if ($('#similar_good_'+goodId).length > 0 && typeof (kcolor) != "undefined") {
            //             for(var index in otherSimilarGoodsImg[goodId]) {
            //                 if (typeof otherSimilarGoodsImg[goodId][index]['img_color'] != "undefined" &&
            //                     otherSimilarGoodsImg[goodId][index]['img_color'].toLowerCase() == kcolor.toLowerCase()) {
            //                     var newSrc = otherSimilarGoodsImg[goodId]['goods_thumb_prefix'] + otherSimilarGoodsImg[goodId][index]['url'];
            //                     $('#similar_good_'+goodId).attr('src',newSrc);
            //                 }
            //             }
            //         }
            //     }
            // }
            addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
        });

        $(countrySelector).change(function (){

            var goodsStyleConfig = getGoodsStyleConfig();
            var selectedFacility = $('#_product_country').find('option:selected').attr('kvalue');
            var styles_form = $('#goods_form');

            if(selectedFacility == '0'){
                var sizeOptions = $('#_size').find('span');
                if(sizeOptions.length == 0){
                    $('#_color').find('option').each(function(){
                        $(this).show();
                        $(this).removeAttr('selected')
                    });
                    $('#_size').find('option').each(function(){
                        $(this).show();
                        $(this).removeAttr('selected')
                    });

                    cal_fee();
                    return;
                }
                $('.simple_tab_select_res').find('.selected_tip').html("");
                $('.color-information').find('.selected_tip').html("");


                styles_form.find('.pis-color-a').each(function(){
                    $(this).show();
                    $(this).find('dt').removeClass('selected');
                    $(this).removeClass('selected');
                });
                styles_form.find('#_color').val('');
                sizeOptions.each(function(){
                    $(this).removeClass('disable');
                    $(this).removeClass('selected');
                });
                $('#_size').find('input').val('');
            }else{
                // if(typeof goodsStyleConfig[selectedFacility] != 'undefined'){
                //     var curStyleConfig = goodsStyleConfig[selectedFacility];
                //     var validStyleIds = [];
                //     for(var styleId in curStyleConfig){
                //         validStyleIds.push(styleId)
                //     }
                //
                //     styles_form.find('#_color').val('');
                //     $('#_size').find('input').val('');
                //     $('#goods_form').find('.pis-color-a').each(function(){
                //         var curStyleId = $(this).find('.pis-color').attr('data-style-id');
                //         if($.inArray(curStyleId, validStyleIds) < 0){
                //             $(this).find('dt').removeClass('selected');
                //             $(this).hide();
                //         }else{
                //             $(this).show();
                //         }
                //     });
                //     $('#_size').find('span').each(function(){
                //         var curStyleId = $(this).attr('value');
                //         $(this).removeClass('disable');
                //         if($.inArray(curStyleId, validStyleIds) < 0){
                //             $(this).removeClass('selected');
                //             $(this).addClass('disable');
                //         }
                //     });
                // }
            }
            cal_fee();
            addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
        });

        var initShipToSelecter = function() {
            var shipToOption = $('#_product_country').find('option');
            if(shipToOption.length > 1){
                shipToOption.each(function(){
                    var val = $(this).attr("value");
                    if(val > 0){
                        $(this).prop("selected",true);
                        $("#_product_country").change();
                        return false;
                    }
                });
            }
        }();

        styles_form.delegate('.size .pis-size-a', 'click', function() {
            switchProcessingTime();
            setSizeTipClass();
            addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
        });

        $(sizeSelector).change(function () {
            switchProcessingTime();
            setSizeTipClass()

            // set available color options with size change
            var selectedSizeId = sizeSelector.find('option:selected').attr('value');
            if(pageData.is_sample_dress) {
                setColorWithSizeChange(selectedSizeId);
            }
            addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
            $(document).trigger(events.clickGoodsSizeOption,sizeSelector.find('option:selected').attr('sizename'));
            sizeClickState = false;
        });


        $(sizeSelector).click(function () {
            if(sizeClickState){
                $(document).trigger(events.clickGoodsSize);
            }else{
                sizeClickState = true;
            }
        });

        $(promptTexts).on('keyup change', function() {
            if(pageData.filterArabicAndSepcialSymbolCatIdsConfig.includes(pageData.cat_id)){
                var showtextval = $(this).val().replace(/([\u0600-\u06FF]|[\u2000-\u2BFF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|\uD83E[\uDD10-\uDDFF])/g, '');
                $(this).val(showtextval);
            }
        });

        for (var i in stylesCheckDelivery) {
            var stylesCheckDeliveryName = stylesCheckDelivery[i].toLowerCase().replace(/\s+/g, "_");
            var selectName = 'select[name="styles[select][' +
                stylesCheckDeliveryName + ']"]';
            styles_form.delegate(selectName, 'change', function () {
                switchProcessingTime();
                addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
            });

            var inputName = 'input[name="styles[select][' +
                stylesCheckDeliveryName + ']"]';
            styles_form.delegate(inputName, 'change', function () {
                switchProcessingTime();
                addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
            });

            stylesCheckDeliveryName = stylesCheckDeliveryName.replace("'", "\\\'");
            styles_form.find('.pis-' + stylesCheckDeliveryName + '-box').find('.pis-' + stylesCheckDeliveryName + '-a.selected').each(function(){
                var style_id = $(this).find('.pis-' + stylesCheckDeliveryName).attr('data-style-id');
                var style = $(this).find('.pis-' + stylesCheckDeliveryName).attr('sizename');
                $(this).parent().find('.selected_tip').html(style);
                $(this).parent().find(inputName).val(style_id);
            });

            styles_form.delegate('.pis-' + stylesCheckDeliveryName + '-box .pis-' + stylesCheckDeliveryName + '-a', 'click', function () {
                if ($(this).hasClass('selected') || $(this).hasClass('disabled')) {
                    return false;
                }

                var style_id = $(this).find('.pis-' + stylesCheckDeliveryName).attr('data-style-id');
                var style = $(this).find('.pis-' + stylesCheckDeliveryName).attr('sizename');
                $(this).parent().find('.selected').removeClass('selected');
                $(this).addClass('selected');
                $(this).parent().find('.selected_tip').html(style);
                $(this).parent().find(inputName).val(style_id);

                if(stylesCheckDeliveryName === 'wrap') {
                    wrapChange();
                }
                setStyleSelectable();
                cal_fee();
                addToCartUtil.updateStock(pageData.is_sample_dress, is24hrsMode());
            });
        }

        var priceStyleName = false;
        for (var i in pageData.goodsStylePrice) {
            if(typeof pageData.goodsStylePrice[i]['relation'] == "undefined"){
                continue;
            }

            for (var styleName in pageData.goodsStylePrice[i]['relation']) {
                priceStyleName = styleName;
                break;
            }
        }
        if (priceStyleName) {
            styles_form.delegate('select[name="styles[select][' + priceStyleName + ']"]', 'change', function () {
                getGoodsStylePrice();
            });
        }


        // calc goods price with hair_length change
        //styles_form.delegate('select[name="styles[select][hair_length]"]', 'change', function () {
        //    getGoodsStylePrice();
        //});

        //custom pic
        styles_form.delegate('.custom_pic', 'mouseenter', function () {
            $(this).children('i').addClass('hov');
        }).delegate('.custom_pic', 'mouseleave', function () {
            $(this).children('i').removeClass('hov');
        }).delegate('.custom_pic', 'click', function () {
            var scroll = document.documentElement.scrollTop == 0 ? window.pageYOffset : document.documentElement.scrollTop;

            //overlay
            var overlay = $('#overlay');
            if (overlay.length == 0) {
                $('body').prepend('<div id="overlay" class="hide"></div>');
                overlay = $('#overlay');
                $('body').delegate('.mask_close', 'click', function () {
                    overlay.hide();
                    $(this).closest('.mask_pic').hide();
                });
            }

            //dress or wrap
            if ($(this).parent().hasClass('custom_dress')) {
                var mask_id = 'mask_pic';
                var img_name = 'measuring_guide_height.jpg',
                    img_width = 695,
                    img_height = 617;

            } else if ($(this).parent().hasClass('custom_wrap')) {
                var mask_id = 'mask_pic_wrap';
                var img_name = 'shoulder2.jpg',
                    img_width = 695,
                    img_height = 426;
            } else {
                return false;
            }

            //insert and show
            if (!document.getElementById(mask_id)) {
                var imgSrc = webData.IMG_PATH + webData.lang + '/' + img_name + '?' + webData.version;
                if ($(this).hasClass('isJuniorDress')) {
                    imgSrc = webData.IMG_PATH + 'measure/juniorDress/' + webData.lang +'.jpg?' + webData.version;
                } else if ($(this).hasClass('isFlowerDress')) {
                    imgSrc = webData.IMG_PATH + 'measure/flowerDress/' + webData.lang +'.jpg?' + webData.version;
                } else if ($(this).parent().hasClass('custom_dress')) {
                    imgSrc = webData.IMG_PATH  + 'measure/dress_custom/' + webData.lang + '.jpg' + '?' + webData.version;
                }

                var imgAlt = (typeof $(this).find("img").attr('alt') != "undefined") ? $(this).find("img").attr('alt') : "";
                var mask_pic_html = '<div id="' + mask_id + '" class="mask_pic hide">'
                    + '<div class="mask_wrapper">'
                    + '<img src="' + imgSrc + '" width="' + img_width + '" height="' + img_height + '" alt="' + imgAlt + '"/>'
                    + '<a href="javascript:void(0)" class="mask_close"></a>'
                    + '</div>'
                    + '</div>';
                $('body').prepend(mask_pic_html);
            }
            var mask_pic = $(document.getElementById(mask_id));
            var mask_wrapper = mask_pic.find('.mask_wrapper');
            var diff = ($(window).height() > mask_wrapper.height()) ? ($(window).height() - mask_wrapper.height()) : 0;
            mask_wrapper.css('margin-top', (Math.ceil(diff / 2) + scroll) + 'px');
            mask_pic.show();
            overlay.show();
        });

        styles_form.find('.color_chart_and_swatch').children('div').click(function () {
            var selectedColorDt = styles_form.find(".pis-color-box.color").find("dt.selected");
            var kcolor = selectedColorDt.parent().attr('data-kvalue');
            var orderSwatchLink = $(this).find("a").attr('href');
            if (kcolor != undefined && orderSwatchLink.indexOf('66283') > 0) {
                window.open(webData.WEB_ROOT + "Free-Shipping-Fabric-Swatch-—-Single-Color-In-4-Materials-g66283?swatch_color=" + kcolor, "_blank");
                return false;
            } else if (kcolor != undefined && orderSwatchLink.indexOf('118618') > 0) {
                window.open(webData.WEB_ROOT + "Swatch-033118618-g118618?swatch_color=" + kcolor, "_blank");
                return false;
            }
        });

        styles_form.delegate('.size-switch .select-size', 'click', function () {
            $(this).parent().find('.select-size').removeClass('selected')
            var sizeSelect = $(this).data('for');
            var customSelectDom = $('.custom_checkbox').children('input')
            var customTips = $('.custom-size-tips')
            if(sizeSelect === 'size') {
                $('#_size').parent("div").show();
                if(customSelectDom.is(':checked')) {                    
                    customSelectDom.click();
                    customTips.hide();
                    $(this).siblings('.simple_tab_select_res').show()
                }
            } else {
                $('#_size').parent("div").hide();
                if(customSelectDom.is(':checked')){
                    customSelectDom.prop('checked', false);
                }
                customSelectDom.click();
                customTips.show();
                $(this).siblings('.simple_tab_select_res').hide()
            }
            $(this).addClass('selected');
        });

        $(document).ready(function () {
            var thumb = require('./thumb_pictures');
            if ((pageData.goods_id == 66283 || pageData.goods_id == 118618) && pageData.swatch_color != "") {
                styles_form.find(".pis-color-box .pis-color-a").each(function(){
                    if ($(this).children('dl').attr('data-kvalue') == pageData.swatch_color) {
                        $(this).click();
                    }
                });
            }

            //change shopbycolor img when enter from list with filter color
            if ( styles_form.find('.color .pis-color-a,.3683_favorcolor_iimmpp .pis-color-a').find('dt.selected').length == 0) {
                thumb.change_pics(getFilterColor());
            } else {
                styles_form.find('.color .pis-color-a,.3683_favorcolor_iimmpp .pis-color-a').find('dt.selected').each(function(){
                    thumb.change_pics(getSelectedItem());

                    var kcolor = $(this).parent().attr('data-kvalue');
                    setShopThisColorUrl(kcolor);
                    setSwatchIconClass(kcolor);
                });
            }

            initStyleConfig();

            getGoodsStylePrice();

            changeSelectType();

            switchProcessingTime();
            setSizeTipClass();

            if(revisingFeaturesList.indexOf('customSizePosition') > -1) {
                $('.size-switch .select-size:first-child').click()
            }

            if(revisingFeaturesList.indexOf('carouselVideoAndPics') > -1) {
                var video = $('#magnify-video')[0];
                setTimeout(function () {
                    $('#product_video').click();
                }, 1000)
                video.addEventListener('ended', function() {
                    if(videoPlayCount < 2) {
                        $('#product_video').click();
                        videoPlayCount ++;
                    }
                })
                var displayVideo = function () {
                    if($('#magnify-video').is(':visible')) {
                        var pageYOffset = $(window)[0].pageYOffset;
                        var videoHeight = $('#magnify-video').height();
                        var videoOffsetTop = $('#magnify-video').offset().top;
                        if(videoOffsetTop + videoHeight * 1 < pageYOffset) {
                            if(!video.paused) {
                                allowAutoPlay = true;
                                video.pause();
                            }
                        } else if(videoOffsetTop + videoHeight * 1 > pageYOffset && video.paused && allowAutoPlay) {
                            video.play();
                            allowAutoPlay = false;
                        }
                    }
                }
                $(window).on("scroll", displayVideo);

            }

            //wrap mapping dress default display selected_tip note
            styles_form.find('select[name="styles[select][wrap]"]').change();
        });


        $('.prod-info').delegate('.select-birthstone', 'click', function () {
            $('.birthstone-opened').next().hide();
            $('.birthstone-opened').removeClass('birthstone-opened');
            $('.open-select-container').removeClass('opened');
            $('.open-select-container').addClass('closed');
            $(this).addClass('birthstone-opened');
            $(this).children('.open-select-container').addClass('opened');
            $(this).children('.open-select-container').removeClass('closed');
            $(this).next().show();
        })

        $('.prod-info').delegate('.birthstone-opened', 'click', function () {
            $(this).removeClass('birthstone-opened');
            $(this).children('.open-select-container').removeClass('opened');
            $(this).children('.open-select-container').addClass('closed');
            $(this).next().hide();
        })

        $('.prod-info').delegate('.birthstone-info', 'click', function () {
            var birthstoneBackgroundClass = $(this).data('stoneValue');
            var birthstoneValue = $(this).children('.birthstone-value').data('value');
            var birthstoneId = $(this).children('.birthstone-value').data('birthstoneId');
            var birthstoneContainer = $(this).parents('.select-birthstone-container');
            var birthstone = birthstoneContainer.prev();
            var selectedBirthstone = birthstone.children('.selected-birthstone');

            birthstone.removeClass('birthstone-opened');
            selectedBirthstone.next().children('.birthstone-name').addClass('birthstone-selected');
            birthstone.children('.open-select-container').removeClass('opened');
            birthstone.children('.open-select-container').addClass('closed');
            birthstoneContainer.hide();

            selectedBirthstone.addClass('birthstone-style');
            selectedBirthstone.children('dt').children('span').removeClass();
            selectedBirthstone.children('dt').children('span').addClass(birthstoneBackgroundClass);
            selectedBirthstone.next().children('.birthstone-description').html(birthstoneValue);
            birthstone.prev().val(birthstoneId);

        })

        //custom size 缺货时下拉框选择后弹出find similar窗口
        styles_form.delegate('select[name="styles[input][bust]"], select[name="styles[input][waist]"] ,select[name="styles[input][hips]"] ,select[name="styles[input][hollow_to_floor]"] ,select[name="styles[input][height]"] ,select[name="styles[input][extra_length]"]','change', function () {
            if(isOnSale==0){
                showFindSimilar();
            }
        });
    };

    // var init_offgoods_subscribe = function() {
    //     $('.subscribe_offgoods').on('click', function () {
    //         var goods_id = $(this).attr('data-goods-id')
    //         var source = $(this).attr('data-source')

    //         new popSubscribeOffGoods(goods_id, source, function() {
    //             $('.need-subscribe-block').hide()
    //             $('.have-subscribed-block').show()
    //         }).open()
    //     })
    // }

    var updateCartQty = function(goodsQuantity){
        webData.loadedGoodsInCart = false;
        var goodsQuantity = parseInt(goodsQuantity)
        var currGoodsNum = parseInt($('#shoppingCartGoodsTotal').html());
        if(currGoodsNum + goodsQuantity > 999){
            currGoodsNum = 999;
        }else{
            currGoodsNum = currGoodsNum + goodsQuantity;
        }
        $('#shoppingCartGoodsTotal').html(currGoodsNum);

    }

    //表单验证
    var form_handler = function (isMixMatch = false) {
        var FormCheckEach = require('../mod/formCheckEach'); //检查表单
        require('../lib/jqueryTipsy'); //提示

        //获取提示内容
        var get_tip_text = function (obj) {
            var obj = $(obj)
            var lang_suffix = webData.lang_suffix || ""
            if (obj.attr('data-value')) {
                var str = obj.attr('data-value');
                str = str.replace('&#39;', '\'');
                str = str.replace('&#34;', '\"');
                str = str.replace(':', '');
                if(!!~['_au', '_uk'].indexOf(lang_suffix)) {
                    str = str.replace(/color/g, 'colour');
                    str = str.replace(/Color/g, 'Colour');
                }
                return str;
            } else {
                if(obj.prev('label').length == 0) {
                    return '';
                }
                return obj.prev('label').html().replace(':', '');
            }
        };

        var lang_suffix = webData.lang_suffix || ""
        var color_tip = (styles_form.find('select[name="styles[select][bodice_color]"]').length > 0) ? _lang.page_goods_select_skirt_color_tip : _lang.page_goods_select_color_tip
        var bodice_color_tip =  _lang.page_goods_select_bodice_color_tip;
        var sash_color_tip =  _lang.page_goods_select_sash_color_tip;
        var embroidery_color_tip =  _lang.page_goods_select_embroidery_color_tip;
        var accept_our_conditions =  _lang.page_common_accept_our_conditions;

        if(!!~['_au', '_uk'].indexOf(lang_suffix)) {
            color_tip = color_tip.replace(/color/g, 'colour');
            bodice_color_tip = bodice_color_tip.replace(/color/g, 'colour');
            sash_color_tip = sash_color_tip.replace(/color/g, 'colour');
            embroidery_color_tip = embroidery_color_tip.replace(/color/g, 'colour');
        }

        var items = {}
        var items_custom = {
            "styles[input][bust]": [
                {type: 'null', errMsg: _lang.page_common_enter_bust}
            ],
            "styles[input][waist]": [
                {type: 'null', errMsg: _lang.page_common_enter_waist}
            ],
            "styles[input][hips]": [
                {type: 'null', errMsg: _lang.page_common_enter_hips}
            ],
            "styles[input][hollow_to_floor]": [
                {type: 'null', errMsg: _lang.page_common_enter_floor}
            ],
            "styles[input][hollow_to_hem]": [
                {type: 'null', errMsg: _lang.page_common_enter_hem}
            ],
            "styles[input][height]": [
                {type: 'null', errMsg: _lang.page_common_enter_height}
            ],
            "styles[input][shoulder_width]": [
                {type: 'null', errMsg: _lang.page_common_enter_shoulder}
            ],
            "styles[input][shoulder_to_bust]": [
                {type: 'null', errMsg: _lang.page_common_enter_shoulder_to_bust}
            ],
            "styles[input][armhole]": [
                {type: 'null', errMsg: _lang.page_common_enter_armhole}
            ],
            "styles[input][extra_length]": [
                {type: 'null', errMsg: _lang.page_common_enter_extra_length}
            ],
        };
        var special_rules = {
            "default": function (obj, checks) {
                return ($(obj).val().length > 0) && ($(obj).val() != $(obj).attr('data-value') && $(obj).val() != 0)
            }
        };

        var showError = function (obj, errMsg) {
            var selectObj = $(obj);
            if (selectObj.is('input')){
                animateStyles(selectObj.parent(), 6);
            }else{
                animateStyles(selectObj, 6);
            }
            $(obj).focus();
        };

        var fce, fce_custom, fceMix;

        var resetItems = function () {
            items = {
                "styles[select][bodice_color]": [
                    {type: 'select', value: 0, errMsg: bodice_color_tip}
                ],
                "styles[select][color]": [
                    {type: 'select', value: 0, errMsg: color_tip}
                ],
                "styles[select][sash_color]": [
                    {type: 'select', value: 0, errMsg: sash_color_tip}
                ],
                "styles[select][embroidery_color]": [
                    {type: 'select', value: 0, errMsg: embroidery_color_tip}
                ],
                "styles[select][wrap]": [
                    {type: 'select', value: 0, errMsg: _lang.page_goods_select_wrap_jacket_tip}
                ],
                "styles[select][size]": [
                    {type: 'select', value: 0, errMsg: _lang.page_goods_select_size_tip}
                ],
                "styles[select][heel_type]": [
                    {type: 'select', value: 0, errMsg: _lang.page_goods_select_heel_type_tip}
                ],
                "styles[select][sash_size]": [
                    {type: 'default', errMsg: _lang.page_common_enter_waist}
                ],
                "accept_our_conditions": [
                    {type: 'checked', errMsg: _lang.page_common_accept_our_conditions}
                ],
                "select_country": [
                    {type: 'checked', errMsg: _lang.page_checkout_please_select_country}
                ]
            };
    
            //将未知项追加到items中
            (function () {
                var ipts = styles_form.find(':input[name^="styles[select]"], :input[name^="styles[text]"], :input[name^="styles[promptText]"]');
                for (var i = 0; i < ipts.length; i++) {
                    var ipt = ipts.eq(i);
                    var ipt_name = ipt.attr('name');
                    if ((!items[ipt_name]) && ipt.closest('li').is(':visible')) {
                        if (ipt.is(':text')) {
                            msg = _lang.page_goods_please_provide + ' \"' + get_tip_text(ipt) + '\"';
                            items[ipt_name] = [
                                {type: 'default', errMsg: msg}
                            ];
                        // } else if (ipt.is(':promptText')) {
                        //     msg = _lang.page_goods_please_provide + ' \"' + get_tip_text(ipt) + '\"';
                        //     items[ipt_name] = [
                        //         {type: 'default', errMsg: msg}
                        //     ];
                        } else {
                            msg = _lang.page_common_please_select_ + ' \"' + get_tip_text(ipt) + '\"';
                            items[ipt_name] = [
                                {type: 'select', value: 0, errMsg: msg}
                            ];
                        }
                    }
                }
            })();
            fce = new FormCheckEach({
                "elem_form": styles_form,
                "items": items,
                "showError": showError,
                "rules": special_rules
            });
            fce_custom = new FormCheckEach({
                "elem_form": styles_form,
                "items": items_custom,
                "showError": showError
            });
            fceMix = new FormCheckEach({
                "elem_form": mix_styles_form,
                "items": items,
                "showError": showError,
                "rules": special_rules
            });
        }

        resetItems();

        //获取未选择数据
        var get_wrong_data = function () {
            resetItems();

            //分为自定义商品和非自定义商品
            var data = {};
            data['freestyle'] = (styles_form.find('input[name="styles[freestyle]"]').val() == 'true');
            data['ipts'] = [];
            if (data['freestyle']) {
                var ipts = styles_form.find('select[name^="styles[select]"], input[name^="styles[text]"]');
                for (var i = 0; i < ipts.length; i++) {
                    var elem = ipts.eq(i);
                    var elem_val = elem.val();
                    var elem_label = get_tip_text(elem);
                    if (!elem_val || elem_val == 0 || elem_val == elem_label) {
                        data['ipts'].push(elem);
                    }
                }
            } else {
                var ck_custom = styles_form.find('input[name="custom"]');
                data['custom'] = (ck_custom.length > 0 && ck_custom.prop('checked'));

                //sample dress terms
                var accept_our_conditions = styles_form.find('input[name="accept_our_conditions"]');
                data['has_accept_our_conditions_checkbox'] = false;
                if(accept_our_conditions.length > 0){
                    data['has_accept_our_conditions_checkbox'] = true;
                    data['accept_our_conditions'] = accept_our_conditions.prop('checked');
                }
                if(!data['accept_our_conditions']){
                    data['accept_our_conditions_ipts'] = accept_our_conditions;
                }

                //custom size terms
                if(customSizeTermsSwitch && data['custom']){
                    var customSizeTermsCheckbox = styles_form.find('input[name="accept_custom_size_terms_checkbox"]');
                    data['isHasCustomSizeTermsElement'] = false;
                    if(customSizeTermsCheckbox.length > 0){
                        data['isHasCustomSizeTermsElement'] = true;
                        data['isSelectCustomSizeTermsCheckbox'] = customSizeTermsCheckbox.prop('checked');
                    }
                }

                var ship_country_select = styles_form.find('#_product_country');
                data['has_select_country'] = false;
                if(ship_country_select.length > 0){
                    data['has_select_country'] = true;
                    data['select_country_value'] = styles_form.find('#_product_country option:selected').val() != '0';
                }
                var ipts = [];
                if (is24hrsMode()) {
                    ipts = styles_form.find('.ship-in-24hrs-styles').find(':input[name^="styles[select]"], input[name^="styles[text]"], :input[name^="styles[promptText]"], :input[name^="styles[origin_image]"]');
                } else if(isSpecialOfferMode()) {
                    ipts = styles_form.find('.special-offer-styles').find(':input[name^="styles[select]"], input[name^="styles[text]"], :input[name^="styles[promptText]"], :input[name^="styles[origin_image]"]');
                } else {
                    ipts = styles_form.find('.all-styles').find(':input[name^="styles[select]"], input[name^="styles[text]"], :input[name^="styles[promptText]"], :input[name^="styles[origin_image]"]');
                }

                if (ipts.length == 0) {
                    ipts = styles_form.find(':input[name^="styles[select]"], input[name^="styles[text]"], :input[name^="styles[promptText]"], :input[name^="styles[origin_image]"]')
                }

                for (var i = 0; i < ipts.length; i++) {
                    var ipt = ipts.eq(i);

                    //自定义尺寸填写不完整时提示是Size
                    if (ipt.attr('name') == 'styles[select][size]' && data['custom']) {
                        var ipts_custom = styles_form.find('.custom_size select').not(':disabled');
                        data['ipts_custom'] = [];
                        for (var k = 0; k < ipts_custom.length; k++) {
                            var ipt_c = ipts_custom.eq(k);
                            if (!fce_custom.checkOne(ipt_c, false)) {
                                data['ipts_custom'].push(ipt_c);
                            }
                        }
                        if (data['ipts_custom'].length > 0) {
                            data['ipts'].push(ipt);
                        }
                    } else if (ipt.attr('name').indexOf('styles[origin_image]') > -1) {
                        var kname = ipt.attr('data-kname')
                        var source = styles_form.find(':input[name="styles[image][' + kname +'][source]"]').val()
                        var composite = styles_form.find(':input[name="styles[image][' + kname +'][composite]"]').val()
                        if (!source || !composite) {
                            data['ipts'].push(ipt);
                        }
                    } else {
                        if(items[ipt.attr('name')]) {
                            if (!fce.checkOne(ipt, false)) {
                                data['ipts'].push(ipt);
                            }
                        }
                    }
                }
            }

            //获取mix_match商品信息
            if($('.mix-goods-checkbox') && $('.mix-goods-checkbox').is(':checked')){
                $('.mix-item').each(function(index, dom){
                    var product = $(dom);
                    if(product.find('.mix-goods-checkbox').is(':checked')){
                        var color_tip = (product.find('select[name$="[styles][select][bodice_color]"]').length > 0) ? _lang.page_goods_select_skirt_color_tip : _lang.page_goods_select_color_tip;
                        //add mix select to items
                        var addMixSelectsToItems = function (styleName) {
                            var ipts = product.next().find(':input[name$="[styles][select][' + styleName + ']"]');
                            for (var i = 0;i < ipts.length; i++) {
                                var ipt = ipts.eq(i);
                                var ipt_name = ipt.attr('name');
                                if((!items[ipt_name]) && ipt.closest('li').is(':visible')) {
                                    switch(styleName){
                                        case 'bodice_color':
                                            msg = _lang.page_goods_select_bodice_color_tip;
                                            break;
                                        case 'color':
                                            msg = color_tip;
                                            break;
                                        case 'sash_color':
                                            msg = _lang.page_goods_select_sash_color_tip;
                                            break;
                                        case 'embroidery_color':
                                            msg = _lang.page_goods_select_embroidery_color_tip;
                                            break;
                                        case 'size':
                                            msg = _lang.page_goods_select_size_tip;
                                            break;
                                        case 'wrap':
                                            msg = _lang.page_goods_select_wrap_jacket_tip;
                                            break;
                                        case 'heel_type':
                                            msg = _lang.page_goods_select_heel_type_tip;
                                            break;
                                    };
                                    items[ipt_name] = [
                                        {type: 'select', value: 0, errMsg: msg}
                                    ];
                                }
                            }
                        };
                        addMixSelectsToItems("bodice_color");
                        addMixSelectsToItems("sash_color");
                        addMixSelectsToItems("embroidery_color");
                        addMixSelectsToItems("size");
                        addMixSelectsToItems("wrap");
                        addMixSelectsToItems("heel_type");
                        addMixSelectsToItems("color");
                        //add mix input to items_custom
                        var addMixInputsToItemsCustom = function (styleName) {
                            var ipts = product.next().find(':input[name$="[styles][input][' + styleName + ']"]');
                            for (var i = 0;i < ipts.length; i++) {
                                var ipt = ipts.eq(i);
                                var ipt_name = ipt.attr('name');
                                if((!items_custom[ipt_name]) && ipt.closest('li').is(':visible')) {
                                    switch(styleName){
                                        case 'bust':
                                            msg = _lang.page_common_enter_bust;
                                            break;
                                        case 'waist':
                                            msg = _lang.page_common_enter_waist;
                                            break;
                                        case 'hips':
                                            msg = _lang.page_common_enter_hips;
                                            break;
                                        case 'hollow_to_floor':
                                            msg = _lang.page_common_enter_floor;
                                            break;
                                        case 'hollow_to_hem':
                                            msg = _lang.page_common_enter_hem;
                                            break;
                                        case 'height':
                                            msg = _lang.page_common_enter_height;
                                            break;
                                        case 'shoulder_width':
                                            msg = _lang.page_common_enter_shoulder;
                                            break;
                                        case 'shoulder_to_bust':
                                            msg = _lang.page_common_enter_shoulder_to_bust;
                                            break;
                                        case 'armhole':
                                            msg = _lang.page_common_enter_armhole;
                                            break;
                                        case 'extra_length':
                                            msg = _lang.page_common_enter_extra_length;
                                            break;
                                    };
                                    items[ipt_name] = [
                                        {type: 'null', errMsg: msg}
                                    ];
                                }
                            }
                        };
                        addMixInputsToItemsCustom("bust");
                        addMixInputsToItemsCustom("waist");
                        addMixInputsToItemsCustom("hips");
                        addMixInputsToItemsCustom("hollow_to_floor");
                        addMixInputsToItemsCustom("hollow_to_hem");
                        addMixInputsToItemsCustom("height");
                        addMixInputsToItemsCustom("shoulder_width");
                        addMixInputsToItemsCustom("shoulder_to_bust");
                        addMixInputsToItemsCustom("armhole");
                        addMixInputsToItemsCustom("extra_length");

                        //将未知项追加到items中
                        (function () {
                            var ipts = product.next().find(':input[name^="mixMatchFormData"]');
                            for (var i = 0; i < ipts.length; i++) {
                                var ipt = ipts.eq(i);
                                var ipt_name = ipt.attr('name');
                                if ((!items[ipt_name]) && ipt.closest('li').is(':visible')) {
                                    if (ipt.is(':text')) {
                                        msg = _lang.page_goods_please_provide + ' \"' + get_tip_text(ipt) + '\"';
                                        items[ipt_name] = [
                                            {type: 'default', errMsg: msg}
                                        ];
                                        // } else if (ipt.is(':promptText')) {
                                        //     msg = _lang.page_goods_please_provide + ' \"' + get_tip_text(ipt) + '\"';
                                        //     items[ipt_name] = [
                                        //         {type: 'default', errMsg: msg}
                                        //     ];
                                    } else {
                                        msg = _lang.page_common_please_select_ + ' \"' + get_tip_text(ipt) + '\"';
                                        items[ipt_name] = [
                                            {type: 'select', value: 0, errMsg: msg}
                                        ];
                                    }
                                }
                            }
                        })();
                    }
                })
                fceMix = new FormCheckEach({
                    "elem_form": mix_styles_form,
                    "items": items,
                    "showError": showError,
                    "rules": special_rules
                });
                //add tips for mix product
                $('.mix-item-styles').each(function(index, dom) {
                    var mix_item_styles = $(dom);
                    data['mix_freestyle'] = mix_item_styles.find('input[name$="[styles][freestyle]"]').val() == 'true';
                    if (data['mix_freestyle']) {
                        var ipts = mix_styles_form.find('select[name*="[styles][select]"], input[name*="[styles][text]"]');
                        for (var i = 0; i < ipts.length; i++) {
                            var elem = ipts.eq(i);
                            var elem_val = elem.val();
                            var elem_label = get_tip_text(elem);
                            if (!elem_val || elem_val == 0 || elem_val == elem_label) {
                                data['ipts'].push(elem);
                            }
                        }
                    } else {
                        var mix_goods_ipts = mix_item_styles.find(':input[name^="mixMatchFormData"]');
                        for (var i = 0; i < mix_goods_ipts.length; i++) {
                            var ipt = mix_goods_ipts.eq(i);
                            if (items[ipt.attr('name')] && ipt.closest('li').is(':visible')) {
                                if (!fceMix.checkOne(ipt, false)) {
                                    data['ipts'].push(ipt);
                                }
                            }
                        }

                    }
                })
            };

            return data;
        };

        //鼠标悬浮在 Add to Cart 和 Buy Together 按钮上时文字提示
        var isTipsy = (styles_form.find('.cart_act').length > 0);
        $.fn.show_tipsy = function (obj) {
            var btn_addtocart = $(this);
            var tip_text = '';

            var data = get_wrong_data();
            var ipts = data['ipts'];
            for (var i = 0; i < ipts.length; i++) {
                tip_text += '<p>' + get_tip_text(ipts[i]) + '</p>';
            }

            if(data['has_accept_our_conditions_checkbox'] && !data['accept_our_conditions']){
                tip_text += '<span>' + _lang.page_common_accept_our_conditions + '</span>';
            }
            if(customSizeTermsSwitch && data['custom'] && data['isHasCustomSizeTermsElement'] && !data['isSelectCustomSizeTermsCheckbox']){
                tip_text += '<span>' + _lang.page_common_accept_our_conditions + '</span>';
            }
            if(data['has_select_country'] && !data['select_country_value']){
                tip_text += '<p>' + _lang.page_checkout_please_select_country + '</p>';
            }

            //uk au "color" => "colour"
            if(!!~['_au', '_uk'].indexOf(lang_suffix)) {
                tip_text = tip_text.replace(/Color/g, 'Colour')
            }

            if (isTipsy) {
                if (tip_text) {
                    if(customSizeTermsSwitch && ipts.length == 0 && data['custom'] && data['isHasCustomSizeTermsElement'] && !data['isSelectCustomSizeTermsCheckbox']) {
                        tip_text;
                    } else if (ipts.length == 0 && data['has_accept_our_conditions_checkbox'] && !data['accept_our_conditions']) {
                        tip_text;
                    } else {
                        tip_text = '<p>' + _lang.page_goods_please_provide + '</p>' + tip_text;
                    }
                    btn_addtocart.attr('title', tip_text).tipsy("show");
                } else {
                    btn_addtocart.removeAttr('title').tipsy("hide").css('opacity', '1');
                }
            } else {
                if (!document.getElementById('msg')) {
                    $('<div id="msg" class="msgSubmit2" style="top: 0px;left: 0px;"><em></em><div id="msg_con"></div></div>').prependTo("body")
                }
                if (tip_text) {
                    var html = '';
                    if(customSizeTermsSwitch && ipts.length == 0 && data['custom'] && data['isHasCustomSizeTermsElement'] && !data['isSelectCustomSizeTermsCheckbox']) {
                        html = '<dl><dd>' + tip_text + '</dd></dl>';
                    } else if (ipts.length == 0 && data['has_accept_our_conditions_checkbox'] && !data['accept_our_conditions']) {
                        html = '<dl><dd>' + tip_text + '</dd></dl>';
                    } else {
                        html = '<dl><dt>' + _lang.page_goods_please_provide + '</dt><dd>' + tip_text + '</dd></dl>';
                    }
                    $('#msg_con').html(html);
                    var xy = btn_addtocart.offset();
                    xy.left += btn_addtocart.outerWidth() + 12
                    $('#msg').css(xy).show()
                } else {
                    $('#msg').hide()
                }
            }
        };

        if(isMixMatch){
            $('.mix-match-goods-add-to-cart-out').mouseover(function () {
                $(this).show_tipsy();
            }).mouseout(function () {
                $('#msg').hide()
            });
            return true;
        }else{
            if (isTipsy) {
                $('#_add_to_cart').tipsy({
                    html: true,
                    gravity: 'e'
                }).mouseover(function () {
                    $(this).hasClass('confirm_design') || $(this).show_tipsy();
                }).mouseout(function () {
                    $(this).tipsy("hide");
                });
            } else {
                $('#_add_to_cart_out').mouseover(function () {
                    $(this).hasClass('confirm_design') || $(this).show_tipsy();
                }).mouseout(function () {
                    $('#msg').hide()
                });
            }
        }

        //提交表单
        var check_form = function () {
            var data = get_wrong_data();
            var ipts = data['ipts'];
            if(data['has_accept_our_conditions_checkbox'] && !data['accept_our_conditions']){
                fce.checkOne(data['accept_our_conditions_ipts'], true);
                return false;
            }
            if(customSizeTermsSwitch && data['custom'] && data['isHasCustomSizeTermsElement'] && !data['isSelectCustomSizeTermsCheckbox']){
                animateCustomSizeTerms(6);
                return false;
            }
            if(data['has_select_country'] && !data['select_country_value']){
                jumpToElement('_product_country');
                var selectCountry = $('#_product_country');
                animateStyles(selectCountry, 6)
                return false;
            }
            if(ipts.length == 0) {
                //不是Custom Size的话是不用检查下列数据
                if(! data['custom']) {
                    return true;
                }
                var ipts_custom = styles_form.find('.custom_size select').not(':disabled');
                var hips = ipts_custom.filter('select[name="styles[input][hips]"]');
                var bust = ipts_custom.filter('select[name="styles[input][bust]"]');
                var waist = ipts_custom.filter('select[name="styles[input][waist]"]');
                var hollow = ipts_custom.filter('select[name="styles[input][hollow_to_floor]"]');
                var hem = ipts_custom.filter('select[name="styles[input][hollow_to_hem]"]');
                var height = ipts_custom.filter('select[name="styles[input][height]"]');
                var extra_length = ipts_custom.filter('select[name="styles[input][extra_length]"]');

                if(!isNaN(parseFloat(bust.val())) && !isNaN(parseFloat(waist.val()))) {
                    var diff_bust_waist = parseFloat(bust.val()) - parseFloat(waist.val());
                    var diff_height_hem = parseFloat(height.val()) - parseFloat(hem.val());
                    var diff_height = parseFloat(height.val()) - parseFloat(hollow.val());
                    if(pageData.productGlobals.isMaternityBrideDress) {
                        console.log(diff_bust_waist);
                        console.log(diff_height)
                        if((diff_bust_waist > 9) || (diff_height > 13 || diff_height < 8)) {
                            bust.focus();
                            alertError.open(_lang.page_common_custom_size_maternity_notify)
                            return false;
                        }
                    } else if (pageData.productGlobals.isFlowerDress) {
                        if ( diff_height_hem > 36 || diff_height_hem < 5) {
                                hem.focus();
                                alertError.open(_lang.page_common_height_hollow_to_hem_notice)
                                return false;
                            }
                    } else if(pageData.productGlobals.isJuniorDress) {
                        if(diff_height > 13 || diff_height < 8) {
                            hollow.focus();
                            alertError.open(_lang.page_common_custom_size_junior_dress_notify)
                            return false;
                        }
                    } else  {
                        if(diff_height > 13 || diff_height < 8) {
                            bust.focus();
                            alertError.open(_lang.page_common_custom_size_junior_dress_notify)
                            return false;
                        }
                    }
                }
                return true;
            } else if($('#add-to-cart-box').is(':visible')){
                fceMix.checkOne($(ipts[0]), true);
                return false;
            } else {
                if($(ipts[0]).attr('name') == 'styles[select][size]' && data['custom']) {
                    fce_custom.checkOne($(data['ipts_custom'][0]), true);
                } else if (ipts[0].attr('name').indexOf('styles[origin_image]') > -1) {
                    var kname = ipts[0].attr('data-kname')
                    var source = styles_form.find(':input[name="styles[image][' + kname +'][source]"]').val()
                    var composite = styles_form.find(':input[name="styles[image][' + kname +'][composite]"]').val()
            
                    if (!source || !composite) {
                        jumpToElement('image-input-' + kname);
                        var imageInputElem = $('#image-input-' + kname).parent();
                        animateStyles(imageInputElem, 6);
                    }
                } else {
                    if($(ipts[0]).attr('name') == 'styles[select][size]') {
                        fce.checkOne($(ipts[0]), false);
                        animateSizeSelect(6);
                    }else {
                        fce.checkOne($(ipts[0]), true);
                    }
                }
                return false;
            }
        };

        var dialog = $('#add-to-cart-box')
        var closeDialog = function() {
            $('#dialogOverlay').hide()
            $(dialog).hide()
        }
        var openDialog = function() {
            $('#succeed-mix-match-goods').html('');
            if ($('#dialogOverlay').size() > 0) {
                var layer = $('#dialogOverlay')
            } else {
                var layer = $('<div id="dialogOverlay"><div style="background:rgb(0,0,0);"></div></div>').prependTo('body')
            }
            layer.show().children('div').stop().fadeTo(0, 0.1).fadeTo("fast", 0.4)
            $(dialog).css('display', 'flex')

            $(dialog).find('.close-add-to-cart-icon').on('click', function() {
                closeDialog()
                $('body').removeClass('hide-windown-scroller')
            })

            return true
        }

        var getStylesMap = function() {
            var styleMap = [];

            for(var index in pageData.goodsStyles.styles){
                var style = pageData.goodsStyles.styles[index];
                if (typeof style.children !== 'undefined') {
                    for (var id in style.children) {
                        styleMap[style.children[id].id] = style.children[id].value;
                    }
                }
            }

            return styleMap;
        }

        var getSelectedStyles = function() {
            var ipts = [];
            if (is24hrsMode()) {
                ipts = styles_form.find('.ship-in-24hrs-styles').find(':input[name^="styles[select]"], input[name^="styles[text]"], :input[name^="styles[promptText]"], :input[name^="styles[origin_image]"]');
            } else if(isSpecialOfferMode()) {
                ipts = styles_form.find('.special-offer-styles').find(':input[name^="styles[select]"], input[name^="styles[text]"], :input[name^="styles[promptText]"], :input[name^="styles[origin_image]"]');
            } else {
                ipts = styles_form.find('.all-styles').find(':input[name^="styles[select]"], input[name^="styles[text]"], :input[name^="styles[promptText]"], :input[name^="styles[origin_image]"]');
            }

            var selectedStyle = [];
            var styleMap = getStylesMap();
            for (var i = 0; i < ipts.length; i++) {
                var ipt = ipts.eq(i);

                //only text or promptText no need
                if((typeof ipt.attr('type') !== 'undefined' && ipt.attr('type') == 'text')){
                    selectedStyle.push({name: ipt.data('value'), value: ipt.val()});
                    // selectedStyle[ipt.data('value')] = ipt.val();
                }else{
                    if(typeof styleMap[ipt.val()] !== 'undefined' && !ipt.prop('disabled')){
                        selectedStyle.push({name: ipt.data('value'), value: styleMap[ipt.val()]});
                        //selectedStyle[ipt.data('value')] = styleMap[ipt.val()];
                    }
                }
            }
            if($('.custom_checkbox').find('input[name=custom]').is(':checked')){
                selectedStyle.push({name: _lang.page_common_size, value: _lang.page_goods_custom_size});
            }
            return selectedStyle;
        }

        var fillSelectedData = function(){
            var selectedStyles = getSelectedStyles();
            var imgUrl = pageData.picForShare;
            if(webData.lang == 'fr' && webData.currency == 'EUR'){
                var price = $('#id_shop_price').text() + ' ' + $('.prod-price-symbol').eq(0).text();
            }else{
                var price = $('.prod-price-symbol').eq(0).text() + ' ' + $('#id_shop_price').text();
            }
            var goodsName = pageData.goodsName;
            var goodsQuantity = typeof(styles_form.find('.input-quantity').val()) !== 'undefined' ? styles_form.find('.input-quantity').val() : 1;

            var imgHtml = '<img class="show-img" src="' + imgUrl + '">';
            $('#add-to-cart-box .goods-img').html(imgHtml);

            $('#add-to-cart-box .goods-name').html(goodsName);
            $('#add-to-cart-box .goods-quantity-num').html(goodsQuantity);

            $('#add-to-cart-box .goods-price').html(price);

            var styleHtml = '';
            $.each(selectedStyles, function(key, value) {
                styleHtml += '<div><span class="style-name">' + value.name + ':</span>' + '<span class="">'+value.value+'</span></div>';
            });
            $('#add-to-cart-box .new-style').html(styleHtml);

            updateCartQty(goodsQuantity);
        }

        styles_form.submit(function () {
            var checkResult = check_form();
            if (checkResult == false) {
                return false;
            }
            if (userAgent.isIpad()) {
                styles_form.find("input[name='byAjax']").remove();
            }

            if (pageData.full_screen_btn_clicked !== undefined && pageData.full_screen_btn_clicked) {
                window.dataLayer.push({
                    'event' : 'addToCartAfterBtnClicked'
                });
            }

            var byAjax = styles_form.find("input[name='byAjax']").val();
            if (byAjax == "true") {
                $.ajax({
                    type: 'post',
                    url: webData.WEB_ROOT + 'ajax.php',
                    data: $(this).serialize(),
                    dataType: 'json',
                    success: function (r) {
                        if (r.code == 'success') {
                            openDialog();
                            fillSelectedData();
                            $('#mix-match-disigned-match').data('rec-id', r.mainRecId);
                            $('body').addClass('hide-windown-scroller');
                        } else {
                            $(".nav-cart-desc-error").html(r.msg).show();
                        }
                    },
                    error: function () {
                        $(".nav-cart-desc-net-error").show();
                    }
                });
            } else {
                return checkResult;
            }
            return false;
        });

        //when add mix match goods
        $('.mix-match-goods-add-to-cart-out').click(function(){
            var that = $(this);
            var checkResult = check_form();
            if (checkResult == false) {
                return false;
            }
            var mixGoodsId = $(this).closest('.slide-mix-match').data('mix-goods-id');
            var recId = $('#mix-match-disigned-match').data('rec-id');
            if(!recId){
                return false;
            }

            var defaultData = {
                'goods_id': mixGoodsId,
                'act': 'add_cart_item',
                'main_goods_id': pageData.goods_id,
                'main_rec_id': recId,
                'add_from': 'mixMatch',
                'byAjax': 'true'
            };


            var currStyles = $(this).closest('.slide-mix-match').find('.mix-item-styles').find("[name^='mixMatchFormData["+mixGoodsId+"]']").serializeArray();
            for(let i = 0; i < currStyles.length; i++){
                var currName = currStyles[i].name;
                if(currName.indexOf('mixMatchFormData[' + mixGoodsId + ']') >= 0) {
                    var currName = currName.replace('mixMatchFormData[' + mixGoodsId + ']', '').substring(1).replace(']', '');
                }
                defaultData[currName] = currStyles[i].value;
            }

            $.ajax({
                type: 'post',
                dataType: "json",
                url: webData.WEB_ROOT + 'ajax.php',
                data: defaultData,
                success: function (r) {
                    if(r.code == 'success'){
                        $('.has-mix-match').addClass('has-succ-mix-match')
                        $('.succeed-mix-match-goods').append('<div class="added-img-goods"><img class="added-img-goods-img" src="'+that.closest('.slide-mix-match').find('.curr-goods-img').attr('src')+'"></div>');
                        if($('.succeed-mix-match-goods').find('.added-img-goods').length > 5){
                            $('.has-mix-match').addClass('has-mix-match-scroll');
                        }
                        updateCartQty(parseInt(defaultData['goods_number']));
                    }else{
                        return false;
                    }
                }
            });

        });

        $('.subscribe_offgoods').on('click', function () {
            if (check_form() == false) {
                return false
            }

            var goods_id = $(this).attr('data-goods-id')
            var source = $(this).attr('data-source')

            new popSubscribeOffGoods(goods_id, source, function() {                    
                $('.need-subscribe-block').hide()
                $('.have-subscribed-block').show()
            }).open()
        })

    };
    
    var init_custom_tips = function() {
        //i help show select custom tips
        //_lang.page_common_tailoring_time_tip
        if ($('.by-select-custom-size')[0]) {
            require('../mod/texttip');
            var text = $("#by-select-custom-size-tips").text();
            $('.by-select-custom-size').parent().texttip({
                html: text,
                left: 3,
                top: 6
            });
        }
    };

    var setSizeTipClass = function() {
        var selectedSize = styles_form.find('select[name="styles[select][size]"]').find('option:selected');
        if(selectedSize.length <= 0) {
            selectedSize = styles_form.find('input[name="styles[select][size]"]')
        }
        var selectedSizeValue = selectedSize.val();
        if(selectedSizeValue > 0 || isCheckedCustom || isCheckedUnsureSize) {
            selectedSize.closest('li').find('.selected_tip').removeClass('warning')
        }else {
            selectedSize.closest('li').find('.selected_tip').addClass('warning')
        }
    }

    var animateSizeSelect = function (animateTimes) {
        if(animateTimes <= 0) {
            return
        }
        var selectedSize = styles_form.find('select[name="styles[select][size]"]').not(':disabled')
        if(selectedSize.length <= 0) {
            selectedSize = styles_form.find('input[name="styles[select][size]"]')
        }
        var sizeContainerLi = selectedSize.closest('li');

        //animate dom
        var selectTip = sizeContainerLi.find('.simple_tab_select_res');
        var selectWarning = sizeContainerLi.find('.warning');
        var selectDom = sizeContainerLi.find('select');
        var selectHelp = sizeContainerLi.find('.simple_tab_openwin_help_wrap')
        var select24h = sizeContainerLi.find('.pis-size-box');
        var selectSpecial = sizeContainerLi.find('.style-select-item-container')
        var selectSample = sizeContainerLi.find('.sample_dress_size')

        if(animateTimes % 2 == 0) {
            selectTip.animate({"margin-left": "-=10px"}, 'fast', 'swing', animateSizeSelect(animateTimes-1))
            selectDom.animate({"margin-left": "-=10px"}, 'fast', 'swing')
            selectHelp.animate({"margin-left": "-=10px"}, 'fast', 'swing')
            selectSpecial.animate({"margin-left": "-=10px"}, 'fast', 'swing')
            select24h.animate({"margin-left": "-=10px"}, 'fast', 'swing')
            selectSample.animate({"margin-left": "-=10px"}, 'fast', 'swing')
            selectWarning.animate({"margin-left": "-=10px"}, 'fast', 'swing')
        } else {
            selectTip.animate({"margin-left": "+=10px"}, 'fast', 'swing', animateSizeSelect(animateTimes-1))
            selectDom.animate({"margin-left": "+=10px"}, 'fast', 'swing')
            selectHelp.animate({"margin-left": "+=10px"}, 'fast', 'swing')
            selectSpecial.animate({"margin-left": "+=10px"}, 'fast', 'swing')
            select24h.animate({"margin-left": "+=10px"}, 'fast', 'swing')
            selectSample.animate({"margin-left": "+=10px"}, 'fast', 'swing')
            selectWarning.animate({"margin-left": "+=10px"}, 'fast', 'swing')
        }
    }

    var animateCustomSizeTerms = function (animateTimes) {
        if(animateTimes <= 0) {
            return;
        }

        //animate dom
        var acceptCustomSizeTerms = styles_form.find('.accept-custom-size-terms');

        if(animateTimes % 2 == 0) {
            acceptCustomSizeTerms.animate({"margin-left": "-=10px"}, 'fast', 'swing', animateCustomSizeTerms(animateTimes-1));
        } else {
            acceptCustomSizeTerms.animate({"margin-left": "+=10px"}, 'fast', 'swing', animateCustomSizeTerms(animateTimes-1));
        }
    }

    var init_personalize_card = function () {
        // Select the first picture color only for personalize card
        var trims = styles_form.find('.personalize-card .trim-box .trim-a');
        if (trims && trims.length > 0) {
            thumb.init();
            var pisColors = styles_form.find('.pis-color-box .pis-color-a');
            if (pisColors && pisColors.length > 0) {
                $(pisColors[0]).click();
            }

            $(trims[0]).click();
        }
    };

    //when out of stock, clicking the goods' colors and sizes, the 'find similar' window pops up
    var open_find_similar_window = function () {
        var similarWindow = $('.pis-color-a, .sample_dress_size_value, .style-select-item');
        similarWindow.click(function () {
            if(isOnSale==0){
                showFindSimilar();
            }
        })
    }

    var showFindSimilar = function () {
        var bottomWindow = $("#similar-myModal");
        if( bottomWindow.length > 0){
            bottomWindow.css('display', 'block');
            document.documentElement.style.overflow = 'hidden';
        }
    }

    var jumpToElement = function(elemName){
        var scrollToElem = document.getElementById(elemName);
        if (scrollToElem != null){
            scrollToElem.scrollIntoView({block: 'center', behavior: 'smooth'});
        }
    }

    var animateStyles = function (elem, animateTimes) {
        if (elem.length == 0){
            return;
        }
        if(animateTimes <= 0) {
            return;
        }

        //var styleElem =  styles_form.find(elemId);
        if(animateTimes % 2 == 0) {
            elem.animate({"margin-left": "-=10px"}, 'fast', 'swing', animateStyles(elem, animateTimes-1));
        } else {
            elem.animate({"margin-left": "+=10px"}, 'fast', 'swing', animateStyles(elem, animateTimes-1));
        }
    }

    var init = function () {
        init_width();
        change_handler();
        init_custom_size();
        form_handler();
        init_personalize_card();
        // init_offgoods_subscribe();
        open_find_similar_window();
    }

    module.exports = {
        "init": init,
        "change_handler": change_handler,
        "init_custom_size": init_custom_size,
        "form_handler": form_handler,
        "init_custom_tips": init_custom_tips,
        "init_personalize_card": init_personalize_card,
        "set_bestselling_imgs": set_best_selling_imgs
    };
//});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{"../common/cart_quick_display":1,"../common/events":2,"../lib/PayPalCheckout":12,"../lib/jqueryTipsy":14,"../lib/paymentPlacements":15,"../mod/alertMessage":16,"../mod/cookie":19,"../mod/formCheckEach":23,"../mod/popSubscribeOffGoods":25,"../mod/priceStyle":26,"../mod/texttip":28,"../mod/userAgent":29,"./add_to_cart_util":4,"./thumb_pictures":11}],4:[function(require,module,exports){
var StyleDelivery = require('./style_delivery');
var styleDelivery = new StyleDelivery();
var startOffsetDay = 0;
var endOffsetDay = 0;
var isAll24hrsStyle = typeof pageData.isAll24hrsStyle !== 'undefined' && pageData.isAll24hrsStyle > 0;
var timeformat = _lang.page_common_month_format;
var timeOffsetHour = pageData.timeOffsetHour;
var defaultShippingTime = pageData.defaultShippingTime;
var monthLanguage = pageData.monthLanguage;

module.exports = {
    "getStyleList": function(styleForm, stylesCheckDelivery) {
        var styleList = [];
        // styles use select box
        styleForm.find('select').each(function(){
            if ($(this).attr('disabled') == 'disabled')
                return

            if ($(this).attr('id') == '_color') {
                styleList['Color'] = $('#_color').find('option:selected').attr('value');
            }
            if ($(this).attr('id') == '_size') {
                styleList['Size'] = $('#_size').find('option:selected').attr('value');
            }
            if ($(this).attr('name') == 'styles[select][size]') {
                styleList['Size'] = $(this)[0].value;
            }
            for (var i in stylesCheckDelivery) {
                var selectName = 'styles[select][' + stylesCheckDelivery[i].toLowerCase().replace(' ', '_') + ']';
                if ($(this).attr('name') == selectName) {
                    styleList[stylesCheckDelivery[i]] =  $(this).find('option:selected').attr('value');
                }
            }
        });
        // styles use color lumps
        styleForm.find('input').each(function(){
            if ($(this).attr('disabled') == 'disabled')
                return

            if ($(this).attr('name') == 'styles[select][color]') {
                styleList['Color'] = $(this)[0].value;
            }
            if ($(this).attr('name') == 'styles[select][size]') {
                styleList['Size'] = $(this)[0].value;
            }
            for (var i in stylesCheckDelivery) {
                var selectName = 'styles[select][' + stylesCheckDelivery[i].toLowerCase().replace(' ', '_') + ']';
                if ($(this).attr('name') == selectName) {
                    styleList[stylesCheckDelivery[i]] = $(this).attr('value');
                }
            }
        });
        return styleList
    },
    "showProcessingTime": function(ischeckedCoustom, styles_form, stylesCheckDelivery) {
        var oldProcessingTime = $(".old-processing-time");
        var newProcessingTime = $(".new-processing-time");
        var make_time_span = $("span[id=\"make_time\"]");
        var estimateDateShow = $('#faq-delivery-time')
        var styleList = this.getStyleList(styles_form, stylesCheckDelivery)
        var shipTimeControl = function(defaultMaxMakeTime, defaultMakeTimeStr) {
            var shouldShowCls = ".switch-ship-" + parseInt(defaultMaxMakeTime) * 24
            var minMakeOffsetDay = 0;
            var maxMakeOffsetDay = 0;
            if(defaultMakeTimeStr == '1') {
                minMakeOffsetDay = maxMakeOffsetDay = 1;
            } else  {
                var timeOffset = defaultMakeTimeStr.split('-');
                minMakeOffsetDay = timeOffset[0]
                maxMakeOffsetDay = timeOffset[1]
            }
            if(minMakeOffsetDay == startOffsetDay && maxMakeOffsetDay == endOffsetDay) {
                return;
            } else {
                startOffsetDay = minMakeOffsetDay
                endOffsetDay = maxMakeOffsetDay
            }
            if(newProcessingTime.find(shouldShowCls).length > 0) {
                oldProcessingTime.hide();
                newProcessingTime.find("img.switch-ship").hide()
                newProcessingTime.find(shouldShowCls).show()
                newProcessingTime.show();
            } else {
                oldProcessingTime.show();
                newProcessingTime.hide();
            }
            make_time_span.html(defaultMakeTimeStr == 1 ? '<1' : defaultMakeTimeStr).text()
            var timestamp = new Date().getTime();
            var localTimestamp = timestamp + (parseInt(timeOffsetHour) * 3600000 )

            var minOffsetDay = parseInt(minMakeOffsetDay) + parseInt(defaultShippingTime['min'])
            var maxOffsetDay = parseInt(maxMakeOffsetDay) + parseInt(defaultShippingTime['max'])
            var startDateObj = new Date(localTimestamp + minOffsetDay * 86400000)
            var endDateObj = new Date(localTimestamp + maxOffsetDay * 86400000)
            var startDateMonth = monthLanguage[startDateObj.getUTCMonth() + 1]
            var startDateDay = startDateObj.getUTCDate()
            var endDateMonth = monthLanguage[endDateObj.getUTCMonth() + 1]
            var endDateDay = endDateObj.getUTCDate()
            var estimateDateText = timeformat.replace('{month}',startDateMonth).replace('{day}',startDateDay) + ' - ' + timeformat.replace('{month}',endDateMonth).replace('{day}',endDateDay)
            estimateDateShow.text(estimateDateText)
        }

        if(ischeckedCoustom) {
            shipTimeControl(pageData.defaultMaxMakeTime, pageData.defaultMakeTime)
            return
        }

        // 如果去掉了自定义尺码， 需要重新计算当前选择的信息， 确认是24小时还是48小时
        // empty goods style delivery return
        var haveStyleDelivery = false;
        for (var i in pageData.goodsStyleDelivery) {
            haveStyleDelivery = true;
            break;
        }
        if(haveStyleDelivery) {
            for (var i in pageData.goodsStyleDelivery) {
                if (styleDelivery.checkStyleDelivery(pageData.goodsStyleDelivery[i],styleList)) {
                    var makeTime = '';
                    if (pageData.goodsStyleDelivery[i]['config']['max'] == "1") {
                        makeTime = '1';
                    } else {
                        makeTime = pageData.goodsStyleDelivery[i]['config']['min'] + '-' + pageData.goodsStyleDelivery[i]['config']['max'];
                    }
                    shipTimeControl(pageData.goodsStyleDelivery[i]['config']['max'], makeTime)
                    return;
                }
            }
        }

        var specialOfferStyleInfo = this.getSpecialOfferStyleInfo(styles_form, stylesCheckDelivery);
        if(specialOfferStyleInfo.style_delivery_max > 0 && specialOfferStyleInfo.style_delivery_min > 0) {
            shipTimeControl(specialOfferStyleInfo.style_delivery_max, specialOfferStyleInfo.style_delivery_min + '-' + specialOfferStyleInfo.style_delivery_max)
            return;
        }

        shipTimeControl(pageData.defaultMaxMakeTime, pageData.defaultMakeTime)
    },
    "getStylesCheckDelivery": function() {
        var stylesCheckDelivery = [];
        for (var i in pageData.selectStyles) {
            var style_name = pageData.selectStyles[i].toLowerCase();
            if (style_name != 'color' && style_name != 'size') {
                stylesCheckDelivery.push(pageData.selectStyles[i]);
            }
        }
        return stylesCheckDelivery;
    },
    "getSelectableStyle": function (selectedStyle, currentStyleName) {
        var selectableStyle = [];

        for (var i in pageData.goodsStyleDelivery) {
            var delivery = pageData.goodsStyleDelivery[i];

            if (delivery['config']['max'] > 1) {
                continue;
            }

            var skutonum = delivery['skutonum'] && typeof delivery['skutonum'] === "object" ? delivery['skutonum'] : {};

            if (Object.keys(skutonum).length > 0) {
                for (var sku in skutonum) {
                    var lowerSkutonum = {};
                    for (var key in skutonum[sku]) {
                        lowerSkutonum[key.toLowerCase()] = skutonum[sku][key];
                    }
                    var isMatch = skutonum[sku]['Num'] > 0;
                    for(var selectedStyleName in selectedStyle) {
                        var styleId = selectedStyle[selectedStyleName];
                        isMatch = isMatch && (styleId == 0 || (typeof skutonum[sku][selectedStyleName] !== 'undefined' && skutonum[sku][selectedStyleName] == styleId) || (typeof lowerSkutonum[selectedStyleName] !== 'undefined' && lowerSkutonum[selectedStyleName] == styleId));
                    }

                    if (isMatch && typeof skutonum[sku][currentStyleName] !== 'undefined' && $.inArray(skutonum[sku][currentStyleName], selectableStyle) === -1) {
                        selectableStyle.push(skutonum[sku][currentStyleName]);
                    } else if (isMatch && typeof lowerSkutonum[currentStyleName] !== 'undefined' && $.inArray(lowerSkutonum[currentStyleName], selectableStyle) === -1) {
                        selectableStyle.push(lowerSkutonum[currentStyleName]);
                    }
                }
            }
        }

        return selectableStyle;
    },
    "getSelectableStyleFromSpecialSku": function (selectedStyle, currentStyleName) {
        currentStyleName = currentStyleName.toLowerCase().replace(/\s+/g, "_");
        var selectableStyle = [];

        for (var i in pageData.goodsSpecialSku) {
            var specialSku = pageData.goodsSpecialSku[i];

            var styles = specialSku['styles'] && typeof specialSku['styles'] === "object" ? specialSku['styles'] : {};

            if (Object.keys(styles).length > 0) {
                var isMatch = true;
                for(var selectedStyleName in selectedStyle) {
                    var styleId = selectedStyle[selectedStyleName];
                    var lowerStyleName = selectedStyleName.toLowerCase().replace(/\s+/g, "_");
                    isMatch = isMatch && (styleId == 0 || (typeof styles[lowerStyleName] !== 'undefined' && styles[lowerStyleName] == styleId));
                }

                if (isMatch && typeof styles[currentStyleName] !== 'undefined' && $.inArray(styles[currentStyleName], selectableStyle) === -1) {
                    selectableStyle.push(styles[currentStyleName]);
                }
            }
        }

        return selectableStyle;
    },
    "getSpecialOfferStyleInfo": function (styleForm, stylesCheckDelivery) {
        var styleList = this.getStyleList(styleForm, stylesCheckDelivery);
        var obj = {};
        for (var key in styleList) {
            obj[key.toLowerCase()] = styleList[key];
        }
        styleList = obj;

        var specialOfferStyleInfo = {
            shop_price: 0,
            origin_shop_price: 0,
            style_delivery_max: 0,
            style_delivery_min: 0,
        };
        for (var i in pageData.goodsSpecialSku) {
            var specialSku = pageData.goodsSpecialSku[i];
            var styles = specialSku['styles'] && typeof specialSku['styles'] === "object" ? specialSku['styles'] : {};
            if(this.isObjEqual(styleList, styles)) {
                specialOfferStyleInfo = {
                    shop_price: typeof specialSku['shop_price_exchange'] !== 'undefined' ? specialSku['shop_price_exchange'] : 0,
                    origin_shop_price: typeof specialSku['shop_price'] !== 'undefined' ? specialSku['shop_price'] : 0,
                    style_delivery_max: typeof specialSku['style_delivery_max'] !== 'undefined' ? specialSku['style_delivery_max'] : 0,
                    style_delivery_min: typeof specialSku['style_delivery_min'] !== 'undefined' ? specialSku['style_delivery_min'] : 0,
                };
            }
        }

        return specialOfferStyleInfo;
    },
    "getCatId": function() {
        return pageData.cat_id;
    },
    "updateStock": function (isSampleDress, is24hrs) {
        var stock = 0;
        var dressCatIds = [2,3,4,7,8,9,10,16,17,18,22,295];
        if(pageData.is_presale) {
            stock = 0;
        }else if(isSampleDress) {
            stock = this.getSampleDressStock();
            if(stock > 5) stock = 5;
        } else if(is24hrs || isAll24hrsStyle) {
            stock = this.get24hrsStock();
            var isDress = false
            var catId = this.getCatId();
            for(var i = 0; i < dressCatIds.length; ++i){
                if(dressCatIds[i] == catId) {
                    isDress = true;
                    break;
                }
            }

            if(isDress) {
                if(stock > 5) stock = 5;
            } else {
                stock = 0
            }

        }
        if(stock <= 0) {
            $('#stock_left').empty();
        } else {
            var html = "<span>" + stock + "</span>";
            $('#stock_left').html(_lang.page_common_only_left.replace("{$num}", html));
            if(stock < 20) {
                $('#stock_left').addClass('important');
            } else {
                $('#stock_left').removeClass('important');
            }
        }
    },
    //比较2个对象是否相同
    "isObjEqual": function (o1, o2) {
        if (Object.keys(o1).length !== Object.keys(o2).length) {
            return false;
        }
        for (var key in o1) {
            if (o1[key] !== o2[key]) {
                return false;
            }
        }
        return true;
    },
    "getSampleDressStock": function () {
        var goodsStockWithStyles = pageData.goodsStockWithStyles;
        var selectedFacility = 0;
        var isOnSale = pageData.isOnSale;
        if(isOnSale == 0){
            return 0;
        }
        if(typeof goodsStockWithStyles !== 'undefined') {
            if($('#_product_country').length > 0){
                selectedFacility = $('#_product_country').find('option:selected').attr('kvalue');
            } else {
                for (var facility in goodsStockWithStyles) {
                    selectedFacility = facility;
                    break;
                }
            }
            if(typeof goodsStockWithStyles[selectedFacility] !== 'undefined'){
                var goodsStock = goodsStockWithStyles[selectedFacility];
                var styleList = this.getStyleList($('#goods_form'), this.getStylesCheckDelivery());
                var obj={};
                for (var key in styleList) {
                    obj[key.toLowerCase()] = styleList[key];
                }
                styleList = obj;
                for (var i in goodsStock) {
                    var stock = goodsStock[i].styles;
                    stock = JSON.parse(stock);
                    if(this.isObjEqual(styleList, stock)) {
                        return goodsStock[i].stock;
                    }
                }
            }
        }
        return 0;
    },
    "get24hrsStock": function () {
        if(typeof pageData.goodsStyleDelivery !== 'undefined') {
            var goodsStyleDelivery = pageData.goodsStyleDelivery;
            var styleList = this.getStyleList($('#goods_form'), this.getStylesCheckDelivery());
            for(var i in goodsStyleDelivery) {
                var config = goodsStyleDelivery[i];
                var skutonum = config['skutonum'] && typeof config['skutonum'] === "object" ? config['skutonum'] : {};
                skutonumLoop:
                    for (var sku in skutonum) {
                        if (skutonum[sku]['Num'] > 0) {
                            for (var name in styleList) {
                                if (typeof skutonum[sku][name] == 'undefined') {
                                    continue skutonumLoop;
                                }
                                if (skutonum[sku][name] != styleList[name]) {
                                    continue skutonumLoop;
                                }
                            }
                            return skutonum[sku]['Num'];
                        }
                    }
            }
        }
        return 0;
    }
}
},{"./style_delivery":10}],5:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {

    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
    require('../mod/fullScreenCarousel');
    var UserAgent = require('../mod/userAgent');
    var userAgent = new UserAgent();

    var full_screen_thumb_list = $('.full-screen-thumb-box');
    var full_screen_magnify_pic = full_screen_thumb_list.find('#magnify_thumb');
    var origin_thumb_list = $('#thumblist');
    const SHOP_BY_COLOR_PIC_NUM = 4

    var setMagnify = function (src) {
        full_screen_magnify_pic.attr('src', src);
        full_screen_magnify_pic.load(function(){
            $(this).siblings('.imagePreload').hide().css('visibility', 'hidden');
        });
        full_screen_thumb_list.find('.full-screen-zoomThumb').removeClass('full-screen-zoomThumbActive');
    };

    var close_all = function () {
        full_screen_thumb_list.hide();
        var layer = $('#dialogOverlay');
        layer.children('div').stop().fadeTo("fast", 0.1, function () {
            layer.hide();
            layer.unbind();
        });
    };

    var full_screen_change_color = function (color, kcolor) {
        var urls = [];
        if (pageData.thumbPictureData && pageData.thumbPictureData.trim().length > 0) {
            var thumbPictureData = eval("(" + pageData.thumbPictureData + ")");
            var shopByColorImages = thumbPictureData.shopByColorImages;
            var thumbConfig = thumbPictureData.thumbConfig;
            var rearImages = thumbPictureData.rearImages;
            for (var key in shopByColorImages) {
                if (key == kcolor) {
                    urls = shopByColorImages[key];
                }
            }

            //该颜色有多色图就显示背面图
            if(urls.length >= 1){
                for (var keyColor in rearImages) {
                    if (keyColor == kcolor && keyColor != "") {
                        urls.push(rearImages[keyColor])
                    }
                }
            }
        }

        var fullScreenThumblistLi = full_screen_thumb_list.find('#full_screen_thumblist').find('li');
        if (urls.length != 0) {
            var newItems = '';
            for (var i = 0; i < urls.length; i++) {
                var url = urls[i];
                var large_src = webData.PIC_PATH + webData.domain.toLowerCase() + '/' + thumbConfig.p + '/' + url;
                var thumb_src = webData.PIC_PATH + thumbConfig.h + '/' + url;
                var imgAlt = typeof $("#magnify_pic").attr("alt") == "undefined" ? "" : $("#magnify_pic").attr("alt");
                newItems += '<li color="' + color + '" kcolor="' + kcolor + '" style="display:none;">'
                    + '<a href="javascript:void(0);">'
                    + '<img src="' + thumb_src + '"data-pimage="' + large_src + '"data-image="' + thumb_src + '" alt="' + imgAlt + '">'
                    + '</a>'
                    + '</li>';
            }

            //如果 shopbycolor 图片超过两张, 只展示多色图不展示photo图(包含背面图)
            if (urls.length >= SHOP_BY_COLOR_PIC_NUM){
                fullScreenThumblistLi.each(function() {
                    $(this).hide();
                });
            } else {
                fullScreenThumblistLi.each(function() {
                    $(this).show();
                });
            }

            var oldItems = full_screen_thumb_list.find('#full_screen_thumblist').html();
            full_screen_thumb_list.find('#full_screen_thumblist').html(newItems + oldItems);
            newItems = full_screen_thumb_list.find('#full_screen_thumblist').find('li[color]');
            newItems.each(function(index) {
                var thumbImg = $(this).find('img');
                var image = new Image();
                image.src = thumbImg.attr('data-pimage');
                if (!image.complete) {
                    full_screen_magnify_pic.siblings('.imagePreload').show().css("visibility", 'visible');
                }
                thumbImg.load(function(){
                    $(this).closest('li').show();
                    $(this).closest('a').addClass('full-screen-zoomThumb');
                    if (index == 0) {
                        thumbImg.click();
                    }
                    full_screen_thumb_list.find('.full-screen-carousel:eq(0)').fullScreenCarousel({'init_left_right' : true});
                });
            });
        } else {
            var firstImg = full_screen_thumb_list.find('#full_screen_thumblist').find('.full-screen-zoomThumb:eq(0)').find('img');
            var image = new Image();
            image.src = firstImg.attr('data-pimage');
            if (!image.complete) {
                full_screen_magnify_pic.siblings('.imagePreload').show().css("visibility", 'visible');
            }

            fullScreenThumblistLi.each(function() {
                $(this).show();
            });

            setMagnify(image.src);
            firstImg.parent().addClass('full-screen-zoomThumbActive');
        }
    };

    var init_color_select = function () {
        var color_box = full_screen_thumb_list.find('#thumb_color_box');
        // ipad need click 2 times if has hover
        if (!userAgent.isIpad()) {
            color_box.delegate('.pis-color-a dt', 'mouseover', function () {
                $(this).addClass('over').next('dd').show();
            });
            color_box.delegate('.pis-color-a dt', 'mouseout', function () {
                $(this).removeClass('over').next('dd').hide();
            });
        }
        color_box.delegate('.pis-color-a', 'click', function () {
            if ($(this).find('dt').hasClass('selected')) {
                return false;
            }
            var color = $(this).find('dl').attr('data-value');
            var kcolor = $(this).find('dl').attr('data-kvalue');

            $(this).parent().find('dt.selected').removeClass('selected');
            $(this).find('dt').addClass('selected');

            $('#full_screen_thumblist li[color]').remove();

            full_screen_change_color(color, kcolor);
        });

        $('.pis-color-box .pis-color .colorAlt').bind('click', function () {
            return false;
        });
    };

    exports.init = function () {
        $(function () {
            var origin_thumb_list = $('#thumblist');
            var isShow = origin_thumb_list.is(':visible');
            if (!isShow) {
                origin_thumb_list = $('.narrow-thumblist');
            }
            var fullScreenBtn = $('.view-full-screen-btn');

            var isFirstClick = true;
            fullScreenBtn.click(function () {
                pageData.full_screen_btn_clicked = true;

                var layer = $('#dialogOverlay');
                if (!(layer.size() > 0)) {
                    layer = $('<div id="dialogOverlay"><div style="background:rgb(0,0,0);"></div></div>').prependTo('body');
                }
                layer.show().children('div').stop().fadeTo(0, 0.1).fadeTo("fast", 0.5);
                layer.click(function () {close_all();});

                full_screen_thumb_list.css({"display":"block", "top":($(document).scrollTop() - 190)+"px"});

                if (isFirstClick) {
                    var defaultSrc = full_screen_thumb_list.find('a.full-screen-zoomThumb.full-screen-zoomThumbActive').find('img').attr('data-pimage');
                    full_screen_magnify_pic.attr('src', defaultSrc);

                    full_screen_magnify_pic.load(function() {
                        if (isFirstClick) {
                            var magnify_pic_height = this.height;
                            var magnify_pic_width = this.width;
                            full_screen_magnify_pic.css({"height":magnify_pic_height,"width":magnify_pic_width});
                            // for goods picture`s height not equal 822px
                            if (magnify_pic_height <= 600) {
                                full_screen_thumb_list.css("top", ($(document).scrollTop() - 141)+"px");
                                full_screen_thumb_list.find('#magnify_thumb_box').css("height", "600px");
                                full_screen_thumb_list.find('.full-screen-carousel').css({"height":"450px","margin-top":"75px"});
                                full_screen_magnify_pic.css("margin-top", (600 - magnify_pic_height) / 2 + "px");
                                full_screen_thumb_list.find('.full-screen-imagePreload').css("top", "273px");
                                full_screen_thumb_list.find('.full-screen-left-arraw').css("top", "261px");
                                full_screen_thumb_list.find('.full-screen-right-arraw').css("top", "261px");
                            } else if (magnify_pic_height < 822) {
                                full_screen_thumb_list.find('#magnify_thumb_box').css("height", "822px");
                                full_screen_magnify_pic.css("margin-top", (822 - magnify_pic_height) / 2 + "px");
                            }

                            full_screen_thumb_list.find('.full-screen-carousel:eq(0)').fullScreenCarousel({'init_left_right' : true});

                            isFirstClick = false;
                        }
                    });

                    full_screen_thumb_list.delegate('#full_screen_viewport img', 'click', function () {
                        var image = new Image();
                        image.src = $(this).attr('data-pimage');
                        if (!image.complete) {
                            full_screen_magnify_pic.siblings('.imagePreload').show().css("visibility", 'visible');
                        }

                        setMagnify(image.src);
                        $(this).parent().addClass('full-screen-zoomThumbActive');
                    });

                    if (pageData.thumbPictureData && pageData.thumbPictureData.trim().length > 0) {
                        var thumbPictureData = eval("(" + pageData.thumbPictureData + ")");
                        var shopByColorImages = thumbPictureData.shopByColorImages;
                        if (!$.isEmptyObject(shopByColorImages)) {
                            init_color_select();
                            if (pageData.cat_id && pageData.cat_id == 288) {
                                full_screen_thumb_list.find('#thumb_color_box').hide();
                                full_screen_thumb_list.addClass("no-color-select-box");
                            }
                        } else {
                            full_screen_thumb_list.find('#thumb_color_box').hide();
                            full_screen_thumb_list.addClass("no-color-select-box");
                        }
                    }
                } else {
                    if (full_screen_magnify_pic.height() <= 600) {
                        full_screen_thumb_list.css("top", ($(document).scrollTop() - 141)+"px");
                    }
                }

                // var originThumb = origin_thumb_list.find('a.zoomThumb.zoomThumbActive').find('img').attr('src');
                // var originColor = origin_thumb_list.find('a.zoomThumb.zoomThumbActive').parent().attr('kcolor');

                var originThumb = $(".thumb-active").attr('src');
                var originColor = $(".thumb-active").attr('kcolor');
                var currentThumb =full_screen_thumb_list.find('a.full-screen-zoomThumb.full-screen-zoomThumbActive').find('img').attr('data-image');


                if (currentThumb != originThumb) {
                    var viewport = $('#full_screen_viewport');
                    var thumbList = viewport.find('#full_screen_thumblist');
                    var viewportHeight = viewport.height();
                    var unit = thumbList.find('li').eq(1).height();
                    var viewItemsLen = Math.floor((viewportHeight + 2 + 30) / (unit + 8));
                    var itemsLen = thumbList.find('li').length;

                    thumbList.find('li').find('a').find('img').each( function (index, element) {
                        if ($(element).attr('data-image') == originThumb) {
                            $(element).click();

                            if (itemsLen > viewItemsLen) {
                                if (index == 0) {
                                    thumbList.find('li:lt(' + (index + 1) + ')').appendTo(thumbList);
                                } else if (index == viewItemsLen - 1) {
                                    thumbList.find('li:lt(' + (index - 1) + ')').appendTo(thumbList);
                                } else {
                                    thumbList.find('li:lt(' + index + ')').appendTo(thumbList);
                                }
                            }
                        }
                    });
                }
                if (originColor !== undefined) {
                    full_screen_thumb_list.find('#thumb_color_box').find('.pis-color-a').each( function () {
                        if ($(this).find('dl').attr('data-kvalue') == originColor) {
                            $(this).click();
                        }
                    });
                }
            });

            $('.full-screen-close-btn').click(function () {
                var pis_colors = full_screen_thumb_list.find('#thumb_color_box').find('.pis-color-a').find('.pis-color');
                if (pis_colors.find('dt.selected').length > 0) {
                    pis_colors.find('dt.selected').removeClass('selected');
                }
                close_all();
            });
        });
    };

//});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvZ29vZHMvbWFnbmlmeV9waWN0dXJlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vZGVmaW5lKGZ1bmN0aW9uIChyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHtcclxuXHJcbiAgICB2YXIgJCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WyckJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWyckJ10gOiBudWxsKTtcclxuICAgIHJlcXVpcmUoJy4uL21vZC9mdWxsU2NyZWVuQ2Fyb3VzZWwnKTtcclxuICAgIHZhciBVc2VyQWdlbnQgPSByZXF1aXJlKCcuLi9tb2QvdXNlckFnZW50Jyk7XHJcbiAgICB2YXIgdXNlckFnZW50ID0gbmV3IFVzZXJBZ2VudCgpO1xyXG5cclxuICAgIHZhciBmdWxsX3NjcmVlbl90aHVtYl9saXN0ID0gJCgnLmZ1bGwtc2NyZWVuLXRodW1iLWJveCcpO1xyXG4gICAgdmFyIGZ1bGxfc2NyZWVuX21hZ25pZnlfcGljID0gZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCcjbWFnbmlmeV90aHVtYicpO1xyXG4gICAgdmFyIG9yaWdpbl90aHVtYl9saXN0ID0gJCgnI3RodW1ibGlzdCcpO1xyXG4gICAgY29uc3QgU0hPUF9CWV9DT0xPUl9QSUNfTlVNID0gNFxyXG5cclxuICAgIHZhciBzZXRNYWduaWZ5ID0gZnVuY3Rpb24gKHNyYykge1xyXG4gICAgICAgIGZ1bGxfc2NyZWVuX21hZ25pZnlfcGljLmF0dHIoJ3NyYycsIHNyYyk7XHJcbiAgICAgICAgZnVsbF9zY3JlZW5fbWFnbmlmeV9waWMubG9hZChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAkKHRoaXMpLnNpYmxpbmdzKCcuaW1hZ2VQcmVsb2FkJykuaGlkZSgpLmNzcygndmlzaWJpbGl0eScsICdoaWRkZW4nKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBmdWxsX3NjcmVlbl90aHVtYl9saXN0LmZpbmQoJy5mdWxsLXNjcmVlbi16b29tVGh1bWInKS5yZW1vdmVDbGFzcygnZnVsbC1zY3JlZW4tem9vbVRodW1iQWN0aXZlJyk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBjbG9zZV9hbGwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5oaWRlKCk7XHJcbiAgICAgICAgdmFyIGxheWVyID0gJCgnI2RpYWxvZ092ZXJsYXknKTtcclxuICAgICAgICBsYXllci5jaGlsZHJlbignZGl2Jykuc3RvcCgpLmZhZGVUbyhcImZhc3RcIiwgMC4xLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxheWVyLmhpZGUoKTtcclxuICAgICAgICAgICAgbGF5ZXIudW5iaW5kKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBmdWxsX3NjcmVlbl9jaGFuZ2VfY29sb3IgPSBmdW5jdGlvbiAoY29sb3IsIGtjb2xvcikge1xyXG4gICAgICAgIHZhciB1cmxzID0gW107XHJcbiAgICAgICAgaWYgKHBhZ2VEYXRhLnRodW1iUGljdHVyZURhdGEgJiYgcGFnZURhdGEudGh1bWJQaWN0dXJlRGF0YS50cmltKCkubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICB2YXIgdGh1bWJQaWN0dXJlRGF0YSA9IGV2YWwoXCIoXCIgKyBwYWdlRGF0YS50aHVtYlBpY3R1cmVEYXRhICsgXCIpXCIpO1xyXG4gICAgICAgICAgICB2YXIgc2hvcEJ5Q29sb3JJbWFnZXMgPSB0aHVtYlBpY3R1cmVEYXRhLnNob3BCeUNvbG9ySW1hZ2VzO1xyXG4gICAgICAgICAgICB2YXIgdGh1bWJDb25maWcgPSB0aHVtYlBpY3R1cmVEYXRhLnRodW1iQ29uZmlnO1xyXG4gICAgICAgICAgICB2YXIgcmVhckltYWdlcyA9IHRodW1iUGljdHVyZURhdGEucmVhckltYWdlcztcclxuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHNob3BCeUNvbG9ySW1hZ2VzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoa2V5ID09IGtjb2xvcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHVybHMgPSBzaG9wQnlDb2xvckltYWdlc1trZXldO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL+ivpeminOiJsuacieWkmuiJsuWbvuWwseaYvuekuuiDjOmdouWbvlxyXG4gICAgICAgICAgICBpZih1cmxzLmxlbmd0aCA+PSAxKXtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGtleUNvbG9yIGluIHJlYXJJbWFnZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoa2V5Q29sb3IgPT0ga2NvbG9yICYmIGtleUNvbG9yICE9IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXJscy5wdXNoKHJlYXJJbWFnZXNba2V5Q29sb3JdKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGZ1bGxTY3JlZW5UaHVtYmxpc3RMaSA9IGZ1bGxfc2NyZWVuX3RodW1iX2xpc3QuZmluZCgnI2Z1bGxfc2NyZWVuX3RodW1ibGlzdCcpLmZpbmQoJ2xpJyk7XHJcbiAgICAgICAgaWYgKHVybHMubGVuZ3RoICE9IDApIHtcclxuICAgICAgICAgICAgdmFyIG5ld0l0ZW1zID0gJyc7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdXJscy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIHVybCA9IHVybHNbaV07XHJcbiAgICAgICAgICAgICAgICB2YXIgbGFyZ2Vfc3JjID0gd2ViRGF0YS5QSUNfUEFUSCArIHdlYkRhdGEuZG9tYWluLnRvTG93ZXJDYXNlKCkgKyAnLycgKyB0aHVtYkNvbmZpZy5wICsgJy8nICsgdXJsO1xyXG4gICAgICAgICAgICAgICAgdmFyIHRodW1iX3NyYyA9IHdlYkRhdGEuUElDX1BBVEggKyB0aHVtYkNvbmZpZy5oICsgJy8nICsgdXJsO1xyXG4gICAgICAgICAgICAgICAgdmFyIGltZ0FsdCA9IHR5cGVvZiAkKFwiI21hZ25pZnlfcGljXCIpLmF0dHIoXCJhbHRcIikgPT0gXCJ1bmRlZmluZWRcIiA/IFwiXCIgOiAkKFwiI21hZ25pZnlfcGljXCIpLmF0dHIoXCJhbHRcIik7XHJcbiAgICAgICAgICAgICAgICBuZXdJdGVtcyArPSAnPGxpIGNvbG9yPVwiJyArIGNvbG9yICsgJ1wiIGtjb2xvcj1cIicgKyBrY29sb3IgKyAnXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+J1xyXG4gICAgICAgICAgICAgICAgICAgICsgJzxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCI+J1xyXG4gICAgICAgICAgICAgICAgICAgICsgJzxpbWcgc3JjPVwiJyArIHRodW1iX3NyYyArICdcImRhdGEtcGltYWdlPVwiJyArIGxhcmdlX3NyYyArICdcImRhdGEtaW1hZ2U9XCInICsgdGh1bWJfc3JjICsgJ1wiIGFsdD1cIicgKyBpbWdBbHQgKyAnXCI+J1xyXG4gICAgICAgICAgICAgICAgICAgICsgJzwvYT4nXHJcbiAgICAgICAgICAgICAgICAgICAgKyAnPC9saT4nO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL+WmguaenCBzaG9wYnljb2xvciDlm77niYfotoXov4fkuKTlvKAsIOWPquWxleekuuWkmuiJsuWbvuS4jeWxleekunBob3Rv5Zu+KOWMheWQq+iDjOmdouWbvilcclxuICAgICAgICAgICAgaWYgKHVybHMubGVuZ3RoID49IFNIT1BfQllfQ09MT1JfUElDX05VTSl7XHJcbiAgICAgICAgICAgICAgICBmdWxsU2NyZWVuVGh1bWJsaXN0TGkuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZnVsbFNjcmVlblRodW1ibGlzdExpLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdmFyIG9sZEl0ZW1zID0gZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCcjZnVsbF9zY3JlZW5fdGh1bWJsaXN0JykuaHRtbCgpO1xyXG4gICAgICAgICAgICBmdWxsX3NjcmVlbl90aHVtYl9saXN0LmZpbmQoJyNmdWxsX3NjcmVlbl90aHVtYmxpc3QnKS5odG1sKG5ld0l0ZW1zICsgb2xkSXRlbXMpO1xyXG4gICAgICAgICAgICBuZXdJdGVtcyA9IGZ1bGxfc2NyZWVuX3RodW1iX2xpc3QuZmluZCgnI2Z1bGxfc2NyZWVuX3RodW1ibGlzdCcpLmZpbmQoJ2xpW2NvbG9yXScpO1xyXG4gICAgICAgICAgICBuZXdJdGVtcy5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdGh1bWJJbWcgPSAkKHRoaXMpLmZpbmQoJ2ltZycpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgICAgICAgICBpbWFnZS5zcmMgPSB0aHVtYkltZy5hdHRyKCdkYXRhLXBpbWFnZScpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCFpbWFnZS5jb21wbGV0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZ1bGxfc2NyZWVuX21hZ25pZnlfcGljLnNpYmxpbmdzKCcuaW1hZ2VQcmVsb2FkJykuc2hvdygpLmNzcyhcInZpc2liaWxpdHlcIiwgJ3Zpc2libGUnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRodW1iSW1nLmxvYWQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoJ2xpJykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuY2xvc2VzdCgnYScpLmFkZENsYXNzKCdmdWxsLXNjcmVlbi16b29tVGh1bWInKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHVtYkltZy5jbGljaygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBmdWxsX3NjcmVlbl90aHVtYl9saXN0LmZpbmQoJy5mdWxsLXNjcmVlbi1jYXJvdXNlbDplcSgwKScpLmZ1bGxTY3JlZW5DYXJvdXNlbCh7J2luaXRfbGVmdF9yaWdodCcgOiB0cnVlfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdmFyIGZpcnN0SW1nID0gZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCcjZnVsbF9zY3JlZW5fdGh1bWJsaXN0JykuZmluZCgnLmZ1bGwtc2NyZWVuLXpvb21UaHVtYjplcSgwKScpLmZpbmQoJ2ltZycpO1xyXG4gICAgICAgICAgICB2YXIgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICAgICAgaW1hZ2Uuc3JjID0gZmlyc3RJbWcuYXR0cignZGF0YS1waW1hZ2UnKTtcclxuICAgICAgICAgICAgaWYgKCFpbWFnZS5jb21wbGV0ZSkge1xyXG4gICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fbWFnbmlmeV9waWMuc2libGluZ3MoJy5pbWFnZVByZWxvYWQnKS5zaG93KCkuY3NzKFwidmlzaWJpbGl0eVwiLCAndmlzaWJsZScpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBmdWxsU2NyZWVuVGh1bWJsaXN0TGkuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykuc2hvdygpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHNldE1hZ25pZnkoaW1hZ2Uuc3JjKTtcclxuICAgICAgICAgICAgZmlyc3RJbWcucGFyZW50KCkuYWRkQ2xhc3MoJ2Z1bGwtc2NyZWVuLXpvb21UaHVtYkFjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgdmFyIGluaXRfY29sb3Jfc2VsZWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjb2xvcl9ib3ggPSBmdWxsX3NjcmVlbl90aHVtYl9saXN0LmZpbmQoJyN0aHVtYl9jb2xvcl9ib3gnKTtcclxuICAgICAgICAvLyBpcGFkIG5lZWQgY2xpY2sgMiB0aW1lcyBpZiBoYXMgaG92ZXJcclxuICAgICAgICBpZiAoIXVzZXJBZ2VudC5pc0lwYWQoKSkge1xyXG4gICAgICAgICAgICBjb2xvcl9ib3guZGVsZWdhdGUoJy5waXMtY29sb3ItYSBkdCcsICdtb3VzZW92ZXInLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdvdmVyJykubmV4dCgnZGQnKS5zaG93KCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBjb2xvcl9ib3guZGVsZWdhdGUoJy5waXMtY29sb3ItYSBkdCcsICdtb3VzZW91dCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ292ZXInKS5uZXh0KCdkZCcpLmhpZGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbG9yX2JveC5kZWxlZ2F0ZSgnLnBpcy1jb2xvci1hJywgJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5maW5kKCdkdCcpLmhhc0NsYXNzKCdzZWxlY3RlZCcpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGNvbG9yID0gJCh0aGlzKS5maW5kKCdkbCcpLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuICAgICAgICAgICAgdmFyIGtjb2xvciA9ICQodGhpcykuZmluZCgnZGwnKS5hdHRyKCdkYXRhLWt2YWx1ZScpO1xyXG5cclxuICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5maW5kKCdkdC5zZWxlY3RlZCcpLnJlbW92ZUNsYXNzKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLmZpbmQoJ2R0JykuYWRkQ2xhc3MoJ3NlbGVjdGVkJyk7XHJcblxyXG4gICAgICAgICAgICAkKCcjZnVsbF9zY3JlZW5fdGh1bWJsaXN0IGxpW2NvbG9yXScpLnJlbW92ZSgpO1xyXG5cclxuICAgICAgICAgICAgZnVsbF9zY3JlZW5fY2hhbmdlX2NvbG9yKGNvbG9yLCBrY29sb3IpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcucGlzLWNvbG9yLWJveCAucGlzLWNvbG9yIC5jb2xvckFsdCcpLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIGV4cG9ydHMuaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIG9yaWdpbl90aHVtYl9saXN0ID0gJCgnI3RodW1ibGlzdCcpO1xyXG4gICAgICAgICAgICB2YXIgaXNTaG93ID0gb3JpZ2luX3RodW1iX2xpc3QuaXMoJzp2aXNpYmxlJyk7XHJcbiAgICAgICAgICAgIGlmICghaXNTaG93KSB7XHJcbiAgICAgICAgICAgICAgICBvcmlnaW5fdGh1bWJfbGlzdCA9ICQoJy5uYXJyb3ctdGh1bWJsaXN0Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGZ1bGxTY3JlZW5CdG4gPSAkKCcudmlldy1mdWxsLXNjcmVlbi1idG4nKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBpc0ZpcnN0Q2xpY2sgPSB0cnVlO1xyXG4gICAgICAgICAgICBmdWxsU2NyZWVuQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHBhZ2VEYXRhLmZ1bGxfc2NyZWVuX2J0bl9jbGlja2VkID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgbGF5ZXIgPSAkKCcjZGlhbG9nT3ZlcmxheScpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCEobGF5ZXIuc2l6ZSgpID4gMCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBsYXllciA9ICQoJzxkaXYgaWQ9XCJkaWFsb2dPdmVybGF5XCI+PGRpdiBzdHlsZT1cImJhY2tncm91bmQ6cmdiKDAsMCwwKTtcIj48L2Rpdj48L2Rpdj4nKS5wcmVwZW5kVG8oJ2JvZHknKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGxheWVyLnNob3coKS5jaGlsZHJlbignZGl2Jykuc3RvcCgpLmZhZGVUbygwLCAwLjEpLmZhZGVUbyhcImZhc3RcIiwgMC41KTtcclxuICAgICAgICAgICAgICAgIGxheWVyLmNsaWNrKGZ1bmN0aW9uICgpIHtjbG9zZV9hbGwoKTt9KTtcclxuXHJcbiAgICAgICAgICAgICAgICBmdWxsX3NjcmVlbl90aHVtYl9saXN0LmNzcyh7XCJkaXNwbGF5XCI6XCJibG9ja1wiLCBcInRvcFwiOigkKGRvY3VtZW50KS5zY3JvbGxUb3AoKSAtIDE5MCkrXCJweFwifSk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGlzRmlyc3RDbGljaykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWZhdWx0U3JjID0gZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCdhLmZ1bGwtc2NyZWVuLXpvb21UaHVtYi5mdWxsLXNjcmVlbi16b29tVGh1bWJBY3RpdmUnKS5maW5kKCdpbWcnKS5hdHRyKCdkYXRhLXBpbWFnZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZ1bGxfc2NyZWVuX21hZ25pZnlfcGljLmF0dHIoJ3NyYycsIGRlZmF1bHRTcmMpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBmdWxsX3NjcmVlbl9tYWduaWZ5X3BpYy5sb2FkKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNGaXJzdENsaWNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWFnbmlmeV9waWNfaGVpZ2h0ID0gdGhpcy5oZWlnaHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWFnbmlmeV9waWNfd2lkdGggPSB0aGlzLndpZHRoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fbWFnbmlmeV9waWMuY3NzKHtcImhlaWdodFwiOm1hZ25pZnlfcGljX2hlaWdodCxcIndpZHRoXCI6bWFnbmlmeV9waWNfd2lkdGh9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGZvciBnb29kcyBwaWN0dXJlYHMgaGVpZ2h0IG5vdCBlcXVhbCA4MjJweFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1hZ25pZnlfcGljX2hlaWdodCA8PSA2MDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdWxsX3NjcmVlbl90aHVtYl9saXN0LmNzcyhcInRvcFwiLCAoJChkb2N1bWVudCkuc2Nyb2xsVG9wKCkgLSAxNDEpK1wicHhcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCcjbWFnbmlmeV90aHVtYl9ib3gnKS5jc3MoXCJoZWlnaHRcIiwgXCI2MDBweFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdWxsX3NjcmVlbl90aHVtYl9saXN0LmZpbmQoJy5mdWxsLXNjcmVlbi1jYXJvdXNlbCcpLmNzcyh7XCJoZWlnaHRcIjpcIjQ1MHB4XCIsXCJtYXJnaW4tdG9wXCI6XCI3NXB4XCJ9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdWxsX3NjcmVlbl9tYWduaWZ5X3BpYy5jc3MoXCJtYXJnaW4tdG9wXCIsICg2MDAgLSBtYWduaWZ5X3BpY19oZWlnaHQpIC8gMiArIFwicHhcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCcuZnVsbC1zY3JlZW4taW1hZ2VQcmVsb2FkJykuY3NzKFwidG9wXCIsIFwiMjczcHhcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCcuZnVsbC1zY3JlZW4tbGVmdC1hcnJhdycpLmNzcyhcInRvcFwiLCBcIjI2MXB4XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxfc2NyZWVuX3RodW1iX2xpc3QuZmluZCgnLmZ1bGwtc2NyZWVuLXJpZ2h0LWFycmF3JykuY3NzKFwidG9wXCIsIFwiMjYxcHhcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG1hZ25pZnlfcGljX2hlaWdodCA8IDgyMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxfc2NyZWVuX3RodW1iX2xpc3QuZmluZCgnI21hZ25pZnlfdGh1bWJfYm94JykuY3NzKFwiaGVpZ2h0XCIsIFwiODIycHhcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fbWFnbmlmeV9waWMuY3NzKFwibWFyZ2luLXRvcFwiLCAoODIyIC0gbWFnbmlmeV9waWNfaGVpZ2h0KSAvIDIgKyBcInB4XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxfc2NyZWVuX3RodW1iX2xpc3QuZmluZCgnLmZ1bGwtc2NyZWVuLWNhcm91c2VsOmVxKDApJykuZnVsbFNjcmVlbkNhcm91c2VsKHsnaW5pdF9sZWZ0X3JpZ2h0JyA6IHRydWV9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0ZpcnN0Q2xpY2sgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBmdWxsX3NjcmVlbl90aHVtYl9saXN0LmRlbGVnYXRlKCcjZnVsbF9zY3JlZW5fdmlld3BvcnQgaW1nJywgJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2Uuc3JjID0gJCh0aGlzKS5hdHRyKCdkYXRhLXBpbWFnZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWltYWdlLmNvbXBsZXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdWxsX3NjcmVlbl9tYWduaWZ5X3BpYy5zaWJsaW5ncygnLmltYWdlUHJlbG9hZCcpLnNob3coKS5jc3MoXCJ2aXNpYmlsaXR5XCIsICd2aXNpYmxlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldE1hZ25pZnkoaW1hZ2Uuc3JjKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5hZGRDbGFzcygnZnVsbC1zY3JlZW4tem9vbVRodW1iQWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwYWdlRGF0YS50aHVtYlBpY3R1cmVEYXRhICYmIHBhZ2VEYXRhLnRodW1iUGljdHVyZURhdGEudHJpbSgpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRodW1iUGljdHVyZURhdGEgPSBldmFsKFwiKFwiICsgcGFnZURhdGEudGh1bWJQaWN0dXJlRGF0YSArIFwiKVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNob3BCeUNvbG9ySW1hZ2VzID0gdGh1bWJQaWN0dXJlRGF0YS5zaG9wQnlDb2xvckltYWdlcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkLmlzRW1wdHlPYmplY3Qoc2hvcEJ5Q29sb3JJbWFnZXMpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0X2NvbG9yX3NlbGVjdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhZ2VEYXRhLmNhdF9pZCAmJiBwYWdlRGF0YS5jYXRfaWQgPT0gMjg4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCcjdGh1bWJfY29sb3JfYm94JykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxfc2NyZWVuX3RodW1iX2xpc3QuYWRkQ2xhc3MoXCJuby1jb2xvci1zZWxlY3QtYm94XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCcjdGh1bWJfY29sb3JfYm94JykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5hZGRDbGFzcyhcIm5vLWNvbG9yLXNlbGVjdC1ib3hcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChmdWxsX3NjcmVlbl9tYWduaWZ5X3BpYy5oZWlnaHQoKSA8PSA2MDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5jc3MoXCJ0b3BcIiwgKCQoZG9jdW1lbnQpLnNjcm9sbFRvcCgpIC0gMTQxKStcInB4XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAvLyB2YXIgb3JpZ2luVGh1bWIgPSBvcmlnaW5fdGh1bWJfbGlzdC5maW5kKCdhLnpvb21UaHVtYi56b29tVGh1bWJBY3RpdmUnKS5maW5kKCdpbWcnKS5hdHRyKCdzcmMnKTtcclxuICAgICAgICAgICAgICAgIC8vIHZhciBvcmlnaW5Db2xvciA9IG9yaWdpbl90aHVtYl9saXN0LmZpbmQoJ2Euem9vbVRodW1iLnpvb21UaHVtYkFjdGl2ZScpLnBhcmVudCgpLmF0dHIoJ2tjb2xvcicpO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBvcmlnaW5UaHVtYiA9ICQoXCIudGh1bWItYWN0aXZlXCIpLmF0dHIoJ3NyYycpO1xyXG4gICAgICAgICAgICAgICAgdmFyIG9yaWdpbkNvbG9yID0gJChcIi50aHVtYi1hY3RpdmVcIikuYXR0cigna2NvbG9yJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFRodW1iID1mdWxsX3NjcmVlbl90aHVtYl9saXN0LmZpbmQoJ2EuZnVsbC1zY3JlZW4tem9vbVRodW1iLmZ1bGwtc2NyZWVuLXpvb21UaHVtYkFjdGl2ZScpLmZpbmQoJ2ltZycpLmF0dHIoJ2RhdGEtaW1hZ2UnKTtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRUaHVtYiAhPSBvcmlnaW5UaHVtYikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB2aWV3cG9ydCA9ICQoJyNmdWxsX3NjcmVlbl92aWV3cG9ydCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0aHVtYkxpc3QgPSB2aWV3cG9ydC5maW5kKCcjZnVsbF9zY3JlZW5fdGh1bWJsaXN0Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZpZXdwb3J0SGVpZ2h0ID0gdmlld3BvcnQuaGVpZ2h0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHVuaXQgPSB0aHVtYkxpc3QuZmluZCgnbGknKS5lcSgxKS5oZWlnaHQoKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdmlld0l0ZW1zTGVuID0gTWF0aC5mbG9vcigodmlld3BvcnRIZWlnaHQgKyAyICsgMzApIC8gKHVuaXQgKyA4KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW1zTGVuID0gdGh1bWJMaXN0LmZpbmQoJ2xpJykubGVuZ3RoO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aHVtYkxpc3QuZmluZCgnbGknKS5maW5kKCdhJykuZmluZCgnaW1nJykuZWFjaCggZnVuY3Rpb24gKGluZGV4LCBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKGVsZW1lbnQpLmF0dHIoJ2RhdGEtaW1hZ2UnKSA9PSBvcmlnaW5UaHVtYikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5jbGljaygpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtc0xlbiA+IHZpZXdJdGVtc0xlbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRodW1iTGlzdC5maW5kKCdsaTpsdCgnICsgKGluZGV4ICsgMSkgKyAnKScpLmFwcGVuZFRvKHRodW1iTGlzdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpbmRleCA9PSB2aWV3SXRlbXNMZW4gLSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRodW1iTGlzdC5maW5kKCdsaTpsdCgnICsgKGluZGV4IC0gMSkgKyAnKScpLmFwcGVuZFRvKHRodW1iTGlzdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGh1bWJMaXN0LmZpbmQoJ2xpOmx0KCcgKyBpbmRleCArICcpJykuYXBwZW5kVG8odGh1bWJMaXN0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChvcmlnaW5Db2xvciAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZnVsbF9zY3JlZW5fdGh1bWJfbGlzdC5maW5kKCcjdGh1bWJfY29sb3JfYm94JykuZmluZCgnLnBpcy1jb2xvci1hJykuZWFjaCggZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5maW5kKCdkbCcpLmF0dHIoJ2RhdGEta3ZhbHVlJykgPT0gb3JpZ2luQ29sb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuY2xpY2soKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICQoJy5mdWxsLXNjcmVlbi1jbG9zZS1idG4nKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGlzX2NvbG9ycyA9IGZ1bGxfc2NyZWVuX3RodW1iX2xpc3QuZmluZCgnI3RodW1iX2NvbG9yX2JveCcpLmZpbmQoJy5waXMtY29sb3ItYScpLmZpbmQoJy5waXMtY29sb3InKTtcclxuICAgICAgICAgICAgICAgIGlmIChwaXNfY29sb3JzLmZpbmQoJ2R0LnNlbGVjdGVkJykubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBpc19jb2xvcnMuZmluZCgnZHQuc2VsZWN0ZWQnKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNsb3NlX2FsbCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4vL30pO1xyXG4iXX0=
},{"../mod/fullScreenCarousel":24,"../mod/userAgent":29}],6:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null)
require('../mod/texttip')
var promptTexts = $('.prompt_text_tips')
var previewDom

var colorConfig = {
    'gold': '#eac855',
    'silver': '#848484',
    'rose_gold': '#c8977b',
}

const specialTail = {'a':'1','b':'2','c':'3','d':'4','e':'5','f':'6','g':'7','h':'8','i':'9','j':'0','k':'!','l':'@','m':'#','n':'$','o':'%','p':'^','q':'&','r':'*','s':'(','t':')','u':'-','v':'+','w':'[','x':']','y':'?','z':';'}

function init() {
    if (typeof pageData == 'undefined' || promptTexts.length == 0) {
        return
    }

    var previewFont = pageData.previewFontFamily || ''
    if (!addPreviewText(previewFont)) {
        return
    }

    previewDom = $('#prompt_text_preview_text')

    promptTexts.on('keyup change', function() {
        var promptText = ''
        promptTexts.each(function () {
            var showtextval = $(this).val()

            if (['AIV30-WING', 'AIV32-WING'].indexOf(previewFont) > -1) {
                showtextval = '(' + showtextval + ')'
            } else if (['AlexBrush-TAIL', 'CommercialScriptBT-TAIL'].indexOf(previewFont) > -1) {
                showtextval = showtextval.replace(/[0-9!@#$%^&*()\-+[\]?;]/g, " ")
                
                if (showtextval.length > 1) {
                    var lastChar = showtextval.charAt(showtextval.length - 1)
                    lastChar = specialTail[lastChar] ? specialTail[lastChar] : lastChar
                    showtextval = showtextval.substr(0, showtextval.length - 1) + lastChar
                }
            } 
            
            promptText += showtextval + '&nbsp;&nbsp;'
        })
        $(previewDom).html(promptText)
        $(previewDom).scrollLeft($(previewDom).width())
    })
}

function init_handler() {    
    var html = pageData.langs.page_common_free_bag_for_necklace || ''

    $('.free-gift-tips-icon').texttip({
        html: html,
        left: 3,
        top: 4,
    })

    if (typeof previewDom != 'undefined' && $(previewDom).length > 0 ) {
        $('.pis-color-a .pis-necklaces-color').on('click', function () {
            var kvalue = $(this).attr('data-kvalue')
            if (colorConfig[kvalue]) {
                previewDom.css('color', colorConfig[kvalue])
            } else {
                var classColor = $(this).find('.pis-necklaces-color-dt').find('span').css('background-color');
                if (classColor) {
                    previewDom.css('color',classColor)
                }
            }
        })
    }
}

function addPreviewText(previewFont) {
    if (typeof pageData == 'undefined' || pageData.previewFontFamily.length == 0 || promptTexts.length == 0) {
        return false
    }

    var firstPromptText = promptTexts.first()
    var previewCssObj = {}
    var previewCss = ''
    var preview = 'Preview:'
    if (typeof pageData.langs != 'undefined') {
        preview = pageData.langs.page_common_preview || preview
    }

    previewCssObj = {
        'font-family': previewFont,
    }
    
    for (var name in previewCssObj) {
        if (name && previewCssObj[name]) {
            previewCss += name + ': ' + previewCssObj[name] + '; '
        }
    }

    var previewDom = '<li>'
    previewDom += '<div class="prompt_text_preview fontfamily-' + previewFont + '">'
    previewDom += '<span class="prompt_text_preview_name">' + preview + '</span>'
    previewDom += '<span class="prompt_text_preview_text" id="prompt_text_preview_text" style="' + previewCss + '"></span>'
    previewDom += '</div>'
    previewDom += '</li>'

    firstPromptText.parent().before(previewDom)

    return true
}

function addMixPreviewText(previewFont, mixPromptTexts) {
    if (typeof pageData == 'undefined' || previewFont == '' || mixPromptTexts.length == 0) {
        return
    }

    var firstPromptText = mixPromptTexts.first()
    var previewCssObj = {}
    var previewCss = ''
    var preview = 'Preview:'
    if (typeof pageData.langs != 'undefined') {
        preview = pageData.langs.page_common_preview || preview
    }

    previewCssObj = {
        'font-family': previewFont,
    }

    for (var name in previewCssObj) {
        if (name && previewCssObj[name]) {
            previewCss += name + ': ' + previewCssObj[name] + '; '
        }
    }

    var previewDom = '<li>'
    previewDom += '<div class="prompt_text_preview fontfamily-' + previewFont + '">'
    previewDom += '<span class="prompt_text_preview_name">' + preview + '</span>'
    previewDom += '<span class="prompt_text_preview_text" id="prompt_text_preview_text" style="' + previewCss + '"></span>'
    previewDom += '</div>'
    previewDom += '</li>'

    firstPromptText.parent().before(previewDom)
}

function init_mix_items(mix_previewFontFamily, dom){
    var mix_promptTexts = dom.find('.prompt_text_tips');
    if (typeof pageData == 'undefined' || mix_promptTexts.length == 0) {
        return
    }

    var previewFont = mix_previewFontFamily || ''
    addMixPreviewText(previewFont, mix_promptTexts)

    var mixPreviewDom = dom.find('#prompt_text_preview_text')

    mix_promptTexts.on('keyup change', function() {
        var promptText = ''
        mix_promptTexts.each(function () {
            var showtextval = $(this).val()

            if (['AIV30-WING', 'AIV32-WING'].indexOf(previewFont) > -1) {
                showtextval = '(' + showtextval + ')'
            } else if (['AlexBrush-TAIL', 'CommercialScriptBT-TAIL'].indexOf(previewFont) > -1) {
                showtextval = showtextval.replace(/[0-9!@#$%^&*()\-+[\]?;]/g, " ")

                if (showtextval.length > 1) {
                    var lastChar = showtextval.charAt(showtextval.length - 1)
                    lastChar = specialTail[lastChar] ? specialTail[lastChar] : lastChar
                    showtextval = showtextval.substr(0, showtextval.length - 1) + lastChar
                }
            }

            promptText += showtextval + '&nbsp;&nbsp;'
        })
        $(mixPreviewDom).html(promptText)
        $(mixPreviewDom).scrollLeft($(mixPreviewDom).width())
    })
}

function init_mix_handler(dom){

    var mixPreviewDom = dom.find('#prompt_text_preview_text')
    if (typeof mixPreviewDom != 'undefined' && $(mixPreviewDom).length > 0 ) {
        var initColor = dom.find('.selected').parents('.mix-pis-necklaces-color').attr('data-kvalue');
        if(colorConfig[initColor]) {
            mixPreviewDom.css('color', colorConfig[initColor]);
        };
        dom.find('.mix-pis-color-a .mix-pis-necklaces-color').on('click', function() {
            var kvalue = $(this).attr('data-kvalue')
            if (colorConfig[kvalue]) {
                mixPreviewDom.css('color', colorConfig[kvalue])
            } else {
                var classColor = $(this).find('.pis-necklaces-color-dt').find('span').css('background-color');
                if (classColor) {
                    mixPreviewDom.css('color',classColor)
                }
            }
        })
    }
}

module.exports = {
    "init": function () {
        init()
        init_handler()
    },
    "init_mix": function (mix_previewFontFamily, dom) {
        init_mix_items(mix_previewFontFamily, dom)
        init_mix_handler(dom)
    }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{"../mod/texttip":28}],7:[function(require,module,exports){
(function (global){
//define(function(require, exports, module) {

    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

    //Price
    var priceStyle = require('../mod/priceStyle');
    $('#id_shop_price').html(priceStyle.formatStyle(pageData.fee.shop_price));

    //off discount
    var Countdown = require('../mod/countdown')
    if($('#off_time').parent().hasClass('offAndDiscount') || $('#off_time').parent().hasClass('offDiscountFavor')) {
        var goods_countdown = new Countdown('#off_time', pageData.off_end_time - pageData.off_now_time, 'days');
    } else {
        var goods_countdown = new Countdown('#off_time', pageData.off_end_time - pageData.off_now_time);
    }
    goods_countdown.run();

//});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvZ29vZHMvcHJpY2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLy9kZWZpbmUoZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7XHJcblxyXG4gICAgdmFyICQgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snJCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnJCddIDogbnVsbCk7XHJcblxyXG4gICAgLy9QcmljZVxyXG4gICAgdmFyIHByaWNlU3R5bGUgPSByZXF1aXJlKCcuLi9tb2QvcHJpY2VTdHlsZScpO1xyXG4gICAgJCgnI2lkX3Nob3BfcHJpY2UnKS5odG1sKHByaWNlU3R5bGUuZm9ybWF0U3R5bGUocGFnZURhdGEuZmVlLnNob3BfcHJpY2UpKTtcclxuXHJcbiAgICAvL29mZiBkaXNjb3VudFxyXG4gICAgdmFyIENvdW50ZG93biA9IHJlcXVpcmUoJy4uL21vZC9jb3VudGRvd24nKVxyXG4gICAgaWYoJCgnI29mZl90aW1lJykucGFyZW50KCkuaGFzQ2xhc3MoJ29mZkFuZERpc2NvdW50JykgfHwgJCgnI29mZl90aW1lJykucGFyZW50KCkuaGFzQ2xhc3MoJ29mZkRpc2NvdW50RmF2b3InKSkge1xyXG4gICAgICAgIHZhciBnb29kc19jb3VudGRvd24gPSBuZXcgQ291bnRkb3duKCcjb2ZmX3RpbWUnLCBwYWdlRGF0YS5vZmZfZW5kX3RpbWUgLSBwYWdlRGF0YS5vZmZfbm93X3RpbWUsICdkYXlzJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHZhciBnb29kc19jb3VudGRvd24gPSBuZXcgQ291bnRkb3duKCcjb2ZmX3RpbWUnLCBwYWdlRGF0YS5vZmZfZW5kX3RpbWUgLSBwYWdlRGF0YS5vZmZfbm93X3RpbWUpO1xyXG4gICAgfVxyXG4gICAgZ29vZHNfY291bnRkb3duLnJ1bigpO1xyXG5cclxuLy99KTsiXX0=
},{"../mod/countdown":20,"../mod/priceStyle":26}],8:[function(require,module,exports){
(function (global){

var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
var box = $('.sale-gift-box-container')

function init() {
    var body = $(box).find('.sale-gift-body')
    var giftPrice = $(box).find('#sale-gift-price')

    $(box).find('.sale-gift-checkbox').click(function() {
        var checked = $(this).prop('checked')

        if (checked) {
            $(body).show()
            $(giftPrice).show()
        } else {
            $(body).hide()
            $(giftPrice).hide()
        }
    })
}

module.exports = {
    "init": init
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvZ29vZHMvc2FsZV9naWZ0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG52YXIgJCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WyckJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWyckJ10gOiBudWxsKTtcclxudmFyIGJveCA9ICQoJy5zYWxlLWdpZnQtYm94LWNvbnRhaW5lcicpXHJcblxyXG5mdW5jdGlvbiBpbml0KCkge1xyXG4gICAgdmFyIGJvZHkgPSAkKGJveCkuZmluZCgnLnNhbGUtZ2lmdC1ib2R5JylcclxuICAgIHZhciBnaWZ0UHJpY2UgPSAkKGJveCkuZmluZCgnI3NhbGUtZ2lmdC1wcmljZScpXHJcblxyXG4gICAgJChib3gpLmZpbmQoJy5zYWxlLWdpZnQtY2hlY2tib3gnKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgY2hlY2tlZCA9ICQodGhpcykucHJvcCgnY2hlY2tlZCcpXHJcblxyXG4gICAgICAgIGlmIChjaGVja2VkKSB7XHJcbiAgICAgICAgICAgICQoYm9keSkuc2hvdygpXHJcbiAgICAgICAgICAgICQoZ2lmdFByaWNlKS5zaG93KClcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAkKGJvZHkpLmhpZGUoKVxyXG4gICAgICAgICAgICAkKGdpZnRQcmljZSkuaGlkZSgpXHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBcImluaXRcIjogaW5pdFxyXG59OyJdfQ==
},{}],9:[function(require,module,exports){
(function (global){
//define(function(require, exports, module) {
    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);


    var init = function () {
        var similarModule = $(".similar_module");
        var similarItemList = similarModule.find("ul");
        var similarItems = similarItemList.find("li");
        var similarLen = similarItems.length;
        var btnTop = similarModule.siblings(".top-arraw");
        var btnDown = similarModule.siblings(".down-arraw");
        var btnPrev = similarModule.siblings(".prev-arraw")
        var btnNext = similarModule.siblings(".next-arraw")


        if (similarModule.is(':visible')) {
            $(document).ready(function () {
                var isShowBtn = true;
                var Height = similarModule.height();
                var unit = Math.floor(similarItems.eq(1).offset().top - similarItems.eq(0).offset().top);
                var similarItemsLen = Math.floor(Height / unit);
                btnTop.unbind();
                btnDown.unbind();
                if (isShowBtn) {
                    btnTop.click(function () {
                        similarItems = similarItemList.find("li");
                        var unit = Math.floor(similarItems.eq(1).offset().top - similarItems.eq(0).offset().top);
                        if (!similarModule.is(':animated')) {
                            prevStep(moveLen,unit);
                        }
                    });
                    btnDown.click(function () {
                        similarItems = similarItemList.find("li");
                        var unit = Math.floor(similarItems.eq(1).offset().top - similarItems.eq(0).offset().top);
                        if (!similarModule.is(':animated')) {
                            nextStep(moveLen,unit);
                        }
                    });
                    btnPrev.click(function () {
                        btnTop.click();
                    })
                    btnNext.click(function () {
                        btnDown.click();
                    })
                }
                var moveLen = 3;
                var speed = 100;
                similarModule.scrollTop(0);

                var prevStep = function (idx, unit) {
                    if(idx <= 0) return false;
                    similarItemList.find("li:last-child").prependTo(similarItemList);
                    similarModule.scrollTop(unit);
                    similarModule.animate({
                        scrollTop : 0
                    }, speed, 'linear', function(){
                        prevStep(idx - 1, unit);
                    });
                };
                var nextStep = function(idx,unit){
                    if(idx <= 0) return false;
                    similarModule.animate({
                        scrollTop : unit
                    }, speed, 'linear', function(){
                        similarItemList.find("li:first-child").appendTo(similarItemList);
                        similarModule.scrollTop(0);
                        nextStep(idx - 1, unit);
                    });
                };
            });
        }
    }

    module.exports = {
        "init": init,
    };

//}



}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvZ29vZHMvc2ltaWxhcl9jYXJvdXNlbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvL2RlZmluZShmdW5jdGlvbihyZXF1aXJlLCBleHBvcnRzLCBtb2R1bGUpIHtcclxuICAgIHZhciAkID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJyQnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJyQnXSA6IG51bGwpO1xyXG5cclxuXHJcbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgc2ltaWxhck1vZHVsZSA9ICQoXCIuc2ltaWxhcl9tb2R1bGVcIik7XHJcbiAgICAgICAgdmFyIHNpbWlsYXJJdGVtTGlzdCA9IHNpbWlsYXJNb2R1bGUuZmluZChcInVsXCIpO1xyXG4gICAgICAgIHZhciBzaW1pbGFySXRlbXMgPSBzaW1pbGFySXRlbUxpc3QuZmluZChcImxpXCIpO1xyXG4gICAgICAgIHZhciBzaW1pbGFyTGVuID0gc2ltaWxhckl0ZW1zLmxlbmd0aDtcclxuICAgICAgICB2YXIgYnRuVG9wID0gc2ltaWxhck1vZHVsZS5zaWJsaW5ncyhcIi50b3AtYXJyYXdcIik7XHJcbiAgICAgICAgdmFyIGJ0bkRvd24gPSBzaW1pbGFyTW9kdWxlLnNpYmxpbmdzKFwiLmRvd24tYXJyYXdcIik7XHJcbiAgICAgICAgdmFyIGJ0blByZXYgPSBzaW1pbGFyTW9kdWxlLnNpYmxpbmdzKFwiLnByZXYtYXJyYXdcIilcclxuICAgICAgICB2YXIgYnRuTmV4dCA9IHNpbWlsYXJNb2R1bGUuc2libGluZ3MoXCIubmV4dC1hcnJhd1wiKVxyXG5cclxuXHJcbiAgICAgICAgaWYgKHNpbWlsYXJNb2R1bGUuaXMoJzp2aXNpYmxlJykpIHtcclxuICAgICAgICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGlzU2hvd0J0biA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB2YXIgSGVpZ2h0ID0gc2ltaWxhck1vZHVsZS5oZWlnaHQoKTtcclxuICAgICAgICAgICAgICAgIHZhciB1bml0ID0gTWF0aC5mbG9vcihzaW1pbGFySXRlbXMuZXEoMSkub2Zmc2V0KCkudG9wIC0gc2ltaWxhckl0ZW1zLmVxKDApLm9mZnNldCgpLnRvcCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2ltaWxhckl0ZW1zTGVuID0gTWF0aC5mbG9vcihIZWlnaHQgLyB1bml0KTtcclxuICAgICAgICAgICAgICAgIGJ0blRvcC51bmJpbmQoKTtcclxuICAgICAgICAgICAgICAgIGJ0bkRvd24udW5iaW5kKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXNTaG93QnRuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnRuVG9wLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2ltaWxhckl0ZW1zID0gc2ltaWxhckl0ZW1MaXN0LmZpbmQoXCJsaVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVuaXQgPSBNYXRoLmZsb29yKHNpbWlsYXJJdGVtcy5lcSgxKS5vZmZzZXQoKS50b3AgLSBzaW1pbGFySXRlbXMuZXEoMCkub2Zmc2V0KCkudG9wKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzaW1pbGFyTW9kdWxlLmlzKCc6YW5pbWF0ZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldlN0ZXAobW92ZUxlbix1bml0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGJ0bkRvd24uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzaW1pbGFySXRlbXMgPSBzaW1pbGFySXRlbUxpc3QuZmluZChcImxpXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdW5pdCA9IE1hdGguZmxvb3Ioc2ltaWxhckl0ZW1zLmVxKDEpLm9mZnNldCgpLnRvcCAtIHNpbWlsYXJJdGVtcy5lcSgwKS5vZmZzZXQoKS50b3ApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNpbWlsYXJNb2R1bGUuaXMoJzphbmltYXRlZCcpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0U3RlcChtb3ZlTGVuLHVuaXQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnRuUHJldi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ0blRvcC5jbGljaygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgYnRuTmV4dC5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ0bkRvd24uY2xpY2soKTtcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIG1vdmVMZW4gPSAzO1xyXG4gICAgICAgICAgICAgICAgdmFyIHNwZWVkID0gMTAwO1xyXG4gICAgICAgICAgICAgICAgc2ltaWxhck1vZHVsZS5zY3JvbGxUb3AoMCk7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIHByZXZTdGVwID0gZnVuY3Rpb24gKGlkeCwgdW5pdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKGlkeCA8PSAwKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgc2ltaWxhckl0ZW1MaXN0LmZpbmQoXCJsaTpsYXN0LWNoaWxkXCIpLnByZXBlbmRUbyhzaW1pbGFySXRlbUxpc3QpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNpbWlsYXJNb2R1bGUuc2Nyb2xsVG9wKHVuaXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNpbWlsYXJNb2R1bGUuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbFRvcCA6IDBcclxuICAgICAgICAgICAgICAgICAgICB9LCBzcGVlZCwgJ2xpbmVhcicsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZTdGVwKGlkeCAtIDEsIHVuaXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHZhciBuZXh0U3RlcCA9IGZ1bmN0aW9uKGlkeCx1bml0KXtcclxuICAgICAgICAgICAgICAgICAgICBpZihpZHggPD0gMCkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHNpbWlsYXJNb2R1bGUuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbFRvcCA6IHVuaXRcclxuICAgICAgICAgICAgICAgICAgICB9LCBzcGVlZCwgJ2xpbmVhcicsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpbWlsYXJJdGVtTGlzdC5maW5kKFwibGk6Zmlyc3QtY2hpbGRcIikuYXBwZW5kVG8oc2ltaWxhckl0ZW1MaXN0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2ltaWxhck1vZHVsZS5zY3JvbGxUb3AoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRTdGVwKGlkeCAtIDEsIHVuaXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgICAgIFwiaW5pdFwiOiBpbml0LFxyXG4gICAgfTtcclxuXHJcbi8vfVxyXG5cclxuXHJcbiJdfQ==
},{}],10:[function(require,module,exports){
//define(function(require, exports, module) {
function styleDelivery() {}
module.exports = styleDelivery;

styleDelivery.prototype.checkStyleDelivery = function (config, selectList) {
    var relation = config['relation'] && typeof config['relation'] === "object" ? config['relation'] : {};
    var skutonum = config['skutonum'] && typeof config['skutonum'] === "object" ? config['skutonum'] : {};
    var skutonumKeys = Object.keys(skutonum);
    if (skutonumKeys.length > 0) {
        skutonumLoop:
            for (var sku in skutonum) {
                if (skutonum[sku]['Num'] > 0) {
                    for (var name in selectList) {
                        if (typeof skutonum[sku][name] == 'undefined') {
                            continue skutonumLoop;
                        }
                        if (name.toLowerCase() === 'size' && selectList[name] == 0) {
                            continue;
                        }
                        if (skutonum[sku][name] != selectList[name]) {
                            continue skutonumLoop;
                        }
                    }
                    return true;
                }
            }
        return false;
    } else {
        for (var styleName in relation) {
            if (relation[styleName].length == 1) {
                continue;
            }
            if (typeof selectList[styleName] == 'undefined') {
                return false;
            }
        }
        for (var name in selectList) {
            if ($.inArray(selectList[name], relation[name]) == -1) {
                return false;
            }
        }
    }
    return true;
}

//});
},{}],11:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {

var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
require('../mod/carousel');
require('../lib/jqueryJqzoom');
var UserAgent = require('../mod/userAgent');
var userAgent = new UserAgent();
var CommentDrawImage = require('../mod/commentDrawImage');
var addToCart = require('./add_to_cart');
var magnifyPictures = require('./magnify_pictures');
var similarCarousel = require('./similar_carousel');
const SHOP_BY_COLOR_PIC_NUM = 4
var productGlobals = typeof pageData.productGlobals == 'undefined' ? {} : pageData.productGlobals;
var revisingFeaturesList = typeof pageData.revisingFeaturesList != 'undefined' ? pageData.revisingFeaturesList : [];
var useCarouselPicsFeature = $('#product_video').length <= 0 && revisingFeaturesList.indexOf('carouselVideoAndPics') > -1 && productGlobals.isDress;
pageData.carouselPics = typeof pageData.carouselPics == 'undefined' ? 0 : pageData.carouselPics;

var thumb_list = $('#goods_thumb_list');
var magnify_wrap = thumb_list.find('.magnify');
var magnify_pic = thumb_list.find('#magnify_pic');
var magnify_video_container = thumb_list.find('.magnify-video-container');
var magnify_video = thumb_list.find('#magnify-video');
var thumb_switch_btn_container = $('.thumb-switch-btn-container');
var threeLevelImg = typeof magnify_pic.attr('data-three-level-product') != "undefined" ? magnify_pic.attr('data-three-level-product') : false;

var magnify_video_listener = document.getElementById("magnify-video");
var removeCarouselByHover = false;

if(magnify_video_listener){
    magnify_video_listener.addEventListener("ended",function(){
        magnify_video_listener.currentTime = 0.00000;
    })
}

//ipad bind gesturechange
if(userAgent.isIpad()){
    $(".jqzoom").bind('gesturechange',function(){
        var bimg = $("img:eq(1)",this).attr("src");
        var simg = $("img:eq(0)",this).attr("src");
        if(bimg != simg){
            $("img:eq(0)",this).attr("src",bimg);
        }
    });
}
//设置图片尺寸
var setMagnify = function (src) {
    var mnf_width = magnify_wrap.width();
    var mnf_height = magnify_wrap.height();
    magnify_pic.attr('src', src);
    var mnf_cdi = new CommentDrawImage(magnify_pic.get(0), src, mnf_width, mnf_height, true);
    mnf_cdi.init();
    magnify_pic.load(function(){
        $(this).parent().parent().parent().find('.imagePreload').hide().css('visibility', 'hidden');
    });
};

//设置视频尺寸
var setVideo = function (src) {
    magnify_video.attr({"src":src});
    $(this).parent().parent().parent().find('.imagePreload').hide().css('visibility', 'hidden');
};

//显示当前图片色
$.fn.show_color = function (obj) {
    var type = $(this).attr('data-type')
    if ('custom_image' == type) {
        return
    }

    var color = $(this).attr('color');
    var kcolor = $(this).attr('kcolor');
    var multicolorCopyright = pageData.multicolorCopyright;
    var basePictureCopyright = pageData.basePictureCopyright;
    if ($(this).closest('li').attr('kcolor')) {
        $('#multiColorLogo').show();
        thumb_list.find('.gtcopyright').html(multicolorCopyright);
    } else {
        $('#multiColorLogo').hide();
        thumb_list.find('.gtcopyright').html(basePictureCopyright);
    }
    var img_color = $("#img_color");
    if (color != null && color != undefined && color != '' && $(this).parent().attr('id') != 'video-thumb') {

        var lang_suffix = webData.lang_suffix || "";
        var img_color_show = _lang.page_common_color;
        if(!!~['_au', '_uk'].indexOf(lang_suffix)) {
            img_color_show = _lang.page_common_colour;
            color = color.replace(/color/g, 'colour');
            color = color.replace(/Color/g, 'Colour');
        }
        img_color.html('<span id="color_type">' + color + '</span>').show();
    } else {
        img_color.html('').hide();
    }
};
//播放视频时切换宽窄屏，不需要点击缩略图
var needClick = 0;
var init = function () {
    //屏幕宽度变化重新初始化
    var display = $(".narrow-carousel").css("display");
    var styles_form = $('#goods_form');
    var overDisplay = display;

    $(window).resize(function () {
        if($('#magnify-video').is(':visible')){
            needClick = 1;
        }
        var currentDisplay = $(".narrow-carousel").css("display");
        var colorList = styles_form.find('.pis-color-box');
        var thumblist = $('#thumblist');
        var isShow = thumblist.is(':visible');
        if (!isShow) {
            thumblist = $('.narrow-thumblist');
        }
        if (currentDisplay != overDisplay) {
            pageData.resizeCount = true;
            $('.viewport').find('li').find('img').unbind();
            $('.narrow-viewport').find('li').find('img').unbind();
            thumb_list.find('.carousel:eq(0)').carousel();
            magnifyPictures.init();
            similarCarousel.init();
            overDisplay = currentDisplay;
            if (colorList.is(':visible')) {
                // if ($.inArray(pageData.goods_id, pageData.change_color_goods) >= 0) {
                    colorList = colorList.find('.pis-color-a');
                    colorList.each(function () {
                        if ($(this).find('dt').attr('class') == 'selected') {
                            $(this).click();
                            return false;
                        }
                    });
                // }

                if (pageData.thumbPictureData) {
                    var thumbPictureData = eval("(" + pageData.thumbPictureData + ")");
                    var shopByColorImages = thumbPictureData.shopByColorImages;
                    if (shopByColorImages.length == 0) {
                        var bigPicture = $('.zoomPad');
                        if(bigPicture.is(':visible')){
                            var src = bigPicture.find('img').attr('src');
                            var thumbImgs = thumblist.find('li').find('a').find('img');
                            thumbImgs.each(function (index, element) {
                                if ($(element).attr('data-magnify') == src) {
                                    $(element).parent().addClass('zoomThumbActive');
                                }
                            });
                        }
                    }
                }
            }
        }
        putVideoLocation();
    });
    //Customer Reviews 和 Customer Q&A
    if(! document.getElementById('magnify_pic')) {
        return false;
    }

    //初始化首张图片尺寸
    setMagnify(magnify_pic.attr('src'));

    //hide the thumb arrow when only one img
    if(thumb_list.find('#thumblist').children().length <= 1){
        thumb_switch_btn_container.find('.thumb-prev-arrow').hide();
        thumb_switch_btn_container.find('.thumb-next-arrow').hide();
    }

    //当鼠标悬浮图片的时候让select框失去焦点
    $(thumb_list).find('.magnify').mouseenter(function(){
        $('select').blur();
    });

    if(useCarouselPicsFeature) {
        clearInterval(pageData.carouselPics);
        pageData.carouselPics = setInterval(function () {
            $('.thumb-switch-btn-container .thumb-next-arrow').click();
        }, 3000)
    }
    //初始放大镜
    if(pageData.use_zoom) {
        $('.jqzoom').jqzoom({
            zoomWidth: 454,
            zoomHeight: magnify_wrap.height() - 2,
            xOffset: 27,
            title: false,
            zoomType: 'standard',
            lens: true,
            preloadImages: false,
            showEffect: 'fadein',
            alwaysOn: false
        });
    } else {
        magnify_pic.click(function () {
            return false;
        });
        //点击缩略图切换
        thumb_list.delegate('.viewport img, .video_thumb-container img, .video_thumb-container span', 'click', function () {
            if($(this).parent().attr('id') && ($(this).parent().attr('id') == 'video-thumb')){

                magnify_video_container.show();
                magnify_pic.hide();
                $('.thumb-next-arrow').hide();
                $('.thumb-prev-arrow').hide();
                setVideo($(".for-video-src").val());

                thumb_list.find('.zoomThumb').removeClass('zoomThumbActive');
                $(this).parent().addClass('zoomThumbActive');
                $('.video_thumb-container a').addClass('zoomThumbActive');
                magnify_video[0].play();
                $(this).show_color();

            }else{
                var src = thumb_list.find('a.zoomThumb.zoomThumbActive').find('img').attr('src');
                var kcolor = thumb_list.find('a.zoomThumb.zoomThumbActive').parent().attr('kcolor');

                $(".thumb-active").attr('src', src);
                $(".thumb-active").attr('kcolor', kcolor);

                magnify_video_container.hide();
                magnify_pic.show();
                $('.thumb-next-arrow').show();
                $('.thumb-prev-arrow').show();
                setMagnify($(this).attr('data-magnify'));
                thumb_list.find('.zoomThumb').removeClass('zoomThumbActive');
                $(this).parent().addClass('zoomThumbActive');
                $('.video_thumb-container a').removeClass('zoomThumbActive');
                $(this).show_color();

                if(typeof(thumb_list.find('#thumblist').attr('data-img-clicked')) == "undefined"){
                    thumb_list.find('#thumblist').attr('data-img-clicked',true);
                }

                magnify_video_listener.pause();
            }
        });

        if(useCarouselPicsFeature) {
            $('.magnify').mouseenter(function () {
                if(pageData.carouselPics > 0) {
                    clearInterval(pageData.carouselPics);
                    pageData.carouselPics = 0;
                    removeCarouselByHover = true;
                }
            })
            $('.magnify').mouseleave(function () {
                clearInterval(pageData.carouselPics)
                if(removeCarouselByHover) {
                    pageData.carouselPics = setInterval(function () {
                        $('.thumb-switch-btn-container .thumb-next-arrow').click();
                    }, 3000)
                    removeCarouselByHover = false
                }
            })
        }
        $('.magnify').hover(function () {
            $('.thumb-prev-arrow').show();
            $('.thumb-next-arrow').show();
            if($('.magnify-video-container').is(':visible')) {
                if($('#magnify-video')[0].paused) {
                    $('.video-controller').removeClass('pause')
                    $('.video-controller').addClass('play')
                }else {
                    $('.video-controller').removeClass('play')
                    $('.video-controller').addClass('pause')
                }
                $('.video-controller').show()
            }else {
                $('.video-controller').hide()
            }
        },function () {
            $('.video-controller').hide()
            $('.thumb-prev-arrow').hide();
            $('.thumb-next-arrow').hide();
        })
        thumb_list.delegate('.video-controller', 'click', function () {
            if($('#magnify-video')[0].paused) {
                $(this).removeClass('play');
                $(this).addClass('pause');
                $('#magnify-video')[0].play();
            }else {
                $(this).removeClass('pause');
                $(this).addClass('play');
                $('#magnify-video')[0].pause();
            }
        })
        thumb_switch_btn_container.delegate('.thumb-prev-arrow', 'click', function () {
            $('.video-controller').hide()
            if(!$('.viewport:visible').is(':animated')){
                var currImg = thumb_list.find('a.zoomThumb.zoomThumbActive:visible').find('img');
                var idx = thumb_list.find('#thumblist:visible').find('li:visible').index(currImg.closest('li'));
                var show_arrow = thumb_list.find('.top-arraw').is(':visible') || thumb_list.find('.prev-arraw').is(':visible');
                var nextImg;
                if(idx == 0) {
                    if(show_arrow) {
                        thumb_list.find('.top-arraw').click();
                        thumb_list.find('.prev-arraw').click();
                        nextImg = thumb_list.find('#thumblist:visible').children('li:visible').eq(0).find('img');
                    } else {
                        var viewportLen = thumb_list.find('#thumblist:visible').children('li:visible').length;
                        nextImg = thumb_list.find('#thumblist:visible').children('li:visible').eq(viewportLen - 1).find('img');
                    }
                } else if (idx < 0) {
                    //for video(video idx == -1)
                    var viewportLen = thumb_list.find('#thumblist:visible').children('li:visible').length;
                    nextImg = thumb_list.find('#thumblist:visible').children('li:visible').eq(viewportLen - 1).find('img');
                    if(thumb_list.find('.viewport:visible').hasClass('btn-show')) {
                        thumb_list.find('.top-arraw').click()
                    }
                } else {
                    nextImg = thumb_list.find('#thumblist:visible').children('li:visible').eq(idx - 1).find('img');
                }
                nextImg.click();
            }
        });
        thumb_switch_btn_container.delegate('.thumb-next-arrow', 'click', function () {
            $('.video-controller').hide()
            if(!$('.viewport:visible').is(':animated')){
                var currImg = thumb_list.find('a.zoomThumb.zoomThumbActive:visible').find('img');
                var idx = thumb_list.find('#thumblist:visible').find('li:visible').index(currImg.closest('li'));
                var nextItem = thumb_list.find('#thumblist:visible').children('li:visible').eq(idx + 1);
                if(!nextItem.length){
                    nextItem = thumb_list.find('#thumblist:visible').children('li:visible').eq(0);
                }
                var nextImg = nextItem.find('img');
                nextImg.click();
            }
        });
    }

    //缩略图轮播
    thumb_list.find('.carousel:eq(0)').carousel({
        direction : pageData.thumbLayout,
        btnSpace : '15px'
    });
    putVideoLocation();
};

var selectedColor = $("#goods_form").find(".pis-color-box").find('.pis-color-a dt.selected').parent().attr("data-kvalue");
if (selectedColor != undefined ) {
    if(pageData.thumbPictureData && pageData.thumbPictureData.trim().length > 0){
        var thumbPictureData = eval("(" + pageData.thumbPictureData + ")");
        var shopByColorImages = thumbPictureData.shopByColorImages;
        var defaultColor = thumbPictureData.defaultColor;
        if (shopByColorImages[selectedColor] != undefined && (defaultColor != null && defaultColor.toLowerCase() != selectedColor)) {
            var multicolorCopyright = pageData.multicolorCopyright;
            thumb_list.find('.gtcopyright').html(multicolorCopyright);
        }
    }
}

var add_custom_pics = function(kname, imgSrc) {
    thumb_list.find('.custom_img').remove()
    var carousel = thumb_list.find('.carousel');

    var imgAlt = typeof $("#magnify_pic").attr("alt") == "undefined" ? "" : $("#magnify_pic").attr("alt");
    var customUl = "<ul class='custom_img thumbcontent'>"
    + '<li custom_img="' + kname + '">'
    + '<a class="zoomThumb" href="javascript:void(0);" rel="{gallery: \'gal1\', smallimage: \' ' + imgSrc + '\',largeimage: \'' + imgSrc + '\'}">'
    + '<img data-type="custom_image" src="' + imgSrc + '" alt="' + imgAlt +  '">'
    + '</a>'
    + '</li>'
    + '</ul>'

    var viewport = carousel.find('.viewport')

    carousel.addClass('with-custom-img')
    viewport.before(customUl)

    carousel.find('.custom_img img').each(function() {
        $(this).on('click', function() {
            var imagePreload = magnify_pic.parent().parent().parent().find(".imagePreload")
            imagePreload.show().css("visibility", 'visible');
            $(this).load(function() {
                imagePreload.hide().css('visibility', 'hidden');
            })

            var imgSrc = $(this).attr('src')
            setMagnify(imgSrc)
            
            thumb_list.find('.zoomThumb').removeClass('zoomThumbActive');
            $(this).parent().addClass('zoomThumbActive');
        })
        
        if ($(this).is(':visible')) {
            $(this).click()
        }
    })

    // 重新绑定carousel事件，计算显示数量
    $(viewport).find('li img').unbind();
    thumb_list.find('.carousel:eq(0)').carousel({
        direction : pageData.thumbLayout,
        btnSpace : '15px'
    });
}

var change_pics = function(selected) {
    $('#thumblist li[color]').remove();
    var color = selected.color;
    var kcolor = selected.kcolor;
    var rgb = selected.rgb;
    var trim = selected.trim;
    var urls = [];
    var multicolorCopyright = pageData.multicolorCopyright;
    var basePictureCopyright = pageData.basePictureCopyright;
    if(pageData.thumbPictureData && pageData.thumbPictureData.trim().length > 0){
        var thumbPictureData = eval("(" + pageData.thumbPictureData + ")");
        var shopByColorImages = thumbPictureData.shopByColorImages;
        var defaultColor = thumbPictureData.defaultColor;
        var defaultColorEn = thumbPictureData.defaultColorEn;
        var thumbConfig = thumbPictureData.thumbConfig;
        var rearImages = thumbPictureData.rearImages;
        for (var key in shopByColorImages) {
            if (key == kcolor && key != "") {
                urls = shopByColorImages[key];
            }
        }

        //该颜色有多色图就显示背面图
        if(urls.length >= 1){
            for (var keyColor in rearImages) {
                if (keyColor == kcolor && keyColor != "") {
                    urls.push(rearImages[keyColor])
                }
            }
        }
    }


    var lang_suffix = webData.lang_suffix || ""
    if(!!~['_au', '_uk'].indexOf(lang_suffix) && defaultColor) {
        color = color.replace(/color/g, 'colour');
        color = color.replace(/Color/g, 'Colour');
        defaultColor = defaultColor.replace(/color/g, 'colour');
        defaultColor = defaultColor.replace(/Color/g, 'Colour');
    }
    var thumblist = thumb_list.find('#thumblist');
    var isShow = thumblist.is(':visible');
    if (!isShow) {
        thumblist = thumb_list.find('.narrow-thumblist');
    }

    if (urls.length != 0) {
        var newItems = '';
        for (var i = 0; i < urls.length; i++) {
            var url = urls[i];
            if(threeLevelImg){
                imgPrefix = webData.PIC_PATH + webData.domain.toLowerCase() + '/' + thumbConfig.p + '/';
            }else {
                imgPrefix = webData.PIC_PATH + webData.domain.toLowerCase() + '/' + thumbConfig.d + '/';
            }
            specialThumbConf = thumbPictureData.specialThumbConf;
            if(specialThumbConf.s400 != undefined && specialThumbConf.s400){
                imgPrefix = webData.PIC_PATH + specialThumbConf.s400;
            }
            var small_src = getApiImageUrl(rgb, trim, imgPrefix , url);
            imgPrefix = webData.PIC_PATH + webData.domain.toLowerCase() + '/' + thumbConfig.o + '/';
            if(specialThumbConf.o1140 != undefined && specialThumbConf.o1140){
                imgPrefix = webData.PIC_PATH + specialThumbConf.o1140;
            }
            var large_src = getApiImageUrl(rgb, trim, imgPrefix , url);
            var _thumbConfigSmall = thumbConfig.h;
            if(pageData.isPersonalized != undefined && pageData.isPersonalized) {
                _thumbConfigSmall = thumbConfig.v;
            }
            var thumb_src = webData.PIC_PATH + _thumbConfigSmall + '/' + url;
            var imgAlt = typeof $("#magnify_pic").attr("alt") == "undefined" ? "" : $("#magnify_pic").attr("alt");

            newItems += '<li color="' + color + '" kcolor="' + kcolor + '" style="display:none;">'
                + '<a href="javascript:void(0);" rel="{gallery: \'gal1\', smallimage: \' ' + small_src + '\',largeimage: \'' + large_src + '\'}">'
                + '<img src="' + thumb_src + '"data-magnify="' + small_src + '" color="' + color + '" kcolor="' + kcolor + '" alt="' + imgAlt +  '">'
                + '</a>'
                + '</li>';
        }

        //如果 shopbycolor 图片超过两张, 只展示多色图不展示photo图(包含背面图)
        if (urls.length >= SHOP_BY_COLOR_PIC_NUM){
            thumblist.find('li').each(function() {
                $(this).hide();
            });
            if(useCarouselPicsFeature) {
                clearInterval(pageData.carouselPics);
                pageData.carouselPics = setInterval(function () {
                    $('.thumb-switch-btn-container .thumb-next-arrow').click();
                }, 3000)
            }
        } else {
            thumblist.find('li').each(function() {
                $(this).show();
            });
            if(useCarouselPicsFeature) {
                clearInterval(pageData.carouselPics);
                pageData.carouselPics = 0;
            }
        }

        //根据colorKey更新.carousel的html
        var oldItems = thumblist.html();
        thumblist.html(newItems + oldItems);
        newItems = thumblist.find('li[color]');
        var newItemsLength = newItems.length;
        var hasLoadNum = 0;

        newItems.each(function(index) {
            var thumbImg = $(this).find('img');
            var image = new Image();
            image.src = thumbImg.attr('data-magnify');
            if (!image.complete) {
                magnify_pic.parent().parent().parent().find(".imagePreload").show().css("visibility", 'visible');
            }
            thumbImg.load(function(){
                $(this).closest('li').show();
                $(this).closest('a').addClass('zoomThumb');
                if (index == 0) {
                    $('#color_type').html(color);
                    thumb_list.find('.gtcopyright').html(multicolorCopyright);
                    $('#multiColorLogo').show();
                    if(needClick != 1){
                        thumbImg.click();
                    }
                    needClick = 0;
                    $("#magnify-video").parent().parent().parent().find('.imagePreload').hide().css('visibility', 'hidden');

                }

                hasLoadNum ++;
                if(newItemsLength == hasLoadNum){
                    //all elements are new , so bing event will have no problem
                    //重新绑定滚动事件
                    thumb_list.find('.carousel:eq(0)').carousel({
                        direction : pageData.thumbLayout,
                        btnSpace : '15px'
                    });
                }
                putVideoLocation();
            });
        });
    } else {
        var styles_form = $('#goods_form');
        var colorLump = styles_form.find('.pis-color-box');
        var selectedColor = styles_form.find('#_color').find('option:selected').attr('kvalue');
        var colorLumpColor = $('.selected_tip').text();
        thumb_list.find('.gtcopyright').html(basePictureCopyright);
        // $('#color_type').html(defaultColor);
        $('#multiColorLogo').hide();
        if(shopByColorImages.length != 0){
            if(!$('.video_thumb-container a').hasClass('zoomThumbActive')) {
                // don't know why but it works
                // thumblist.find('.zoomThumb:eq(0)').click(); 
            }

            //click shipIn24hrsColors hide thumblist li, then click allColor
            thumblist.find('li').each(function() {
                $(this).show();
            });

            var oldHtml = thumblist.html();
            thumblist.empty().html(oldHtml);
            thumb_list.find('.carousel:eq(0)').carousel();

        }else{
            // set shown color selected
            var itemList = $('#thumblist');
            var isShow = itemList.is(':visible');
            if (!isShow) {
                itemList = $('.narrow-thumblist');
            }
            var thumbImgs = itemList.find('li').find('a').find('img');
            thumbImgs.each(function (index, element) {
                if (kcolor != '' && $(element).attr('kcolor') == kcolor && !colorLump.is(':visible')) {
                    $(element).click();
                    $(element).parent().addClass('zoomThumbActive');
                    $('#color_type').html($(element).attr('color'));
                    return false;
                } else {
                    var bigPicture = $('.zoomPad');
                    var src = bigPicture.find('img').attr('src');
                    if ($(element).attr('data-magnify') == src && typeof selectedColor == "undefined" && (colorLumpColor == "" || typeof colorLumpColor == "undefined") && pageData.resizeCount == true) {
                        if(!$('.video_thumb-container a').hasClass('zoomThumbActive')) {
                            $(element).parent().addClass('zoomThumbActive');
                        }

                        $('#color_type').html($(element).attr('color'));
                    }
                }
            });
            thumbImgs.each(function (index, element) {
                if ($(element).parent().hasClass('zoomThumbActive') && pageData.resizeCount == true) {
                    $('#color_type').html($(element).attr('color'));
                }
            });
            thumbImgs.each(function (index, element) {
                var bigPicture = $('.zoomPad');
                var src = bigPicture.find('img').attr('src');
                if (selectedColor != "" && typeof selectedColor != "undefined" && selectedColor != defaultColor && selectedColor != $('#color_type').html() && $(element).attr('data-magnify') == src && pageData.resizeCount == true) {
                    $(element).parent().addClass('zoomThumbActive');
                }
            });
        }
        if(defaultColorEn && kcolor == defaultColorEn.toLowerCase().replace(' ', '_')) {
            thumblist.find('li:first-child').attr('kcolor', kcolor)
        }
        putVideoLocation();
    }
}

var getApiImageUrl = function(rgb, trim, imgRoot, url) {
    var imageUrl = '';
    if(rgb == ''|| trim == '') {
        imageUrl = imgRoot + url;
    } else {
        var color = getColorHex(rgb);
        var urlArray = url.split('/');
        if(urlArray.length >= 2) {
            urlArray[2] = color + '_' + trim + '_' + urlArray[2];
        }
        imageUrl = imgRoot + urlArray.join('/');
    }
    return imageUrl;
};

var getColorHex = function(color){
    return '0xffffff';
    if(/^(rgb|RGB)/.test(color)){
        var aColor =
            color.replace(/(?:||rgb|RGB|\(|\))*/g,"").split(",");
        var strHex = "0x";
        for(var i=0; i<aColor.length; i++){
            var hex = Number(aColor[i]).toString(16);
            if(hex === "0"){
                hex += hex;
            }
            strHex += hex;
        }
        if(strHex.length !== 8){
            strHex = color;
        }
        return strHex;
    }
};

var putVideoLocation = function() {
    var default_photo_len = 5;
    var product_video = thumb_list.find('#product_video:visible');
    if(!product_video){
        return
    }
    var photo_carousel = product_video.parents(".carousel");
    var viewport = photo_carousel.children('.viewport');
    var photo_len = viewport.find('ul').children('li:visible').length;
    if(photo_len < default_photo_len) {
        if(!photo_carousel.hasClass('short-carousel')) {
            photo_carousel.addClass('short-carousel');
        }
        if(!viewport.hasClass('short-viewport')) {
            viewport.addClass('short-viewport');
        }
    } else {
        if(photo_carousel.hasClass('short-carousel')) {
            photo_carousel.removeClass('short-carousel');
        }
        if(viewport.hasClass('short-viewport')) {
            viewport.removeClass('short-viewport');
        }
    }
}

module.exports = {
    "init": init,
    "change_pics": change_pics,
    "add_custom_pics": add_custom_pics,
    "putVideoLocation": putVideoLocation
};

//});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvZ29vZHMvdGh1bWJfcGljdHVyZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvL2RlZmluZShmdW5jdGlvbiAocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7XHJcblxyXG52YXIgJCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WyckJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWyckJ10gOiBudWxsKTtcclxucmVxdWlyZSgnLi4vbW9kL2Nhcm91c2VsJyk7XHJcbnJlcXVpcmUoJy4uL2xpYi9qcXVlcnlKcXpvb20nKTtcclxudmFyIFVzZXJBZ2VudCA9IHJlcXVpcmUoJy4uL21vZC91c2VyQWdlbnQnKTtcclxudmFyIHVzZXJBZ2VudCA9IG5ldyBVc2VyQWdlbnQoKTtcclxudmFyIENvbW1lbnREcmF3SW1hZ2UgPSByZXF1aXJlKCcuLi9tb2QvY29tbWVudERyYXdJbWFnZScpO1xyXG52YXIgYWRkVG9DYXJ0ID0gcmVxdWlyZSgnLi9hZGRfdG9fY2FydCcpO1xyXG52YXIgbWFnbmlmeVBpY3R1cmVzID0gcmVxdWlyZSgnLi9tYWduaWZ5X3BpY3R1cmVzJyk7XHJcbnZhciBzaW1pbGFyQ2Fyb3VzZWwgPSByZXF1aXJlKCcuL3NpbWlsYXJfY2Fyb3VzZWwnKTtcclxuY29uc3QgU0hPUF9CWV9DT0xPUl9QSUNfTlVNID0gNFxyXG52YXIgcHJvZHVjdEdsb2JhbHMgPSB0eXBlb2YgcGFnZURhdGEucHJvZHVjdEdsb2JhbHMgPT0gJ3VuZGVmaW5lZCcgPyB7fSA6IHBhZ2VEYXRhLnByb2R1Y3RHbG9iYWxzO1xyXG52YXIgcmV2aXNpbmdGZWF0dXJlc0xpc3QgPSB0eXBlb2YgcGFnZURhdGEucmV2aXNpbmdGZWF0dXJlc0xpc3QgIT0gJ3VuZGVmaW5lZCcgPyBwYWdlRGF0YS5yZXZpc2luZ0ZlYXR1cmVzTGlzdCA6IFtdO1xyXG52YXIgdXNlQ2Fyb3VzZWxQaWNzRmVhdHVyZSA9ICQoJyNwcm9kdWN0X3ZpZGVvJykubGVuZ3RoIDw9IDAgJiYgcmV2aXNpbmdGZWF0dXJlc0xpc3QuaW5kZXhPZignY2Fyb3VzZWxWaWRlb0FuZFBpY3MnKSA+IC0xICYmIHByb2R1Y3RHbG9iYWxzLmlzRHJlc3M7XHJcbnBhZ2VEYXRhLmNhcm91c2VsUGljcyA9IHR5cGVvZiBwYWdlRGF0YS5jYXJvdXNlbFBpY3MgPT0gJ3VuZGVmaW5lZCcgPyAwIDogcGFnZURhdGEuY2Fyb3VzZWxQaWNzO1xyXG5cclxudmFyIHRodW1iX2xpc3QgPSAkKCcjZ29vZHNfdGh1bWJfbGlzdCcpO1xyXG52YXIgbWFnbmlmeV93cmFwID0gdGh1bWJfbGlzdC5maW5kKCcubWFnbmlmeScpO1xyXG52YXIgbWFnbmlmeV9waWMgPSB0aHVtYl9saXN0LmZpbmQoJyNtYWduaWZ5X3BpYycpO1xyXG52YXIgbWFnbmlmeV92aWRlb19jb250YWluZXIgPSB0aHVtYl9saXN0LmZpbmQoJy5tYWduaWZ5LXZpZGVvLWNvbnRhaW5lcicpO1xyXG52YXIgbWFnbmlmeV92aWRlbyA9IHRodW1iX2xpc3QuZmluZCgnI21hZ25pZnktdmlkZW8nKTtcclxudmFyIHRodW1iX3N3aXRjaF9idG5fY29udGFpbmVyID0gJCgnLnRodW1iLXN3aXRjaC1idG4tY29udGFpbmVyJyk7XHJcbnZhciB0aHJlZUxldmVsSW1nID0gdHlwZW9mIG1hZ25pZnlfcGljLmF0dHIoJ2RhdGEtdGhyZWUtbGV2ZWwtcHJvZHVjdCcpICE9IFwidW5kZWZpbmVkXCIgPyBtYWduaWZ5X3BpYy5hdHRyKCdkYXRhLXRocmVlLWxldmVsLXByb2R1Y3QnKSA6IGZhbHNlO1xyXG5cclxudmFyIG1hZ25pZnlfdmlkZW9fbGlzdGVuZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hZ25pZnktdmlkZW9cIik7XHJcbnZhciByZW1vdmVDYXJvdXNlbEJ5SG92ZXIgPSBmYWxzZTtcclxuXHJcbmlmKG1hZ25pZnlfdmlkZW9fbGlzdGVuZXIpe1xyXG4gICAgbWFnbmlmeV92aWRlb19saXN0ZW5lci5hZGRFdmVudExpc3RlbmVyKFwiZW5kZWRcIixmdW5jdGlvbigpe1xyXG4gICAgICAgIG1hZ25pZnlfdmlkZW9fbGlzdGVuZXIuY3VycmVudFRpbWUgPSAwLjAwMDAwO1xyXG4gICAgfSlcclxufVxyXG5cclxuLy9pcGFkIGJpbmQgZ2VzdHVyZWNoYW5nZVxyXG5pZih1c2VyQWdlbnQuaXNJcGFkKCkpe1xyXG4gICAgJChcIi5qcXpvb21cIikuYmluZCgnZ2VzdHVyZWNoYW5nZScsZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgYmltZyA9ICQoXCJpbWc6ZXEoMSlcIix0aGlzKS5hdHRyKFwic3JjXCIpO1xyXG4gICAgICAgIHZhciBzaW1nID0gJChcImltZzplcSgwKVwiLHRoaXMpLmF0dHIoXCJzcmNcIik7XHJcbiAgICAgICAgaWYoYmltZyAhPSBzaW1nKXtcclxuICAgICAgICAgICAgJChcImltZzplcSgwKVwiLHRoaXMpLmF0dHIoXCJzcmNcIixiaW1nKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG4vL+iuvue9ruWbvueJh+WwuuWvuFxyXG52YXIgc2V0TWFnbmlmeSA9IGZ1bmN0aW9uIChzcmMpIHtcclxuICAgIHZhciBtbmZfd2lkdGggPSBtYWduaWZ5X3dyYXAud2lkdGgoKTtcclxuICAgIHZhciBtbmZfaGVpZ2h0ID0gbWFnbmlmeV93cmFwLmhlaWdodCgpO1xyXG4gICAgbWFnbmlmeV9waWMuYXR0cignc3JjJywgc3JjKTtcclxuICAgIHZhciBtbmZfY2RpID0gbmV3IENvbW1lbnREcmF3SW1hZ2UobWFnbmlmeV9waWMuZ2V0KDApLCBzcmMsIG1uZl93aWR0aCwgbW5mX2hlaWdodCwgdHJ1ZSk7XHJcbiAgICBtbmZfY2RpLmluaXQoKTtcclxuICAgIG1hZ25pZnlfcGljLmxvYWQoZnVuY3Rpb24oKXtcclxuICAgICAgICAkKHRoaXMpLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoJy5pbWFnZVByZWxvYWQnKS5oaWRlKCkuY3NzKCd2aXNpYmlsaXR5JywgJ2hpZGRlbicpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG4vL+iuvue9ruinhumikeWwuuWvuFxyXG52YXIgc2V0VmlkZW8gPSBmdW5jdGlvbiAoc3JjKSB7XHJcbiAgICBtYWduaWZ5X3ZpZGVvLmF0dHIoe1wic3JjXCI6c3JjfSk7XHJcbiAgICAkKHRoaXMpLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoJy5pbWFnZVByZWxvYWQnKS5oaWRlKCkuY3NzKCd2aXNpYmlsaXR5JywgJ2hpZGRlbicpO1xyXG59O1xyXG5cclxuLy/mmL7npLrlvZPliY3lm77niYfoibJcclxuJC5mbi5zaG93X2NvbG9yID0gZnVuY3Rpb24gKG9iaikge1xyXG4gICAgdmFyIHR5cGUgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtdHlwZScpXHJcbiAgICBpZiAoJ2N1c3RvbV9pbWFnZScgPT0gdHlwZSkge1xyXG4gICAgICAgIHJldHVyblxyXG4gICAgfVxyXG5cclxuICAgIHZhciBjb2xvciA9ICQodGhpcykuYXR0cignY29sb3InKTtcclxuICAgIHZhciBrY29sb3IgPSAkKHRoaXMpLmF0dHIoJ2tjb2xvcicpO1xyXG4gICAgdmFyIG11bHRpY29sb3JDb3B5cmlnaHQgPSBwYWdlRGF0YS5tdWx0aWNvbG9yQ29weXJpZ2h0O1xyXG4gICAgdmFyIGJhc2VQaWN0dXJlQ29weXJpZ2h0ID0gcGFnZURhdGEuYmFzZVBpY3R1cmVDb3B5cmlnaHQ7XHJcbiAgICBpZiAoJCh0aGlzKS5jbG9zZXN0KCdsaScpLmF0dHIoJ2tjb2xvcicpKSB7XHJcbiAgICAgICAgJCgnI211bHRpQ29sb3JMb2dvJykuc2hvdygpO1xyXG4gICAgICAgIHRodW1iX2xpc3QuZmluZCgnLmd0Y29weXJpZ2h0JykuaHRtbChtdWx0aWNvbG9yQ29weXJpZ2h0KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJCgnI211bHRpQ29sb3JMb2dvJykuaGlkZSgpO1xyXG4gICAgICAgIHRodW1iX2xpc3QuZmluZCgnLmd0Y29weXJpZ2h0JykuaHRtbChiYXNlUGljdHVyZUNvcHlyaWdodCk7XHJcbiAgICB9XHJcbiAgICB2YXIgaW1nX2NvbG9yID0gJChcIiNpbWdfY29sb3JcIik7XHJcbiAgICBpZiAoY29sb3IgIT0gbnVsbCAmJiBjb2xvciAhPSB1bmRlZmluZWQgJiYgY29sb3IgIT0gJycgJiYgJCh0aGlzKS5wYXJlbnQoKS5hdHRyKCdpZCcpICE9ICd2aWRlby10aHVtYicpIHtcclxuXHJcbiAgICAgICAgdmFyIGxhbmdfc3VmZml4ID0gd2ViRGF0YS5sYW5nX3N1ZmZpeCB8fCBcIlwiO1xyXG4gICAgICAgIHZhciBpbWdfY29sb3Jfc2hvdyA9IF9sYW5nLnBhZ2VfY29tbW9uX2NvbG9yO1xyXG4gICAgICAgIGlmKCEhflsnX2F1JywgJ191ayddLmluZGV4T2YobGFuZ19zdWZmaXgpKSB7XHJcbiAgICAgICAgICAgIGltZ19jb2xvcl9zaG93ID0gX2xhbmcucGFnZV9jb21tb25fY29sb3VyO1xyXG4gICAgICAgICAgICBjb2xvciA9IGNvbG9yLnJlcGxhY2UoL2NvbG9yL2csICdjb2xvdXInKTtcclxuICAgICAgICAgICAgY29sb3IgPSBjb2xvci5yZXBsYWNlKC9Db2xvci9nLCAnQ29sb3VyJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGltZ19jb2xvci5odG1sKCc8c3BhbiBpZD1cImNvbG9yX3R5cGVcIj4nICsgY29sb3IgKyAnPC9zcGFuPicpLnNob3coKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaW1nX2NvbG9yLmh0bWwoJycpLmhpZGUoKTtcclxuICAgIH1cclxufTtcclxuLy/mkq3mlL7op4bpopHml7bliIfmjaLlrr3nqoTlsY/vvIzkuI3pnIDopoHngrnlh7vnvKnnlaXlm75cclxudmFyIG5lZWRDbGljayA9IDA7XHJcbnZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy/lsY/luZXlrr3luqblj5jljJbph43mlrDliJ3lp4vljJZcclxuICAgIHZhciBkaXNwbGF5ID0gJChcIi5uYXJyb3ctY2Fyb3VzZWxcIikuY3NzKFwiZGlzcGxheVwiKTtcclxuICAgIHZhciBzdHlsZXNfZm9ybSA9ICQoJyNnb29kc19mb3JtJyk7XHJcbiAgICB2YXIgb3ZlckRpc3BsYXkgPSBkaXNwbGF5O1xyXG5cclxuICAgICQod2luZG93KS5yZXNpemUoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmKCQoJyNtYWduaWZ5LXZpZGVvJykuaXMoJzp2aXNpYmxlJykpe1xyXG4gICAgICAgICAgICBuZWVkQ2xpY2sgPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgY3VycmVudERpc3BsYXkgPSAkKFwiLm5hcnJvdy1jYXJvdXNlbFwiKS5jc3MoXCJkaXNwbGF5XCIpO1xyXG4gICAgICAgIHZhciBjb2xvckxpc3QgPSBzdHlsZXNfZm9ybS5maW5kKCcucGlzLWNvbG9yLWJveCcpO1xyXG4gICAgICAgIHZhciB0aHVtYmxpc3QgPSAkKCcjdGh1bWJsaXN0Jyk7XHJcbiAgICAgICAgdmFyIGlzU2hvdyA9IHRodW1ibGlzdC5pcygnOnZpc2libGUnKTtcclxuICAgICAgICBpZiAoIWlzU2hvdykge1xyXG4gICAgICAgICAgICB0aHVtYmxpc3QgPSAkKCcubmFycm93LXRodW1ibGlzdCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY3VycmVudERpc3BsYXkgIT0gb3ZlckRpc3BsYXkpIHtcclxuICAgICAgICAgICAgcGFnZURhdGEucmVzaXplQ291bnQgPSB0cnVlO1xyXG4gICAgICAgICAgICAkKCcudmlld3BvcnQnKS5maW5kKCdsaScpLmZpbmQoJ2ltZycpLnVuYmluZCgpO1xyXG4gICAgICAgICAgICAkKCcubmFycm93LXZpZXdwb3J0JykuZmluZCgnbGknKS5maW5kKCdpbWcnKS51bmJpbmQoKTtcclxuICAgICAgICAgICAgdGh1bWJfbGlzdC5maW5kKCcuY2Fyb3VzZWw6ZXEoMCknKS5jYXJvdXNlbCgpO1xyXG4gICAgICAgICAgICBtYWduaWZ5UGljdHVyZXMuaW5pdCgpO1xyXG4gICAgICAgICAgICBzaW1pbGFyQ2Fyb3VzZWwuaW5pdCgpO1xyXG4gICAgICAgICAgICBvdmVyRGlzcGxheSA9IGN1cnJlbnREaXNwbGF5O1xyXG4gICAgICAgICAgICBpZiAoY29sb3JMaXN0LmlzKCc6dmlzaWJsZScpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBpZiAoJC5pbkFycmF5KHBhZ2VEYXRhLmdvb2RzX2lkLCBwYWdlRGF0YS5jaGFuZ2VfY29sb3JfZ29vZHMpID49IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvckxpc3QgPSBjb2xvckxpc3QuZmluZCgnLnBpcy1jb2xvci1hJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3JMaXN0LmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5maW5kKCdkdCcpLmF0dHIoJ2NsYXNzJykgPT0gJ3NlbGVjdGVkJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5jbGljaygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHBhZ2VEYXRhLnRodW1iUGljdHVyZURhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdGh1bWJQaWN0dXJlRGF0YSA9IGV2YWwoXCIoXCIgKyBwYWdlRGF0YS50aHVtYlBpY3R1cmVEYXRhICsgXCIpXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzaG9wQnlDb2xvckltYWdlcyA9IHRodW1iUGljdHVyZURhdGEuc2hvcEJ5Q29sb3JJbWFnZXM7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNob3BCeUNvbG9ySW1hZ2VzLmxlbmd0aCA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBiaWdQaWN0dXJlID0gJCgnLnpvb21QYWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoYmlnUGljdHVyZS5pcygnOnZpc2libGUnKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3JjID0gYmlnUGljdHVyZS5maW5kKCdpbWcnKS5hdHRyKCdzcmMnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0aHVtYkltZ3MgPSB0aHVtYmxpc3QuZmluZCgnbGknKS5maW5kKCdhJykuZmluZCgnaW1nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHVtYkltZ3MuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJChlbGVtZW50KS5hdHRyKCdkYXRhLW1hZ25pZnknKSA9PSBzcmMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5wYXJlbnQoKS5hZGRDbGFzcygnem9vbVRodW1iQWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcHV0VmlkZW9Mb2NhdGlvbigpO1xyXG4gICAgfSk7XHJcbiAgICAvL0N1c3RvbWVyIFJldmlld3Mg5ZKMIEN1c3RvbWVyIFEmQVxyXG4gICAgaWYoISBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFnbmlmeV9waWMnKSkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvL+WIneWni+WMlummluW8oOWbvueJh+WwuuWvuFxyXG4gICAgc2V0TWFnbmlmeShtYWduaWZ5X3BpYy5hdHRyKCdzcmMnKSk7XHJcblxyXG4gICAgLy9oaWRlIHRoZSB0aHVtYiBhcnJvdyB3aGVuIG9ubHkgb25lIGltZ1xyXG4gICAgaWYodGh1bWJfbGlzdC5maW5kKCcjdGh1bWJsaXN0JykuY2hpbGRyZW4oKS5sZW5ndGggPD0gMSl7XHJcbiAgICAgICAgdGh1bWJfc3dpdGNoX2J0bl9jb250YWluZXIuZmluZCgnLnRodW1iLXByZXYtYXJyb3cnKS5oaWRlKCk7XHJcbiAgICAgICAgdGh1bWJfc3dpdGNoX2J0bl9jb250YWluZXIuZmluZCgnLnRodW1iLW5leHQtYXJyb3cnKS5oaWRlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy/lvZPpvKDmoIfmgqzmta7lm77niYfnmoTml7blgJnorqlzZWxlY3TmoYblpLHljrvnhKbngrlcclxuICAgICQodGh1bWJfbGlzdCkuZmluZCgnLm1hZ25pZnknKS5tb3VzZWVudGVyKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgJCgnc2VsZWN0JykuYmx1cigpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYodXNlQ2Fyb3VzZWxQaWNzRmVhdHVyZSkge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwocGFnZURhdGEuY2Fyb3VzZWxQaWNzKTtcclxuICAgICAgICBwYWdlRGF0YS5jYXJvdXNlbFBpY3MgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoJy50aHVtYi1zd2l0Y2gtYnRuLWNvbnRhaW5lciAudGh1bWItbmV4dC1hcnJvdycpLmNsaWNrKCk7XHJcbiAgICAgICAgfSwgMzAwMClcclxuICAgIH1cclxuICAgIC8v5Yid5aeL5pS+5aSn6ZWcXHJcbiAgICBpZihwYWdlRGF0YS51c2Vfem9vbSkge1xyXG4gICAgICAgICQoJy5qcXpvb20nKS5qcXpvb20oe1xyXG4gICAgICAgICAgICB6b29tV2lkdGg6IDQ1NCxcclxuICAgICAgICAgICAgem9vbUhlaWdodDogbWFnbmlmeV93cmFwLmhlaWdodCgpIC0gMixcclxuICAgICAgICAgICAgeE9mZnNldDogMjcsXHJcbiAgICAgICAgICAgIHRpdGxlOiBmYWxzZSxcclxuICAgICAgICAgICAgem9vbVR5cGU6ICdzdGFuZGFyZCcsXHJcbiAgICAgICAgICAgIGxlbnM6IHRydWUsXHJcbiAgICAgICAgICAgIHByZWxvYWRJbWFnZXM6IGZhbHNlLFxyXG4gICAgICAgICAgICBzaG93RWZmZWN0OiAnZmFkZWluJyxcclxuICAgICAgICAgICAgYWx3YXlzT246IGZhbHNlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIG1hZ25pZnlfcGljLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8v54K55Ye757yp55Wl5Zu+5YiH5o2iXHJcbiAgICAgICAgdGh1bWJfbGlzdC5kZWxlZ2F0ZSgnLnZpZXdwb3J0IGltZywgLnZpZGVvX3RodW1iLWNvbnRhaW5lciBpbWcsIC52aWRlb190aHVtYi1jb250YWluZXIgc3BhbicsICdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYoJCh0aGlzKS5wYXJlbnQoKS5hdHRyKCdpZCcpICYmICgkKHRoaXMpLnBhcmVudCgpLmF0dHIoJ2lkJykgPT0gJ3ZpZGVvLXRodW1iJykpe1xyXG5cclxuICAgICAgICAgICAgICAgIG1hZ25pZnlfdmlkZW9fY29udGFpbmVyLnNob3coKTtcclxuICAgICAgICAgICAgICAgIG1hZ25pZnlfcGljLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICQoJy50aHVtYi1uZXh0LWFycm93JykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgJCgnLnRodW1iLXByZXYtYXJyb3cnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICBzZXRWaWRlbygkKFwiLmZvci12aWRlby1zcmNcIikudmFsKCkpO1xyXG5cclxuICAgICAgICAgICAgICAgIHRodW1iX2xpc3QuZmluZCgnLnpvb21UaHVtYicpLnJlbW92ZUNsYXNzKCd6b29tVGh1bWJBY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50KCkuYWRkQ2xhc3MoJ3pvb21UaHVtYkFjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgJCgnLnZpZGVvX3RodW1iLWNvbnRhaW5lciBhJykuYWRkQ2xhc3MoJ3pvb21UaHVtYkFjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgbWFnbmlmeV92aWRlb1swXS5wbGF5KCk7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnNob3dfY29sb3IoKTtcclxuXHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgdmFyIHNyYyA9IHRodW1iX2xpc3QuZmluZCgnYS56b29tVGh1bWIuem9vbVRodW1iQWN0aXZlJykuZmluZCgnaW1nJykuYXR0cignc3JjJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIga2NvbG9yID0gdGh1bWJfbGlzdC5maW5kKCdhLnpvb21UaHVtYi56b29tVGh1bWJBY3RpdmUnKS5wYXJlbnQoKS5hdHRyKCdrY29sb3InKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKFwiLnRodW1iLWFjdGl2ZVwiKS5hdHRyKCdzcmMnLCBzcmMpO1xyXG4gICAgICAgICAgICAgICAgJChcIi50aHVtYi1hY3RpdmVcIikuYXR0cigna2NvbG9yJywga2NvbG9yKTtcclxuXHJcbiAgICAgICAgICAgICAgICBtYWduaWZ5X3ZpZGVvX2NvbnRhaW5lci5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICBtYWduaWZ5X3BpYy5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAkKCcudGh1bWItbmV4dC1hcnJvdycpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICQoJy50aHVtYi1wcmV2LWFycm93Jykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgc2V0TWFnbmlmeSgkKHRoaXMpLmF0dHIoJ2RhdGEtbWFnbmlmeScpKTtcclxuICAgICAgICAgICAgICAgIHRodW1iX2xpc3QuZmluZCgnLnpvb21UaHVtYicpLnJlbW92ZUNsYXNzKCd6b29tVGh1bWJBY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50KCkuYWRkQ2xhc3MoJ3pvb21UaHVtYkFjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgJCgnLnZpZGVvX3RodW1iLWNvbnRhaW5lciBhJykucmVtb3ZlQ2xhc3MoJ3pvb21UaHVtYkFjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5zaG93X2NvbG9yKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYodHlwZW9mKHRodW1iX2xpc3QuZmluZCgnI3RodW1ibGlzdCcpLmF0dHIoJ2RhdGEtaW1nLWNsaWNrZWQnKSkgPT0gXCJ1bmRlZmluZWRcIil7XHJcbiAgICAgICAgICAgICAgICAgICAgdGh1bWJfbGlzdC5maW5kKCcjdGh1bWJsaXN0JykuYXR0cignZGF0YS1pbWctY2xpY2tlZCcsdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgbWFnbmlmeV92aWRlb19saXN0ZW5lci5wYXVzZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmKHVzZUNhcm91c2VsUGljc0ZlYXR1cmUpIHtcclxuICAgICAgICAgICAgJCgnLm1hZ25pZnknKS5tb3VzZWVudGVyKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmKHBhZ2VEYXRhLmNhcm91c2VsUGljcyA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHBhZ2VEYXRhLmNhcm91c2VsUGljcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFnZURhdGEuY2Fyb3VzZWxQaWNzID0gMDtcclxuICAgICAgICAgICAgICAgICAgICByZW1vdmVDYXJvdXNlbEJ5SG92ZXIgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAkKCcubWFnbmlmeScpLm1vdXNlbGVhdmUoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChwYWdlRGF0YS5jYXJvdXNlbFBpY3MpXHJcbiAgICAgICAgICAgICAgICBpZihyZW1vdmVDYXJvdXNlbEJ5SG92ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICBwYWdlRGF0YS5jYXJvdXNlbFBpY3MgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJy50aHVtYi1zd2l0Y2gtYnRuLWNvbnRhaW5lciAudGh1bWItbmV4dC1hcnJvdycpLmNsaWNrKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMzAwMClcclxuICAgICAgICAgICAgICAgICAgICByZW1vdmVDYXJvdXNlbEJ5SG92ZXIgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICAkKCcubWFnbmlmeScpLmhvdmVyKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCgnLnRodW1iLXByZXYtYXJyb3cnKS5zaG93KCk7XHJcbiAgICAgICAgICAgICQoJy50aHVtYi1uZXh0LWFycm93Jykuc2hvdygpO1xyXG4gICAgICAgICAgICBpZigkKCcubWFnbmlmeS12aWRlby1jb250YWluZXInKS5pcygnOnZpc2libGUnKSkge1xyXG4gICAgICAgICAgICAgICAgaWYoJCgnI21hZ25pZnktdmlkZW8nKVswXS5wYXVzZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcudmlkZW8tY29udHJvbGxlcicpLnJlbW92ZUNsYXNzKCdwYXVzZScpXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnZpZGVvLWNvbnRyb2xsZXInKS5hZGRDbGFzcygncGxheScpXHJcbiAgICAgICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnZpZGVvLWNvbnRyb2xsZXInKS5yZW1vdmVDbGFzcygncGxheScpXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnZpZGVvLWNvbnRyb2xsZXInKS5hZGRDbGFzcygncGF1c2UnKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJCgnLnZpZGVvLWNvbnRyb2xsZXInKS5zaG93KClcclxuICAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnLnZpZGVvLWNvbnRyb2xsZXInKS5oaWRlKClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcudmlkZW8tY29udHJvbGxlcicpLmhpZGUoKVxyXG4gICAgICAgICAgICAkKCcudGh1bWItcHJldi1hcnJvdycpLmhpZGUoKTtcclxuICAgICAgICAgICAgJCgnLnRodW1iLW5leHQtYXJyb3cnKS5oaWRlKCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICB0aHVtYl9saXN0LmRlbGVnYXRlKCcudmlkZW8tY29udHJvbGxlcicsICdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYoJCgnI21hZ25pZnktdmlkZW8nKVswXS5wYXVzZWQpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ3BsYXknKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ3BhdXNlJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcjbWFnbmlmeS12aWRlbycpWzBdLnBsYXkoKTtcclxuICAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygncGF1c2UnKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ3BsYXknKTtcclxuICAgICAgICAgICAgICAgICQoJyNtYWduaWZ5LXZpZGVvJylbMF0ucGF1c2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGh1bWJfc3dpdGNoX2J0bl9jb250YWluZXIuZGVsZWdhdGUoJy50aHVtYi1wcmV2LWFycm93JywgJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcudmlkZW8tY29udHJvbGxlcicpLmhpZGUoKVxyXG4gICAgICAgICAgICBpZighJCgnLnZpZXdwb3J0OnZpc2libGUnKS5pcygnOmFuaW1hdGVkJykpe1xyXG4gICAgICAgICAgICAgICAgdmFyIGN1cnJJbWcgPSB0aHVtYl9saXN0LmZpbmQoJ2Euem9vbVRodW1iLnpvb21UaHVtYkFjdGl2ZTp2aXNpYmxlJykuZmluZCgnaW1nJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgaWR4ID0gdGh1bWJfbGlzdC5maW5kKCcjdGh1bWJsaXN0OnZpc2libGUnKS5maW5kKCdsaTp2aXNpYmxlJykuaW5kZXgoY3VyckltZy5jbG9zZXN0KCdsaScpKTtcclxuICAgICAgICAgICAgICAgIHZhciBzaG93X2Fycm93ID0gdGh1bWJfbGlzdC5maW5kKCcudG9wLWFycmF3JykuaXMoJzp2aXNpYmxlJykgfHwgdGh1bWJfbGlzdC5maW5kKCcucHJldi1hcnJhdycpLmlzKCc6dmlzaWJsZScpO1xyXG4gICAgICAgICAgICAgICAgdmFyIG5leHRJbWc7XHJcbiAgICAgICAgICAgICAgICBpZihpZHggPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHNob3dfYXJyb3cpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGh1bWJfbGlzdC5maW5kKCcudG9wLWFycmF3JykuY2xpY2soKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGh1bWJfbGlzdC5maW5kKCcucHJldi1hcnJhdycpLmNsaWNrKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRJbWcgPSB0aHVtYl9saXN0LmZpbmQoJyN0aHVtYmxpc3Q6dmlzaWJsZScpLmNoaWxkcmVuKCdsaTp2aXNpYmxlJykuZXEoMCkuZmluZCgnaW1nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZpZXdwb3J0TGVuID0gdGh1bWJfbGlzdC5maW5kKCcjdGh1bWJsaXN0OnZpc2libGUnKS5jaGlsZHJlbignbGk6dmlzaWJsZScpLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dEltZyA9IHRodW1iX2xpc3QuZmluZCgnI3RodW1ibGlzdDp2aXNpYmxlJykuY2hpbGRyZW4oJ2xpOnZpc2libGUnKS5lcSh2aWV3cG9ydExlbiAtIDEpLmZpbmQoJ2ltZycpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaWR4IDwgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vZm9yIHZpZGVvKHZpZGVvIGlkeCA9PSAtMSlcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdmlld3BvcnRMZW4gPSB0aHVtYl9saXN0LmZpbmQoJyN0aHVtYmxpc3Q6dmlzaWJsZScpLmNoaWxkcmVuKCdsaTp2aXNpYmxlJykubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIG5leHRJbWcgPSB0aHVtYl9saXN0LmZpbmQoJyN0aHVtYmxpc3Q6dmlzaWJsZScpLmNoaWxkcmVuKCdsaTp2aXNpYmxlJykuZXEodmlld3BvcnRMZW4gLSAxKS5maW5kKCdpbWcnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZih0aHVtYl9saXN0LmZpbmQoJy52aWV3cG9ydDp2aXNpYmxlJykuaGFzQ2xhc3MoJ2J0bi1zaG93JykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGh1bWJfbGlzdC5maW5kKCcudG9wLWFycmF3JykuY2xpY2soKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV4dEltZyA9IHRodW1iX2xpc3QuZmluZCgnI3RodW1ibGlzdDp2aXNpYmxlJykuY2hpbGRyZW4oJ2xpOnZpc2libGUnKS5lcShpZHggLSAxKS5maW5kKCdpbWcnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG5leHRJbWcuY2xpY2soKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRodW1iX3N3aXRjaF9idG5fY29udGFpbmVyLmRlbGVnYXRlKCcudGh1bWItbmV4dC1hcnJvdycsICdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCgnLnZpZGVvLWNvbnRyb2xsZXInKS5oaWRlKClcclxuICAgICAgICAgICAgaWYoISQoJy52aWV3cG9ydDp2aXNpYmxlJykuaXMoJzphbmltYXRlZCcpKXtcclxuICAgICAgICAgICAgICAgIHZhciBjdXJySW1nID0gdGh1bWJfbGlzdC5maW5kKCdhLnpvb21UaHVtYi56b29tVGh1bWJBY3RpdmU6dmlzaWJsZScpLmZpbmQoJ2ltZycpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGlkeCA9IHRodW1iX2xpc3QuZmluZCgnI3RodW1ibGlzdDp2aXNpYmxlJykuZmluZCgnbGk6dmlzaWJsZScpLmluZGV4KGN1cnJJbWcuY2xvc2VzdCgnbGknKSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgbmV4dEl0ZW0gPSB0aHVtYl9saXN0LmZpbmQoJyN0aHVtYmxpc3Q6dmlzaWJsZScpLmNoaWxkcmVuKCdsaTp2aXNpYmxlJykuZXEoaWR4ICsgMSk7XHJcbiAgICAgICAgICAgICAgICBpZighbmV4dEl0ZW0ubGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgICAgICBuZXh0SXRlbSA9IHRodW1iX2xpc3QuZmluZCgnI3RodW1ibGlzdDp2aXNpYmxlJykuY2hpbGRyZW4oJ2xpOnZpc2libGUnKS5lcSgwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBuZXh0SW1nID0gbmV4dEl0ZW0uZmluZCgnaW1nJyk7XHJcbiAgICAgICAgICAgICAgICBuZXh0SW1nLmNsaWNrKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvL+e8qeeVpeWbvui9ruaSrVxyXG4gICAgdGh1bWJfbGlzdC5maW5kKCcuY2Fyb3VzZWw6ZXEoMCknKS5jYXJvdXNlbCh7XHJcbiAgICAgICAgZGlyZWN0aW9uIDogcGFnZURhdGEudGh1bWJMYXlvdXQsXHJcbiAgICAgICAgYnRuU3BhY2UgOiAnMTVweCdcclxuICAgIH0pO1xyXG4gICAgcHV0VmlkZW9Mb2NhdGlvbigpO1xyXG59O1xyXG5cclxudmFyIHNlbGVjdGVkQ29sb3IgPSAkKFwiI2dvb2RzX2Zvcm1cIikuZmluZChcIi5waXMtY29sb3ItYm94XCIpLmZpbmQoJy5waXMtY29sb3ItYSBkdC5zZWxlY3RlZCcpLnBhcmVudCgpLmF0dHIoXCJkYXRhLWt2YWx1ZVwiKTtcclxuaWYgKHNlbGVjdGVkQ29sb3IgIT0gdW5kZWZpbmVkICkge1xyXG4gICAgaWYocGFnZURhdGEudGh1bWJQaWN0dXJlRGF0YSAmJiBwYWdlRGF0YS50aHVtYlBpY3R1cmVEYXRhLnRyaW0oKS5sZW5ndGggPiAwKXtcclxuICAgICAgICB2YXIgdGh1bWJQaWN0dXJlRGF0YSA9IGV2YWwoXCIoXCIgKyBwYWdlRGF0YS50aHVtYlBpY3R1cmVEYXRhICsgXCIpXCIpO1xyXG4gICAgICAgIHZhciBzaG9wQnlDb2xvckltYWdlcyA9IHRodW1iUGljdHVyZURhdGEuc2hvcEJ5Q29sb3JJbWFnZXM7XHJcbiAgICAgICAgdmFyIGRlZmF1bHRDb2xvciA9IHRodW1iUGljdHVyZURhdGEuZGVmYXVsdENvbG9yO1xyXG4gICAgICAgIGlmIChzaG9wQnlDb2xvckltYWdlc1tzZWxlY3RlZENvbG9yXSAhPSB1bmRlZmluZWQgJiYgKGRlZmF1bHRDb2xvciAhPSBudWxsICYmIGRlZmF1bHRDb2xvci50b0xvd2VyQ2FzZSgpICE9IHNlbGVjdGVkQ29sb3IpKSB7XHJcbiAgICAgICAgICAgIHZhciBtdWx0aWNvbG9yQ29weXJpZ2h0ID0gcGFnZURhdGEubXVsdGljb2xvckNvcHlyaWdodDtcclxuICAgICAgICAgICAgdGh1bWJfbGlzdC5maW5kKCcuZ3Rjb3B5cmlnaHQnKS5odG1sKG11bHRpY29sb3JDb3B5cmlnaHQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxudmFyIGFkZF9jdXN0b21fcGljcyA9IGZ1bmN0aW9uKGtuYW1lLCBpbWdTcmMpIHtcclxuICAgIHRodW1iX2xpc3QuZmluZCgnLmN1c3RvbV9pbWcnKS5yZW1vdmUoKVxyXG4gICAgdmFyIGNhcm91c2VsID0gdGh1bWJfbGlzdC5maW5kKCcuY2Fyb3VzZWwnKTtcclxuXHJcbiAgICB2YXIgaW1nQWx0ID0gdHlwZW9mICQoXCIjbWFnbmlmeV9waWNcIikuYXR0cihcImFsdFwiKSA9PSBcInVuZGVmaW5lZFwiID8gXCJcIiA6ICQoXCIjbWFnbmlmeV9waWNcIikuYXR0cihcImFsdFwiKTtcclxuICAgIHZhciBjdXN0b21VbCA9IFwiPHVsIGNsYXNzPSdjdXN0b21faW1nIHRodW1iY29udGVudCc+XCJcclxuICAgICsgJzxsaSBjdXN0b21faW1nPVwiJyArIGtuYW1lICsgJ1wiPidcclxuICAgICsgJzxhIGNsYXNzPVwiem9vbVRodW1iXCIgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIiByZWw9XCJ7Z2FsbGVyeTogXFwnZ2FsMVxcJywgc21hbGxpbWFnZTogXFwnICcgKyBpbWdTcmMgKyAnXFwnLGxhcmdlaW1hZ2U6IFxcJycgKyBpbWdTcmMgKyAnXFwnfVwiPidcclxuICAgICsgJzxpbWcgZGF0YS10eXBlPVwiY3VzdG9tX2ltYWdlXCIgc3JjPVwiJyArIGltZ1NyYyArICdcIiBhbHQ9XCInICsgaW1nQWx0ICsgICdcIj4nXHJcbiAgICArICc8L2E+J1xyXG4gICAgKyAnPC9saT4nXHJcbiAgICArICc8L3VsPidcclxuXHJcbiAgICB2YXIgdmlld3BvcnQgPSBjYXJvdXNlbC5maW5kKCcudmlld3BvcnQnKVxyXG5cclxuICAgIGNhcm91c2VsLmFkZENsYXNzKCd3aXRoLWN1c3RvbS1pbWcnKVxyXG4gICAgdmlld3BvcnQuYmVmb3JlKGN1c3RvbVVsKVxyXG5cclxuICAgIGNhcm91c2VsLmZpbmQoJy5jdXN0b21faW1nIGltZycpLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgJCh0aGlzKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIGltYWdlUHJlbG9hZCA9IG1hZ25pZnlfcGljLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoXCIuaW1hZ2VQcmVsb2FkXCIpXHJcbiAgICAgICAgICAgIGltYWdlUHJlbG9hZC5zaG93KCkuY3NzKFwidmlzaWJpbGl0eVwiLCAndmlzaWJsZScpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLmxvYWQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICBpbWFnZVByZWxvYWQuaGlkZSgpLmNzcygndmlzaWJpbGl0eScsICdoaWRkZW4nKTtcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIHZhciBpbWdTcmMgPSAkKHRoaXMpLmF0dHIoJ3NyYycpXHJcbiAgICAgICAgICAgIHNldE1hZ25pZnkoaW1nU3JjKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGh1bWJfbGlzdC5maW5kKCcuem9vbVRodW1iJykucmVtb3ZlQ2xhc3MoJ3pvb21UaHVtYkFjdGl2ZScpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmFkZENsYXNzKCd6b29tVGh1bWJBY3RpdmUnKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICgkKHRoaXMpLmlzKCc6dmlzaWJsZScpKSB7XHJcbiAgICAgICAgICAgICQodGhpcykuY2xpY2soKVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcblxyXG4gICAgLy8g6YeN5paw57uR5a6aY2Fyb3VzZWzkuovku7bvvIzorqHnrpfmmL7npLrmlbDph49cclxuICAgICQodmlld3BvcnQpLmZpbmQoJ2xpIGltZycpLnVuYmluZCgpO1xyXG4gICAgdGh1bWJfbGlzdC5maW5kKCcuY2Fyb3VzZWw6ZXEoMCknKS5jYXJvdXNlbCh7XHJcbiAgICAgICAgZGlyZWN0aW9uIDogcGFnZURhdGEudGh1bWJMYXlvdXQsXHJcbiAgICAgICAgYnRuU3BhY2UgOiAnMTVweCdcclxuICAgIH0pO1xyXG59XHJcblxyXG52YXIgY2hhbmdlX3BpY3MgPSBmdW5jdGlvbihzZWxlY3RlZCkge1xyXG4gICAgJCgnI3RodW1ibGlzdCBsaVtjb2xvcl0nKS5yZW1vdmUoKTtcclxuICAgIHZhciBjb2xvciA9IHNlbGVjdGVkLmNvbG9yO1xyXG4gICAgdmFyIGtjb2xvciA9IHNlbGVjdGVkLmtjb2xvcjtcclxuICAgIHZhciByZ2IgPSBzZWxlY3RlZC5yZ2I7XHJcbiAgICB2YXIgdHJpbSA9IHNlbGVjdGVkLnRyaW07XHJcbiAgICB2YXIgdXJscyA9IFtdO1xyXG4gICAgdmFyIG11bHRpY29sb3JDb3B5cmlnaHQgPSBwYWdlRGF0YS5tdWx0aWNvbG9yQ29weXJpZ2h0O1xyXG4gICAgdmFyIGJhc2VQaWN0dXJlQ29weXJpZ2h0ID0gcGFnZURhdGEuYmFzZVBpY3R1cmVDb3B5cmlnaHQ7XHJcbiAgICBpZihwYWdlRGF0YS50aHVtYlBpY3R1cmVEYXRhICYmIHBhZ2VEYXRhLnRodW1iUGljdHVyZURhdGEudHJpbSgpLmxlbmd0aCA+IDApe1xyXG4gICAgICAgIHZhciB0aHVtYlBpY3R1cmVEYXRhID0gZXZhbChcIihcIiArIHBhZ2VEYXRhLnRodW1iUGljdHVyZURhdGEgKyBcIilcIik7XHJcbiAgICAgICAgdmFyIHNob3BCeUNvbG9ySW1hZ2VzID0gdGh1bWJQaWN0dXJlRGF0YS5zaG9wQnlDb2xvckltYWdlcztcclxuICAgICAgICB2YXIgZGVmYXVsdENvbG9yID0gdGh1bWJQaWN0dXJlRGF0YS5kZWZhdWx0Q29sb3I7XHJcbiAgICAgICAgdmFyIGRlZmF1bHRDb2xvckVuID0gdGh1bWJQaWN0dXJlRGF0YS5kZWZhdWx0Q29sb3JFbjtcclxuICAgICAgICB2YXIgdGh1bWJDb25maWcgPSB0aHVtYlBpY3R1cmVEYXRhLnRodW1iQ29uZmlnO1xyXG4gICAgICAgIHZhciByZWFySW1hZ2VzID0gdGh1bWJQaWN0dXJlRGF0YS5yZWFySW1hZ2VzO1xyXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBzaG9wQnlDb2xvckltYWdlcykge1xyXG4gICAgICAgICAgICBpZiAoa2V5ID09IGtjb2xvciAmJiBrZXkgIT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgdXJscyA9IHNob3BCeUNvbG9ySW1hZ2VzW2tleV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8v6K+l6aKc6Imy5pyJ5aSa6Imy5Zu+5bCx5pi+56S66IOM6Z2i5Zu+XHJcbiAgICAgICAgaWYodXJscy5sZW5ndGggPj0gMSl7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGtleUNvbG9yIGluIHJlYXJJbWFnZXMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChrZXlDb2xvciA9PSBrY29sb3IgJiYga2V5Q29sb3IgIT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHVybHMucHVzaChyZWFySW1hZ2VzW2tleUNvbG9yXSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgdmFyIGxhbmdfc3VmZml4ID0gd2ViRGF0YS5sYW5nX3N1ZmZpeCB8fCBcIlwiXHJcbiAgICBpZighIX5bJ19hdScsICdfdWsnXS5pbmRleE9mKGxhbmdfc3VmZml4KSAmJiBkZWZhdWx0Q29sb3IpIHtcclxuICAgICAgICBjb2xvciA9IGNvbG9yLnJlcGxhY2UoL2NvbG9yL2csICdjb2xvdXInKTtcclxuICAgICAgICBjb2xvciA9IGNvbG9yLnJlcGxhY2UoL0NvbG9yL2csICdDb2xvdXInKTtcclxuICAgICAgICBkZWZhdWx0Q29sb3IgPSBkZWZhdWx0Q29sb3IucmVwbGFjZSgvY29sb3IvZywgJ2NvbG91cicpO1xyXG4gICAgICAgIGRlZmF1bHRDb2xvciA9IGRlZmF1bHRDb2xvci5yZXBsYWNlKC9Db2xvci9nLCAnQ29sb3VyJyk7XHJcbiAgICB9XHJcbiAgICB2YXIgdGh1bWJsaXN0ID0gdGh1bWJfbGlzdC5maW5kKCcjdGh1bWJsaXN0Jyk7XHJcbiAgICB2YXIgaXNTaG93ID0gdGh1bWJsaXN0LmlzKCc6dmlzaWJsZScpO1xyXG4gICAgaWYgKCFpc1Nob3cpIHtcclxuICAgICAgICB0aHVtYmxpc3QgPSB0aHVtYl9saXN0LmZpbmQoJy5uYXJyb3ctdGh1bWJsaXN0Jyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHVybHMubGVuZ3RoICE9IDApIHtcclxuICAgICAgICB2YXIgbmV3SXRlbXMgPSAnJztcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHVybHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIHVybCA9IHVybHNbaV07XHJcbiAgICAgICAgICAgIGlmKHRocmVlTGV2ZWxJbWcpe1xyXG4gICAgICAgICAgICAgICAgaW1nUHJlZml4ID0gd2ViRGF0YS5QSUNfUEFUSCArIHdlYkRhdGEuZG9tYWluLnRvTG93ZXJDYXNlKCkgKyAnLycgKyB0aHVtYkNvbmZpZy5wICsgJy8nO1xyXG4gICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpbWdQcmVmaXggPSB3ZWJEYXRhLlBJQ19QQVRIICsgd2ViRGF0YS5kb21haW4udG9Mb3dlckNhc2UoKSArICcvJyArIHRodW1iQ29uZmlnLmQgKyAnLyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc3BlY2lhbFRodW1iQ29uZiA9IHRodW1iUGljdHVyZURhdGEuc3BlY2lhbFRodW1iQ29uZjtcclxuICAgICAgICAgICAgaWYoc3BlY2lhbFRodW1iQ29uZi5zNDAwICE9IHVuZGVmaW5lZCAmJiBzcGVjaWFsVGh1bWJDb25mLnM0MDApe1xyXG4gICAgICAgICAgICAgICAgaW1nUHJlZml4ID0gd2ViRGF0YS5QSUNfUEFUSCArIHNwZWNpYWxUaHVtYkNvbmYuczQwMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgc21hbGxfc3JjID0gZ2V0QXBpSW1hZ2VVcmwocmdiLCB0cmltLCBpbWdQcmVmaXggLCB1cmwpO1xyXG4gICAgICAgICAgICBpbWdQcmVmaXggPSB3ZWJEYXRhLlBJQ19QQVRIICsgd2ViRGF0YS5kb21haW4udG9Mb3dlckNhc2UoKSArICcvJyArIHRodW1iQ29uZmlnLm8gKyAnLyc7XHJcbiAgICAgICAgICAgIGlmKHNwZWNpYWxUaHVtYkNvbmYubzExNDAgIT0gdW5kZWZpbmVkICYmIHNwZWNpYWxUaHVtYkNvbmYubzExNDApe1xyXG4gICAgICAgICAgICAgICAgaW1nUHJlZml4ID0gd2ViRGF0YS5QSUNfUEFUSCArIHNwZWNpYWxUaHVtYkNvbmYubzExNDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGxhcmdlX3NyYyA9IGdldEFwaUltYWdlVXJsKHJnYiwgdHJpbSwgaW1nUHJlZml4ICwgdXJsKTtcclxuICAgICAgICAgICAgdmFyIF90aHVtYkNvbmZpZ1NtYWxsID0gdGh1bWJDb25maWcuaDtcclxuICAgICAgICAgICAgaWYocGFnZURhdGEuaXNQZXJzb25hbGl6ZWQgIT0gdW5kZWZpbmVkICYmIHBhZ2VEYXRhLmlzUGVyc29uYWxpemVkKSB7XHJcbiAgICAgICAgICAgICAgICBfdGh1bWJDb25maWdTbWFsbCA9IHRodW1iQ29uZmlnLnY7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHRodW1iX3NyYyA9IHdlYkRhdGEuUElDX1BBVEggKyBfdGh1bWJDb25maWdTbWFsbCArICcvJyArIHVybDtcclxuICAgICAgICAgICAgdmFyIGltZ0FsdCA9IHR5cGVvZiAkKFwiI21hZ25pZnlfcGljXCIpLmF0dHIoXCJhbHRcIikgPT0gXCJ1bmRlZmluZWRcIiA/IFwiXCIgOiAkKFwiI21hZ25pZnlfcGljXCIpLmF0dHIoXCJhbHRcIik7XHJcblxyXG4gICAgICAgICAgICBuZXdJdGVtcyArPSAnPGxpIGNvbG9yPVwiJyArIGNvbG9yICsgJ1wiIGtjb2xvcj1cIicgKyBrY29sb3IgKyAnXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+J1xyXG4gICAgICAgICAgICAgICAgKyAnPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKTtcIiByZWw9XCJ7Z2FsbGVyeTogXFwnZ2FsMVxcJywgc21hbGxpbWFnZTogXFwnICcgKyBzbWFsbF9zcmMgKyAnXFwnLGxhcmdlaW1hZ2U6IFxcJycgKyBsYXJnZV9zcmMgKyAnXFwnfVwiPidcclxuICAgICAgICAgICAgICAgICsgJzxpbWcgc3JjPVwiJyArIHRodW1iX3NyYyArICdcImRhdGEtbWFnbmlmeT1cIicgKyBzbWFsbF9zcmMgKyAnXCIgY29sb3I9XCInICsgY29sb3IgKyAnXCIga2NvbG9yPVwiJyArIGtjb2xvciArICdcIiBhbHQ9XCInICsgaW1nQWx0ICsgICdcIj4nXHJcbiAgICAgICAgICAgICAgICArICc8L2E+J1xyXG4gICAgICAgICAgICAgICAgKyAnPC9saT4nO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy/lpoLmnpwgc2hvcGJ5Y29sb3Ig5Zu+54mH6LaF6L+H5Lik5bygLCDlj6rlsZXnpLrlpJroibLlm77kuI3lsZXnpLpwaG90b+WbvijljIXlkKvog4zpnaLlm74pXHJcbiAgICAgICAgaWYgKHVybHMubGVuZ3RoID49IFNIT1BfQllfQ09MT1JfUElDX05VTSl7XHJcbiAgICAgICAgICAgIHRodW1ibGlzdC5maW5kKCdsaScpLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmhpZGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmKHVzZUNhcm91c2VsUGljc0ZlYXR1cmUpIHtcclxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocGFnZURhdGEuY2Fyb3VzZWxQaWNzKTtcclxuICAgICAgICAgICAgICAgIHBhZ2VEYXRhLmNhcm91c2VsUGljcyA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcudGh1bWItc3dpdGNoLWJ0bi1jb250YWluZXIgLnRodW1iLW5leHQtYXJyb3cnKS5jbGljaygpO1xyXG4gICAgICAgICAgICAgICAgfSwgMzAwMClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRodW1ibGlzdC5maW5kKCdsaScpLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnNob3coKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmKHVzZUNhcm91c2VsUGljc0ZlYXR1cmUpIHtcclxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocGFnZURhdGEuY2Fyb3VzZWxQaWNzKTtcclxuICAgICAgICAgICAgICAgIHBhZ2VEYXRhLmNhcm91c2VsUGljcyA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8v5qC55o2uY29sb3JLZXnmm7TmlrAuY2Fyb3VzZWznmoRodG1sXHJcbiAgICAgICAgdmFyIG9sZEl0ZW1zID0gdGh1bWJsaXN0Lmh0bWwoKTtcclxuICAgICAgICB0aHVtYmxpc3QuaHRtbChuZXdJdGVtcyArIG9sZEl0ZW1zKTtcclxuICAgICAgICBuZXdJdGVtcyA9IHRodW1ibGlzdC5maW5kKCdsaVtjb2xvcl0nKTtcclxuICAgICAgICB2YXIgbmV3SXRlbXNMZW5ndGggPSBuZXdJdGVtcy5sZW5ndGg7XHJcbiAgICAgICAgdmFyIGhhc0xvYWROdW0gPSAwO1xyXG5cclxuICAgICAgICBuZXdJdGVtcy5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7XHJcbiAgICAgICAgICAgIHZhciB0aHVtYkltZyA9ICQodGhpcykuZmluZCgnaW1nJyk7XHJcbiAgICAgICAgICAgIHZhciBpbWFnZSA9IG5ldyBJbWFnZSgpO1xyXG4gICAgICAgICAgICBpbWFnZS5zcmMgPSB0aHVtYkltZy5hdHRyKCdkYXRhLW1hZ25pZnknKTtcclxuICAgICAgICAgICAgaWYgKCFpbWFnZS5jb21wbGV0ZSkge1xyXG4gICAgICAgICAgICAgICAgbWFnbmlmeV9waWMucGFyZW50KCkucGFyZW50KCkucGFyZW50KCkuZmluZChcIi5pbWFnZVByZWxvYWRcIikuc2hvdygpLmNzcyhcInZpc2liaWxpdHlcIiwgJ3Zpc2libGUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aHVtYkltZy5sb2FkKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoJ2xpJykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5jbG9zZXN0KCdhJykuYWRkQ2xhc3MoJ3pvb21UaHVtYicpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGluZGV4ID09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjY29sb3JfdHlwZScpLmh0bWwoY29sb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRodW1iX2xpc3QuZmluZCgnLmd0Y29weXJpZ2h0JykuaHRtbChtdWx0aWNvbG9yQ29weXJpZ2h0KTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjbXVsdGlDb2xvckxvZ28nKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYobmVlZENsaWNrICE9IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHVtYkltZy5jbGljaygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBuZWVkQ2xpY2sgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjbWFnbmlmeS12aWRlb1wiKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCcuaW1hZ2VQcmVsb2FkJykuaGlkZSgpLmNzcygndmlzaWJpbGl0eScsICdoaWRkZW4nKTtcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaGFzTG9hZE51bSArKztcclxuICAgICAgICAgICAgICAgIGlmKG5ld0l0ZW1zTGVuZ3RoID09IGhhc0xvYWROdW0pe1xyXG4gICAgICAgICAgICAgICAgICAgIC8vYWxsIGVsZW1lbnRzIGFyZSBuZXcgLCBzbyBiaW5nIGV2ZW50IHdpbGwgaGF2ZSBubyBwcm9ibGVtXHJcbiAgICAgICAgICAgICAgICAgICAgLy/ph43mlrDnu5Hlrprmu5rliqjkuovku7ZcclxuICAgICAgICAgICAgICAgICAgICB0aHVtYl9saXN0LmZpbmQoJy5jYXJvdXNlbDplcSgwKScpLmNhcm91c2VsKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uIDogcGFnZURhdGEudGh1bWJMYXlvdXQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ0blNwYWNlIDogJzE1cHgnXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBwdXRWaWRlb0xvY2F0aW9uKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB2YXIgc3R5bGVzX2Zvcm0gPSAkKCcjZ29vZHNfZm9ybScpO1xyXG4gICAgICAgIHZhciBjb2xvckx1bXAgPSBzdHlsZXNfZm9ybS5maW5kKCcucGlzLWNvbG9yLWJveCcpO1xyXG4gICAgICAgIHZhciBzZWxlY3RlZENvbG9yID0gc3R5bGVzX2Zvcm0uZmluZCgnI19jb2xvcicpLmZpbmQoJ29wdGlvbjpzZWxlY3RlZCcpLmF0dHIoJ2t2YWx1ZScpO1xyXG4gICAgICAgIHZhciBjb2xvckx1bXBDb2xvciA9ICQoJy5zZWxlY3RlZF90aXAnKS50ZXh0KCk7XHJcbiAgICAgICAgdGh1bWJfbGlzdC5maW5kKCcuZ3Rjb3B5cmlnaHQnKS5odG1sKGJhc2VQaWN0dXJlQ29weXJpZ2h0KTtcclxuICAgICAgICAvLyAkKCcjY29sb3JfdHlwZScpLmh0bWwoZGVmYXVsdENvbG9yKTtcclxuICAgICAgICAkKCcjbXVsdGlDb2xvckxvZ28nKS5oaWRlKCk7XHJcbiAgICAgICAgaWYoc2hvcEJ5Q29sb3JJbWFnZXMubGVuZ3RoICE9IDApe1xyXG4gICAgICAgICAgICBpZighJCgnLnZpZGVvX3RodW1iLWNvbnRhaW5lciBhJykuaGFzQ2xhc3MoJ3pvb21UaHVtYkFjdGl2ZScpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBkb24ndCBrbm93IHdoeSBidXQgaXQgd29ya3NcclxuICAgICAgICAgICAgICAgIC8vIHRodW1ibGlzdC5maW5kKCcuem9vbVRodW1iOmVxKDApJykuY2xpY2soKTsgXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vY2xpY2sgc2hpcEluMjRocnNDb2xvcnMgaGlkZSB0aHVtYmxpc3QgbGksIHRoZW4gY2xpY2sgYWxsQ29sb3JcclxuICAgICAgICAgICAgdGh1bWJsaXN0LmZpbmQoJ2xpJykuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykuc2hvdygpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHZhciBvbGRIdG1sID0gdGh1bWJsaXN0Lmh0bWwoKTtcclxuICAgICAgICAgICAgdGh1bWJsaXN0LmVtcHR5KCkuaHRtbChvbGRIdG1sKTtcclxuICAgICAgICAgICAgdGh1bWJfbGlzdC5maW5kKCcuY2Fyb3VzZWw6ZXEoMCknKS5jYXJvdXNlbCgpO1xyXG5cclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgLy8gc2V0IHNob3duIGNvbG9yIHNlbGVjdGVkXHJcbiAgICAgICAgICAgIHZhciBpdGVtTGlzdCA9ICQoJyN0aHVtYmxpc3QnKTtcclxuICAgICAgICAgICAgdmFyIGlzU2hvdyA9IGl0ZW1MaXN0LmlzKCc6dmlzaWJsZScpO1xyXG4gICAgICAgICAgICBpZiAoIWlzU2hvdykge1xyXG4gICAgICAgICAgICAgICAgaXRlbUxpc3QgPSAkKCcubmFycm93LXRodW1ibGlzdCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciB0aHVtYkltZ3MgPSBpdGVtTGlzdC5maW5kKCdsaScpLmZpbmQoJ2EnKS5maW5kKCdpbWcnKTtcclxuICAgICAgICAgICAgdGh1bWJJbWdzLmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoa2NvbG9yICE9ICcnICYmICQoZWxlbWVudCkuYXR0cigna2NvbG9yJykgPT0ga2NvbG9yICYmICFjb2xvckx1bXAuaXMoJzp2aXNpYmxlJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLmNsaWNrKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5wYXJlbnQoKS5hZGRDbGFzcygnem9vbVRodW1iQWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2NvbG9yX3R5cGUnKS5odG1sKCQoZWxlbWVudCkuYXR0cignY29sb3InKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYmlnUGljdHVyZSA9ICQoJy56b29tUGFkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNyYyA9IGJpZ1BpY3R1cmUuZmluZCgnaW1nJykuYXR0cignc3JjJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQoZWxlbWVudCkuYXR0cignZGF0YS1tYWduaWZ5JykgPT0gc3JjICYmIHR5cGVvZiBzZWxlY3RlZENvbG9yID09IFwidW5kZWZpbmVkXCIgJiYgKGNvbG9yTHVtcENvbG9yID09IFwiXCIgfHwgdHlwZW9mIGNvbG9yTHVtcENvbG9yID09IFwidW5kZWZpbmVkXCIpICYmIHBhZ2VEYXRhLnJlc2l6ZUNvdW50ID09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoISQoJy52aWRlb190aHVtYi1jb250YWluZXIgYScpLmhhc0NsYXNzKCd6b29tVGh1bWJBY3RpdmUnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5wYXJlbnQoKS5hZGRDbGFzcygnem9vbVRodW1iQWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNjb2xvcl90eXBlJykuaHRtbCgkKGVsZW1lbnQpLmF0dHIoJ2NvbG9yJykpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRodW1iSW1ncy5lYWNoKGZ1bmN0aW9uIChpbmRleCwgZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCQoZWxlbWVudCkucGFyZW50KCkuaGFzQ2xhc3MoJ3pvb21UaHVtYkFjdGl2ZScpICYmIHBhZ2VEYXRhLnJlc2l6ZUNvdW50ID09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjY29sb3JfdHlwZScpLmh0bWwoJChlbGVtZW50KS5hdHRyKCdjb2xvcicpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRodW1iSW1ncy5lYWNoKGZ1bmN0aW9uIChpbmRleCwgZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGJpZ1BpY3R1cmUgPSAkKCcuem9vbVBhZCcpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHNyYyA9IGJpZ1BpY3R1cmUuZmluZCgnaW1nJykuYXR0cignc3JjJyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWRDb2xvciAhPSBcIlwiICYmIHR5cGVvZiBzZWxlY3RlZENvbG9yICE9IFwidW5kZWZpbmVkXCIgJiYgc2VsZWN0ZWRDb2xvciAhPSBkZWZhdWx0Q29sb3IgJiYgc2VsZWN0ZWRDb2xvciAhPSAkKCcjY29sb3JfdHlwZScpLmh0bWwoKSAmJiAkKGVsZW1lbnQpLmF0dHIoJ2RhdGEtbWFnbmlmeScpID09IHNyYyAmJiBwYWdlRGF0YS5yZXNpemVDb3VudCA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5wYXJlbnQoKS5hZGRDbGFzcygnem9vbVRodW1iQWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihkZWZhdWx0Q29sb3JFbiAmJiBrY29sb3IgPT0gZGVmYXVsdENvbG9yRW4udG9Mb3dlckNhc2UoKS5yZXBsYWNlKCcgJywgJ18nKSkge1xyXG4gICAgICAgICAgICB0aHVtYmxpc3QuZmluZCgnbGk6Zmlyc3QtY2hpbGQnKS5hdHRyKCdrY29sb3InLCBrY29sb3IpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHB1dFZpZGVvTG9jYXRpb24oKTtcclxuICAgIH1cclxufVxyXG5cclxudmFyIGdldEFwaUltYWdlVXJsID0gZnVuY3Rpb24ocmdiLCB0cmltLCBpbWdSb290LCB1cmwpIHtcclxuICAgIHZhciBpbWFnZVVybCA9ICcnO1xyXG4gICAgaWYocmdiID09ICcnfHwgdHJpbSA9PSAnJykge1xyXG4gICAgICAgIGltYWdlVXJsID0gaW1nUm9vdCArIHVybDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdmFyIGNvbG9yID0gZ2V0Q29sb3JIZXgocmdiKTtcclxuICAgICAgICB2YXIgdXJsQXJyYXkgPSB1cmwuc3BsaXQoJy8nKTtcclxuICAgICAgICBpZih1cmxBcnJheS5sZW5ndGggPj0gMikge1xyXG4gICAgICAgICAgICB1cmxBcnJheVsyXSA9IGNvbG9yICsgJ18nICsgdHJpbSArICdfJyArIHVybEFycmF5WzJdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpbWFnZVVybCA9IGltZ1Jvb3QgKyB1cmxBcnJheS5qb2luKCcvJyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaW1hZ2VVcmw7XHJcbn07XHJcblxyXG52YXIgZ2V0Q29sb3JIZXggPSBmdW5jdGlvbihjb2xvcil7XHJcbiAgICByZXR1cm4gJzB4ZmZmZmZmJztcclxuICAgIGlmKC9eKHJnYnxSR0IpLy50ZXN0KGNvbG9yKSl7XHJcbiAgICAgICAgdmFyIGFDb2xvciA9XHJcbiAgICAgICAgICAgIGNvbG9yLnJlcGxhY2UoLyg/Onx8cmdifFJHQnxcXCh8XFwpKSovZyxcIlwiKS5zcGxpdChcIixcIik7XHJcbiAgICAgICAgdmFyIHN0ckhleCA9IFwiMHhcIjtcclxuICAgICAgICBmb3IodmFyIGk9MDsgaTxhQ29sb3IubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICB2YXIgaGV4ID0gTnVtYmVyKGFDb2xvcltpXSkudG9TdHJpbmcoMTYpO1xyXG4gICAgICAgICAgICBpZihoZXggPT09IFwiMFwiKXtcclxuICAgICAgICAgICAgICAgIGhleCArPSBoZXg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc3RySGV4ICs9IGhleDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoc3RySGV4Lmxlbmd0aCAhPT0gOCl7XHJcbiAgICAgICAgICAgIHN0ckhleCA9IGNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc3RySGV4O1xyXG4gICAgfVxyXG59O1xyXG5cclxudmFyIHB1dFZpZGVvTG9jYXRpb24gPSBmdW5jdGlvbigpIHtcclxuICAgIHZhciBkZWZhdWx0X3Bob3RvX2xlbiA9IDU7XHJcbiAgICB2YXIgcHJvZHVjdF92aWRlbyA9IHRodW1iX2xpc3QuZmluZCgnI3Byb2R1Y3RfdmlkZW86dmlzaWJsZScpO1xyXG4gICAgaWYoIXByb2R1Y3RfdmlkZW8pe1xyXG4gICAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgdmFyIHBob3RvX2Nhcm91c2VsID0gcHJvZHVjdF92aWRlby5wYXJlbnRzKFwiLmNhcm91c2VsXCIpO1xyXG4gICAgdmFyIHZpZXdwb3J0ID0gcGhvdG9fY2Fyb3VzZWwuY2hpbGRyZW4oJy52aWV3cG9ydCcpO1xyXG4gICAgdmFyIHBob3RvX2xlbiA9IHZpZXdwb3J0LmZpbmQoJ3VsJykuY2hpbGRyZW4oJ2xpOnZpc2libGUnKS5sZW5ndGg7XHJcbiAgICBpZihwaG90b19sZW4gPCBkZWZhdWx0X3Bob3RvX2xlbikge1xyXG4gICAgICAgIGlmKCFwaG90b19jYXJvdXNlbC5oYXNDbGFzcygnc2hvcnQtY2Fyb3VzZWwnKSkge1xyXG4gICAgICAgICAgICBwaG90b19jYXJvdXNlbC5hZGRDbGFzcygnc2hvcnQtY2Fyb3VzZWwnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIXZpZXdwb3J0Lmhhc0NsYXNzKCdzaG9ydC12aWV3cG9ydCcpKSB7XHJcbiAgICAgICAgICAgIHZpZXdwb3J0LmFkZENsYXNzKCdzaG9ydC12aWV3cG9ydCcpO1xyXG4gICAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYocGhvdG9fY2Fyb3VzZWwuaGFzQ2xhc3MoJ3Nob3J0LWNhcm91c2VsJykpIHtcclxuICAgICAgICAgICAgcGhvdG9fY2Fyb3VzZWwucmVtb3ZlQ2xhc3MoJ3Nob3J0LWNhcm91c2VsJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHZpZXdwb3J0Lmhhc0NsYXNzKCdzaG9ydC12aWV3cG9ydCcpKSB7XHJcbiAgICAgICAgICAgIHZpZXdwb3J0LnJlbW92ZUNsYXNzKCdzaG9ydC12aWV3cG9ydCcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBcImluaXRcIjogaW5pdCxcclxuICAgIFwiY2hhbmdlX3BpY3NcIjogY2hhbmdlX3BpY3MsXHJcbiAgICBcImFkZF9jdXN0b21fcGljc1wiOiBhZGRfY3VzdG9tX3BpY3MsXHJcbiAgICBcInB1dFZpZGVvTG9jYXRpb25cIjogcHV0VmlkZW9Mb2NhdGlvblxyXG59O1xyXG5cclxuLy99KTtcclxuIl19
},{"../lib/jqueryJqzoom":13,"../mod/carousel":17,"../mod/commentDrawImage":18,"../mod/userAgent":29,"./add_to_cart":3,"./magnify_pictures":5,"./similar_carousel":9}],12:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
var locked = false;
var placeorderUrl = webData.WEB_ROOT + 'checkout.php?act=checkout_payment_process';
var paypalAddressTable = pageData.paypalAddressTable;
var paypalConf = typeof webData.paypalConf === 'object' ? webData.paypalConf : {};

function isEnabled(page, region) {
    if (typeof paypal === 'undefined') {
        return false;
    }

    if (typeof paypalConf[page] === 'undefined') {
        return false;
    }

    var conf = paypalConf[page];
    return conf.length === 0 || typeof region === 'undefined' || conf.indexOf(parseInt(region)) !== -1;
}

function addToCartInit() {
    if(isEnabled('addToCartBtn') && $('#nav-cart-paypal-button').length > 0) {
        paypal.Buttons({
            style: {
                label: 'checkout',
                color: 'gold',
                shape: 'pill',
                height: 25,
            },

            createOrder: function (data, actions) {
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: webData.totalAmountNumber,
                            currency: webData.currency
                        }
                    }]
                });
            },

            onApprove: function (data, actions) {
                var param = new FormData();
                param.append('paypalOrderID', data.orderID)
                return fetch(webData.WEB_ROOT + 'ajax.php?act=get_paypal_address', {
                    method: 'post',
                    body: param,
                }).then(function (res) {
                    return res.json();
                }).then(function (res) {
                    if(res.code == 0) {
                        window.location = res.url + '&from=ppwindow';
                    }
                });
            },

            onClick: function () {
                $('#nav-cart-paypal-button').click();
            }
        }).render('#nav-cart-paypal-button');
    }
}

function cartInit() {
    if(isEnabled('cartBtn') && $('#cart-paypal-button-1').length > 0) {
        paypal.Buttons({
            style: {
                label: 'checkout',
                color: 'gold',
                shape: 'pill',
            },

            createOrder: function (data, actions) {
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: pageData.totalAmount,
                            currency: webData.currency
                        }
                    }]
                });
            },

            onApprove: function (data, actions) {
                var param = new FormData();
                param.append('paypalOrderID', data.orderID)
                return fetch(webData.WEB_ROOT + 'ajax.php?act=get_paypal_address', {
                    method: 'post',
                    body: param,
                }).then(function (res) {
                    return res.json();
                }).then(function (res) {
                    if(res.code == 0) {
                        window.location = res.url + '&from=pp';
                    }
                });
            },

            onClick: function () {
                $('#cart-paypal-button-1').click();
            }
        }).render('#cart-paypal-button-1');
    }
}

function checkoutInit() {
    if(pageData.usePaypal || pageData.default_payment_id == '97') {
        $("#payment-radio-97").attr("checked", "checked");
        $('#checkout_payment input[type=radio][name=payment_id]').change();
    }

    var isPaypalExecute = pageData.isPaypalExecute;
    if(isEnabled('checkoutBtn') && $('#paypal-button').length > 0) {
        if (isPaypalExecute) {
            paypal.Buttons({
                style: {
                    label: 'checkout',
                    color: 'gold',
                    shape: 'pill',
                },

                onInit: function(data, actions) {
                    actions.disable();
                },
                onClick: function () {
                    if (locked) {
                        return;
                    }

                    var param = new FormData(document.getElementById("checkout_form"));
                    param.append('isAjaxPayPal', true);
                    locked = true;

                    return fetch(placeorderUrl, {
                        method: 'post',
                        body: param,
                    })
                        .then(function (res) {
                            return res.json()
                        })
                        .then(function (res) {
                            locked = false;
                            $('#paypal-button').click();
                            $('#checkout-tagmanager-track').click();
                            if (typeof res.name != 'undefined') {
                                alert(res.message);
                            }
                            window.location = res.url;
                        })
                }
            }).render('#paypal-button');
        } else {
            paypal.Buttons({
                style: {
                    label: 'checkout',
                    color: 'gold',
                    shape: 'pill',
                },

                createOrder: function () {
                    var param = new FormData(document.getElementById("checkout_form"));
                    param.append('isAjaxPayPal', true);
                    return fetch(placeorderUrl, {
                        method: 'post',
                        body: param,
                    })
                    .then(function (res) {
                        return res.json();
                    })
                    .then(function (orderData) {
                        return orderData.id;
                    });
                },

                onApprove: function (data, actions) {
                    var param = new FormData();
                    param.append('orderID', data.orderID)
                    return fetch(webData.WEB_ROOT + 'checkout.php?act=execute_paypal_payment', {
                        method: 'post',
                        body: param,
                    })
                    .then(function (res) {
                        return res.json();
                    })
                    .then(function (res) {
                        if (typeof res.name !== 'undefined' && res.name === 'INSTRUMENT_DECLINED') {
                            return actions.restart();
                        } else {
                            if (res.code == 1) {
                                alert(_lang.page_paypal_PAID_FAILD);
                            }
                            window.location = res.url;
                        }
                    });
                },
                onCancel: function () {
                    location.reload();
                },
                onError: function (data) {
                    alert(_lang.page_paypal_PAID_FAILD);
                    location.reload();
                },
                onClick: function () {
                    $('#paypal-button').click();
                    $('#checkout-tagmanager-track').click();
                }
            }).render('#paypal-button');
        }
    }
}

function checkoutBtnDisplay() {
    // change checkout button only when address has saved
    if($('#ck_address_list').length > 0) {
        var cid = $('#ck_address_list input[type=radio][name=address_id]:checked').attr("data-cid");
        var payment_id = $('#checkout_payment input[type=radio][name=payment_id]:checked').val();
        if (isEnabled('checkoutBtn', cid) && payment_id == '97') {
            $('#paypal-button').show();
            $('.checkout_btn_a').hide();
        } else {
            $('#paypal-button').hide();
            $('.checkout_btn_a').show();
        }

        var paypalMessage = $('*[data-pp-message]');
        if (isEnabled('checkoutMessage', cid) && payment_id == '97') {
            paypalMessage.length && paypalMessage.show();
        } else {
            paypalMessage.length && paypalMessage.hide();
        }
    }
}

function isPaypalAddressValid() {
    return isEnabled('checkoutBtn') && paypalAddressTable && paypalAddressTable.valid
}

function setMessageAmount(amount) {
    amount = amount + '';
    amount = amount.replace(/\s*/g, "");
    var paypalMessage = $('*[data-pp-message]');
    for (var i = 0; i < paypalMessage.length; i++) {
        paypalMessage[i].setAttribute('data-pp-amount', amount);
    }
}

module.exports = {
    "addToCartInit": addToCartInit,
    "cartInit": cartInit,
    "checkoutInit": checkoutInit,
    "checkoutBtnDisplay": checkoutBtnDisplay,
    "isPaypalAddressValid": isPaypalAddressValid,
    "setMessageAmount": setMessageAmount,
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{}],13:[function(require,module,exports){
//define(function(require, exports, module) {

	/*!
	 * jQzoom Evolution Library v2.3  - Javascript Image magnifier
	 * http://www.mind-projects.it
	 *
	 * Copyright 2011, Engineer Marco Renzi
	 * Licensed under the BSD license.
	 *
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are met:
	 *     * Redistributions of source code must retain the above copyright
	 *       notice, this list of conditions and the following disclaimer.
	 *     * Redistributions in binary form must reproduce the above copyright
	 *       notice, this list of conditions and the following disclaimer in the
	 *       documentation and/or other materials provided with the distribution.
	 *     * Neither the name of the organization nor the
	 *       names of its contributors may be used to endorse or promote products
	 *       derived from this software without specific prior written permission.
	 *
	 * Date: 03 May 2011 22:16:00
	 */
	(function ($) {
		//GLOBAL VARIABLES
		var isIE6 = ('undefined' == typeof(document.body.style.maxHeight));
		var body = $(document.body);
		var window = $(window);
		var jqzoompluging_disabled = false; //disabilita globalmente il plugin
        var gthumbList = [];
		$.fn.jqzoom = function (options) {
			return this.each(function () {
				var node = this.nodeName.toLowerCase();
				if ($(this).hasClass('jqzoom_item')) {
					new jqzoom(this, options);
				}
			});
		};
		jqzoom = function (el, options) {
			var api = null;
			api = $(el).data("jqzoom");
			if (api) return api;
			var obj = this;
			var settings = $.extend({}, $.jqzoom.defaults, options || {});
			obj.el = el;
			el.rel = $(el).attr('rel');
			//ANCHOR ELEMENT
			el.zoom_active = false;
			el.zoom_disabled = false; //to disable single zoom instance
			el.largeimageloading = false; //tell us if large image is loading
			el.largeimageloaded = false; //tell us if large image is loaded
			el.scale = {};
			el.timer = null;
			el.mousepos = {};
			el.mouseDown = false;
			$(el).css({
				'outline-style': 'none',
				'text-decoration': 'none'
			});
			//BASE IMAGE
			var img = $("img:eq(0)", el);
			el.title = $(el).attr('title');
			el.imagetitle = img.attr('title');
			var zoomtitle = ($.trim(el.title).length > 0) ? el.title : el.imagetitle;
			var smallimage = new Smallimage(img);
			var lens = new Lens();
			var stage = new Stage();
			var largeimage = new Largeimage();
			var loader = new Loader();
			//preventing default click,allowing the onclick event [exmple: lightbox]
			$(el).bind('click', function (e) {
				e.preventDefault();
				return false;
			});
			//setting the default zoomType if not in settings
			var zoomtypes = ['standard', 'drag', 'innerzoom', 'reverse'];
			if ($.inArray($.trim(settings.zoomType), zoomtypes) < 0) {
				settings.zoomType = 'standard';
			}
			$.extend(obj, {
				create: function () { //create the main objects
					//create ZoomPad
					if ($(".zoomPad", el).length == 0) {
						el.zoomPad = $('<div/>').addClass('zoomPad');
						img.wrap(el.zoomPad);
					}
					if(settings.zoomType == 'innerzoom'){
						settings.zoomWidth  = smallimage.w;
						settings.zoomHeight  =   smallimage.h;
					}
					//creating ZoomPup
					if ($(".zoomPup", el).length == 0) {
						lens.append();
					}
					//creating zoomWindow
					if ($(".zoomWindow", el).length == 0) {
						stage.append();
					}
					//creating Preload
					if ($(".zoomPreload", el).length == 0) {
                        loader.append();
					}
					//preloading images
					if (settings.preloadImages || settings.preloadNext || settings.zoomType == 'drag' || settings.alwaysOn) {
						obj.load();
					}
					obj.init();
				},
				init: function () {
					//drag option
					if (settings.zoomType == 'drag') {
						$(".zoomPad", el).mousedown(function () {
							el.mouseDown = true;
						});
						$(".zoomPad", el).mouseup(function () {
							el.mouseDown = false;
						});
						document.body.ondragstart = function () {
							return false;
						};
						$(".zoomPad", el).css({
							cursor: 'default'
						});
						$(".zoomPup", el).css({
							cursor: 'move'
						});
					}
					if (settings.zoomType == 'innerzoom') {
						$(".zoomWrapper", el).css({
							cursor: 'crosshair'
						});
					}
					$(".zoomPad", el).bind('mouseenter mouseover', function (event) {
						img.attr('title', '');
						$(el).attr('title', '');
						el.zoom_active = true;
						//if loaded then activate else load large image
						smallimage.fetchdata();
						if (el.largeimageloaded) {
							obj.activate(event);
						} else {
							obj.load();
							if(settings.showPreload){
                                $(".zoomPreload", el).css('display', 'block');
                            }
						}
					});
					$(".zoomPad", el).bind('mouseleave', function (event) {
						obj.deactivate();
                        $(".zoomPreload", el).css('display', 'none');
					});
					$(".zoomPad", el).bind('mousemove', function (e) {

						//prevent fast mouse mevements not to fire the mouseout event
						if (e.pageX > smallimage.pos.r || e.pageX < smallimage.pos.l || e.pageY < smallimage.pos.t || e.pageY > smallimage.pos.b) {
							// lens.setcenter();
							// 鼠标瞬间移动到放大图片位置时 视为移除图片
							obj.deactivate();
							return false;
						}
						el.zoom_active = true;
						if (el.largeimageloaded && !$('.zoomWindow', el).is(':visible')) {
							obj.activate(e);
						}
						if (el.largeimageloaded && (settings.zoomType != 'drag' || (settings.zoomType == 'drag' && el.mouseDown))) {
							lens.setposition(e);
						}
					});
					var thumb_preload = new Array();
					var i = 0;
					var preloadNextIndex = 0;
					//binding click event on thumbnails
					var thumblist = new Array();
					thumblist = $('a').filter(function () {
						var regex = new RegExp("gallery[\\s]*:[\\s]*'" + $.trim(el.rel) + "'", "i");
						var rel = $(this).attr('rel');
						if (regex.test(rel)) {
							return this;
						}
					});
					if (thumblist.length > 0) {
						//getting the first to the last
						var first = thumblist.splice(0, 1);
						thumblist.push(first);
					}
					thumblist.each(function () {
						//preloading thumbs
						if (settings.preloadImages) {
							var thumb_options = $.extend({}, eval("(" + $.trim($(this).attr('rel')) + ")"));
							thumb_preload[i] = new Image();
							thumb_preload[i].src = thumb_options.largeimage;
							i++;
						} else if (settings.preloadNext) {
                            var thumb_options = $.extend({}, eval("(" + $.trim($(this).attr('rel')) + ")"));
                            gthumbList[preloadNextIndex] = {"src":thumb_options.largeimage, "loaded": false};
                            if (preloadNextIndex == thumblist.length - 1) {
                                var img = new Image();
                                img.src = gthumbList[0].src;
                            }
                            preloadNextIndex++;
                        }
                    });
                    $(document).on('click', '.thumbcontent .zoomThumb', function(e) {
						// if($(this).hasClass('zoomThumbActive')){
						// 	return true;
						// }
						$('.thumbcontent .zoomThumb').removeClass('zoomThumbActive');
						e.preventDefault();
						obj.swapimage(this);
						return true;
					});
				},
				load: function () {
                    var url = $(el).attr('data-href');
					if (el.largeimageloaded == false && el.largeimageloading == false) {
						el.largeimageloading = true;
						largeimage.loadimage(url);
					}
                    for (var i = 0; i < gthumbList.length - 1; i++) {
                        if (gthumbList[i].src == url && gthumbList[i+1].loaded == false){
                            var img = new Image();
                            img.src = gthumbList[i+1].src;
                            gthumbList[i+1].loaded = true;
                        }
                    }
				},
				activate: function (e) {
					clearTimeout(el.timer);
					//show lens and zoomWindow
					if(!(navigator.userAgent.match(/iPad/i))){
						lens.show();
						stage.show();
					}
				},
				deactivate: function (e) {
					switch (settings.zoomType) {
					case 'drag':
						//nothing or lens.setcenter();
						break;
					default:
						img.attr('title', el.imagetitle);
						$(el).attr('title', el.title);
						if (settings.alwaysOn) {
							lens.setcenter();
						} else {
							stage.hide();
							lens.hide();
						}
						break;
					}
					el.zoom_active = false;
				},
				swapimage: function (link) {
					el.largeimageloading = false;
					el.largeimageloaded = false;
					var options = new Object();
					options = $.extend({}, eval("(" + $.trim($(link).attr('rel')) + ")"));
					if (options.smallimage && options.largeimage) {
						var smallimage = options.smallimage;
						var largeimage = options.largeimage;
						$(link).addClass('zoomThumbActive');
						$(el).attr('data-href', largeimage);
						img.attr('src', smallimage);
						lens.hide();
						stage.hide();
						obj.load();
					} else {
						alert('ERROR :: Missing parameter for largeimage or smallimage.');
						throw 'ERROR :: Missing parameter for largeimage or smallimage.';
					}
					return false;
				}
			});
			//sometimes image is already loaded and onload will not fire
			// if (img[0].complete) {
				//fetching data from sallimage if was previously loaded
				smallimage.fetchdata();
				if ($(".zoomPad", el).length == 0) obj.create();
			// }
	/*========================================================,
	|   Smallimage
	|---------------------------------------------------------:
	|   Base image into the anchor element
	`========================================================*/

			function Smallimage(image) {
				var $obj = this;
				this.node = image[0];
				this.findborder = function () {
					var bordertop = 0;
					bordertop = image.css('border-top-width');
					var btop = '';
					var borderleft = 0;
					borderleft = image.css('border-left-width');
					bleft = '';
					if (bordertop) {
						for (i = 0; i < 3; i++) {
							var x = [];
							x = bordertop.substr(i, 1);
							if (isNaN(x) == false) {
								btop = btop + '' + bordertop.substr(i, 1);
							} else {
								break;
							}
						}
					}
					if (borderleft) {
						for (i = 0; i < 3; i++) {
							if (!isNaN(borderleft.substr(i, 1))) {
								bleft = bleft + borderleft.substr(i, 1)
							} else {
								break;
							}
						}
					}
					$obj.btop = (btop.length > 0) ? eval(btop) : 0;
					$obj.bleft = (bleft.length > 0) ? eval(bleft) : 0;
				};
				this.fetchdata = function () {
					$obj.findborder();
					$obj.w = image.width();
					$obj.h = image.height();
					$obj.ow = image.outerWidth();
					$obj.oh = image.outerHeight();
					$obj.pos = image.offset();
					$obj.pos.l = image.offset().left + $obj.bleft;
					$obj.pos.t = image.offset().top + $obj.btop;
					$obj.pos.r = $obj.w + $obj.pos.l;
					$obj.pos.b = $obj.h + $obj.pos.t;
					$obj.rightlimit = image.offset().left + $obj.ow;
					$obj.bottomlimit = image.offset().top + $obj.oh;

				};
				this.node.onerror = function () {
					/*alert('Problems while loading image.');
					throw 'Problems while loading image.';*/
				};
				this.node.onload = function () {
					$obj.fetchdata();
					if ($(".zoomPad", el).length == 0) obj.create();
				};
				return $obj;
			};
	/*========================================================,
	|  Loader
	|---------------------------------------------------------:
	|  Show that the large image is loading
	`========================================================*/

			function Loader() {
				var $obj = this;
				this.append = function () {
                    if(navigator.userAgent.match(/iPad/i)){
                        return;
                    }
					this.node = $('<div/>').addClass('zoomPreload').css('visibility', 'hidden').html(settings.preloadText);
					$('.zoomPad', el).append(this.node);
				};
				this.show = function () {
                    if(navigator.userAgent.match(/iPad/i)){
                        return;
                    }
					this.node.top = (smallimage.oh - this.node.height()) / 2;
					this.node.left = (smallimage.ow - this.node.width()) / 2;
					//setting position
					this.node.css({
						top: this.node.top,
						left: this.node.left,
						position: 'absolute',
						visibility: 'visible'
					});
				};
				this.hide = function () {
                    if(navigator.userAgent.match(/iPad/i)){
                        return;
                    }
					this.node.css('visibility', 'hidden');
				};
				return this;
			}
	/*========================================================,
	|   Lens
	|---------------------------------------------------------:
	|   Lens over the image
	`========================================================*/

			function Lens() {
				var $obj = this;
				this.node = $('<div/>').addClass('zoomPup');
				//this.nodeimgwrapper = $("<div/>").addClass('zoomPupImgWrapper');
				this.append = function () {
					$('.zoomPad', el).append($(this.node).hide());
					if (settings.zoomType == 'reverse') {
						this.image = new Image();
						this.image.src = smallimage.node.src; // fires off async
						$(this.node).empty().append(this.image);
					}
				};
				this.setdimensions = function () {
					this.node.w = (parseInt((settings.zoomWidth) / el.scale.x) > smallimage.w ) ? smallimage.w : (parseInt(settings.zoomWidth / el.scale.x));
					this.node.h = (parseInt((settings.zoomHeight) / el.scale.y) > smallimage.h ) ? smallimage.h : (parseInt(settings.zoomHeight / el.scale.y));
					this.node.top = (smallimage.oh - this.node.h - 2) / 2;
					this.node.left = (smallimage.ow - this.node.w - 2) / 2;
					//centering lens
					this.node.css({
						top: 0,
						left: 0,
						width: this.node.w + 'px',
						height: this.node.h + 'px',
						position: 'absolute',
						display: 'none'
					});



					if (settings.zoomType == 'reverse') {
						this.image.src = smallimage.node.src;
						$(this.node).css({
							'opacity': 1
						});

						$(this.image).css({
							position: 'absolute',
							display: 'block',
							left: -(this.node.left + 1 - smallimage.bleft) + 'px',
							top: -(this.node.top + 1 - smallimage.btop) + 'px'
						});

					}
				};
				this.setcenter = function () {
					//calculating center position
					this.node.top = (smallimage.oh - this.node.h - 2) / 2;
					this.node.left = (smallimage.ow - this.node.w - 2) / 2;
					//centering lens
					this.node.css({
						top: this.node.top,
						left: this.node.left
					});
					if (settings.zoomType == 'reverse') {
						$(this.image).css({
							position: 'absolute',
							display: 'block',
							left: -(this.node.left + 1 - smallimage.bleft) + 'px',
							top: -(this.node.top + 1 - smallimage.btop) + 'px'
						});

					}
					//centering large image
					largeimage.setposition();
				};
				this.setposition = function (e) {
					el.mousepos.x = e.pageX;
					el.mousepos.y = e.pageY;
					var lensleft = 0;
					var lenstop = 0;

					function overleft(lens) {
						return el.mousepos.x - (lens.w) / 2 < smallimage.pos.l;
					}

					function overright(lens) {
						return el.mousepos.x + (lens.w) / 2 > smallimage.pos.r;

					}

					function overtop(lens) {
						return el.mousepos.y - (lens.h) / 2 < smallimage.pos.t;
					}

					function overbottom(lens) {
						return el.mousepos.y + (lens.h) / 2 > smallimage.pos.b;
					}

					lensleft = el.mousepos.x + smallimage.bleft - smallimage.pos.l - (this.node.w + 2) / 2;
					lenstop = el.mousepos.y + smallimage.btop - smallimage.pos.t - (this.node.h + 2) / 2;
					if (overleft(this.node)) {
						lensleft = smallimage.bleft - 1;
					} else if (overright(this.node)) {
						lensleft = smallimage.w + smallimage.bleft - this.node.w - 1;
					}
					if (overtop(this.node)) {
						lenstop = smallimage.btop - 1;
					} else if (overbottom(this.node)) {
						lenstop = smallimage.h + smallimage.btop - this.node.h - 1;
					}

					this.node.left = lensleft;
					this.node.top = lenstop;
					this.node.css({
						'left': lensleft + 'px',
						'top': lenstop + 'px'
					});
					if (settings.zoomType == 'reverse') {
						if ('undefined' != typeof(document.body.style.maxHeight)) {
							$(this.node).empty().append(this.image);
						}

						$(this.image).css({
							position: 'absolute',
							display: 'block',
							left: -(this.node.left + 1 - smallimage.bleft) + 'px',
							top: -(this.node.top + 1 - smallimage.btop) + 'px'
						});
					}

					largeimage.setposition();
				};
				this.hide = function () {
					img.css({
						'opacity': 1
					});
					this.node.hide();
				};
				this.show = function () {

					if (settings.zoomType != 'innerzoom' && (settings.lens || settings.zoomType == 'drag')) {
						this.node.show();
					}

					if (settings.zoomType == 'reverse') {
						img.css({
							'opacity': settings.imageOpacity
						});
					}
				};
				this.getoffset = function () {
					var o = {};
					o.left = $obj.node.left;
					o.top = $obj.node.top;
					return o;
				};
				return this;
			};
	/*========================================================,
	|   Stage
	|---------------------------------------------------------:
	|   Window area that contains the large image
	`========================================================*/

			function Stage() {
				var $obj = this;
				this.node = $("<div class='zoomWindow'><div class='zoomWrapper'><div class='zoomWrapperTitle'></div><div class='zoomWrapperImage'></div></div></div>");
				this.ieframe = $('<iframe class="zoomIframe" src="javascript:\'\';" marginwidth="0" marginheight="0" align="bottom" scrolling="no" frameborder="0" ></iframe>');
				this.setposition = function () {
					this.node.leftpos = 0;
					this.node.toppos = 0;
					if (settings.zoomType != 'innerzoom') {
						//positioning
						switch (settings.position) {
						case "left":
							this.node.leftpos = (smallimage.pos.l - smallimage.bleft - Math.abs(settings.xOffset) - settings.zoomWidth > 0) ? (0 - settings.zoomWidth - Math.abs(settings.xOffset)) : (smallimage.ow + Math.abs(settings.xOffset));
							this.node.toppos = Math.abs(settings.yOffset);
							break;
						case "top":
							this.node.leftpos = Math.abs(settings.xOffset);
							this.node.toppos = (smallimage.pos.t - smallimage.btop - Math.abs(settings.yOffset) - settings.zoomHeight > 0) ? (0 - settings.zoomHeight - Math.abs(settings.yOffset)) : (smallimage.oh + Math.abs(settings.yOffset));
							break;
						case "bottom":
							this.node.leftpos = Math.abs(settings.xOffset);
							this.node.toppos = (smallimage.pos.t - smallimage.btop + smallimage.oh + Math.abs(settings.yOffset) + settings.zoomHeight < screen.height) ? (smallimage.oh + Math.abs(settings.yOffset)) : (0 - settings.zoomHeight - Math.abs(settings.yOffset));
							break;
						default:
							this.node.leftpos = (smallimage.rightlimit + Math.abs(settings.xOffset) + settings.zoomWidth < screen.width) ? (smallimage.ow + Math.abs(settings.xOffset)) : (0 - settings.zoomWidth - Math.abs(settings.xOffset));
							this.node.toppos = Math.abs(settings.yOffset);
							break;
						}
					}
					this.node.css({
						'left': this.node.leftpos + 'px',
						'top': this.node.toppos + 'px'
					});
					return this;
				};
				this.append = function () {
					$('.zoomPad', el).append(this.node);
					this.node.css({
						position: 'absolute',
						display: 'none',
						zIndex: 5001
					});
					if (settings.zoomType == 'innerzoom') {
						this.node.css({
							cursor: 'default'
						});
						var thickness = (smallimage.bleft == 0) ? 1 : smallimage.bleft;
						$('.zoomWrapper', this.node).css({
							borderWidth: thickness + 'px'
						});
					}

					  $('.zoomWrapper', this.node).css({
						  width: Math.round(settings.zoomWidth) + 'px' ,
						  borderWidth: thickness + 'px'
					  });
					  $('.zoomWrapperImage', this.node).css({
						  width: '100%',
						  height: Math.round(settings.zoomHeight) + 'px'
					  });
					  //zoom title
					 $('.zoomWrapperTitle', this.node).css({
							width: '100%',
							position: 'absolute'
					  });

					$('.zoomWrapperTitle', this.node).hide();
					if (settings.title && zoomtitle.length > 0) {
						$('.zoomWrapperTitle', this.node).html(zoomtitle).show();
					}
					$obj.setposition();
				};
				this.hide = function () {
					switch (settings.hideEffect) {
					case 'fadeout':
						this.node.fadeOut(settings.fadeoutSpeed, function () {});
						break;
					default:
						// this.node.hide();
						this.node.stop(true, true).hide();
						break;
					}
					this.ieframe.hide();
				};
				this.show = function () {
					switch (settings.showEffect) {
					case 'fadein':
						this.node.fadeIn();
						this.node.fadeIn(settings.fadeinSpeed, function () {});
						break;
					default:
						this.node.show();
						break;
					}
					if (isIE6 && settings.zoomType != 'innerzoom') {
						this.ieframe.width = this.node.width();
						this.ieframe.height = this.node.height();
						this.ieframe.left = this.node.leftpos;
						this.ieframe.top = this.node.toppos;
						this.ieframe.css({
							display: 'block',
							position: "absolute",
							left: this.ieframe.left,
							top: this.ieframe.top,
							zIndex: 99,
							width: this.ieframe.width + 'px',
							height: this.ieframe.height + 'px'
						});
						$('.zoomPad', el).append(this.ieframe);
						this.ieframe.show();
					};
				};
			};
	/*========================================================,
	|   LargeImage
	|---------------------------------------------------------:
	|   The large detailed image
	`========================================================*/

			function Largeimage() {
				var $obj = this;
				this.node = new Image();
				this.loadimage = function (url) {
					//showing preload
					loader.show();
					this.url = url;
					this.node.style.position = 'absolute';
					this.node.style.border = '0px';
					this.node.style.display = 'none';
					this.node.style.left = '-5000px';
					this.node.style.top = '0px';
					document.body.appendChild(this.node);
					this.node.src = url; // fires off async
				};
				this.fetchdata = function () {
					var image = $(this.node);
					var scale = {};
					this.node.style.display = 'block';
					$obj.w = image.width();
					$obj.h = image.height();
					$obj.pos = image.offset();
					$obj.pos.l = image.offset().left;
					$obj.pos.t = image.offset().top;
					$obj.pos.r = $obj.w + $obj.pos.l;
					$obj.pos.b = $obj.h + $obj.pos.t;
					scale.x = ($obj.w / smallimage.w);
					scale.y = ($obj.h / smallimage.h);
					el.scale = scale;
					document.body.removeChild(this.node);
					$('.zoomWrapperImage', el).empty().append(this.node);
					//setting lens dimensions;
					lens.setdimensions();
				};
				this.node.onerror = function () {
					/*alert('Problems while loading the big image.');
					throw 'Problems while loading the big image.';*/
				};
				this.node.onload = function () {
					//fetching data
					$obj.fetchdata();
					loader.hide();
					el.largeimageloading = false;
					el.largeimageloaded = true;
					if (settings.zoomType == 'drag' || settings.alwaysOn) {
						lens.show();
						stage.show();
						lens.setcenter();
					}
				};
				this.setposition = function () {
					var left = -el.scale.x * (lens.getoffset().left - smallimage.bleft + 1);
					var top = -el.scale.y * (lens.getoffset().top - smallimage.btop + 1);
					$(this.node).css({
						'left': left + 'px',
						'top': top + 'px'
					});
				};
				return this;
			};
			$(el).data("jqzoom", obj);
		};
		//es. $.jqzoom.disable('#jqzoom1');
		$.jqzoom = {
			defaults: {
				zoomType: 'standard',
				//innerzoom/standard/reverse/drag
				zoomWidth: 300,
				//zoomWindow  default width
				zoomHeight: 300,
				//zoomWindow  default height
				xOffset: 10,
				//zoomWindow x offset, can be negative(more on the left) or positive(more on the right)
				yOffset: 0,
				//zoomWindow y offset, can be negative(more on the left) or positive(more on the right)
				position: "right",
				//zoomWindow default position
				preloadImages: true,
                preloadNext: false,
				//image preload
				preloadText: 'Loading zoom',
				title: true,
				lens: true,
				imageOpacity: 0.4,
				alwaysOn: false,
				showEffect: 'show',
				//show/fadein
				hideEffect: 'hide',
				//hide/fadeout
				fadeinSpeed: 'slow',
				//fast/slow/number
				fadeoutSpeed: '2000' //fast/slow/number
			},
			disable: function (el) {
				var api = $(el).data('jqzoom');
				api.disable();
				return false;
			},
			enable: function (el) {
				var api = $(el).data('jqzoom');
				api.enable();
				return false;
			},
			disableAll: function (el) {
				jqzoompluging_disabled = true;
			},
			enableAll: function (el) {
				jqzoompluging_disabled = false;
			}
		};
	})(jQuery);

//});

},{}],14:[function(require,module,exports){
(function (global){
//define(function(require, exports, module) {
	var jQuery = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
	
	// tipsy, facebook style tooltips for jquery
	// version 1.0.0a
	// (c) 2008-2010 jason frame [jason@onehackoranother.com]
	// released under the MIT license

	(function($) {
		
		function maybeCall(thing, ctx) {
			return (typeof thing == 'function') ? (thing.call(ctx)) : thing;
		};
		
		function Tipsy(element, options) {
			this.$element = $(element);
			this.options = options;
			this.enabled = true;
			this.fixTitle();
		};
		
		Tipsy.prototype = {
			show: function() {
				var title = this.getTitle();
				if (title && this.enabled) {
					var $tip = this.tip();
					
					$tip.find('.tipsy-inner')[this.options.html ? 'html' : 'text'](title);
					$tip[0].className = 'tipsy'; // reset classname in case of dynamic gravity
					$tip.remove().css({top: 0, left: 0, visibility: 'hidden', display: 'block'}).prependTo(document.body);
					
					var pos = $.extend({}, this.$element.offset(), {
						width: this.$element[0].offsetWidth,
						height: this.$element[0].offsetHeight
					});
					
					var actualWidth = $tip[0].offsetWidth,
						actualHeight = $tip[0].offsetHeight,
						gravity = maybeCall(this.options.gravity, this.$element[0]);
					
					var tp;
					switch (gravity.charAt(0)) {
						case 'n':
							tp = {top: pos.top + pos.height + this.options.offset, left: pos.left + pos.width / 2 - actualWidth / 2};
							break;
						case 's':
							tp = {top: pos.top - actualHeight - this.options.offset, left: pos.left + pos.width / 2 - actualWidth / 2};
							break;
						case 'e':
							tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth - this.options.offset};
							break;
						case 'w':
							tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width + this.options.offset};
							break;
					}
					
					if (gravity.length == 2) {
						if (gravity.charAt(1) == 'w') {
							tp.left = pos.left + pos.width / 2 - 15;
						} else {
							tp.left = pos.left + pos.width / 2 - actualWidth + 15;
						}
					}
					
					$tip.css(tp).addClass('tipsy-' + gravity);
					$tip.find('.tipsy-arrow')[0].className = 'tipsy-arrow tipsy-arrow-' + gravity.charAt(0);
					if (this.options.className) {
						$tip.addClass(maybeCall(this.options.className, this.$element[0]));
					}
					
					if (this.options.fade) {
						$tip.stop().css({opacity: 0, display: 'block', visibility: 'visible'}).animate({opacity: this.options.opacity});
					} else {
						$tip.css({visibility: 'visible', opacity: this.options.opacity});
					}
				}
			},
			
			hide: function() {
				if (this.options.fade) {
					this.tip().stop().fadeOut(function() { $(this).remove(); });
				} else {
					this.tip().remove();
				}
			},
			
			fixTitle: function() {
				var $e = this.$element;
				if ($e.attr('title') || typeof($e.attr('original-title')) != 'string') {
					$e.attr('original-title', $e.attr('title') || '').removeAttr('title');
				}
			},
			
			getTitle: function() {
				var title, $e = this.$element, o = this.options;
				this.fixTitle();
				var title, o = this.options;
				if (typeof o.title == 'string') {
					title = $e.attr(o.title == 'title' ? 'original-title' : o.title);
				} else if (typeof o.title == 'function') {
					title = o.title.call($e[0]);
				}
				title = ('' + title).replace(/(^\s*|\s*$)/, "");
				return title || o.fallback;
			},
			
			tip: function() {
				if (!this.$tip) {
					this.$tip = $('<div class="tipsy"></div>').html('<div class="tipsy-arrow"></div><div class="tipsy-inner"></div>');
				}
				return this.$tip;
			},
			
			validate: function() {
				if (!this.$element[0].parentNode) {
					this.hide();
					this.$element = null;
					this.options = null;
				}
			},
			
			enable: function() { this.enabled = true; },
			disable: function() { this.enabled = false; },
			toggleEnabled: function() { this.enabled = !this.enabled; }
		};
		
		$.fn.tipsy = function(options) {
			
			if (options === true) {
				return this.data('tipsy');
			} else if (typeof options == 'string') {
				var tipsy = this.data('tipsy');
				if (tipsy) tipsy[options]();
				return this;
			}
			
			options = $.extend({}, $.fn.tipsy.defaults, options);
			
			function get(ele) {
				var tipsy = $.data(ele, 'tipsy');
				if (!tipsy) {
					tipsy = new Tipsy(ele, $.fn.tipsy.elementOptions(ele, options));
					$.data(ele, 'tipsy', tipsy);
				}
				return tipsy;
			}
			
			function enter() {
				var tipsy = get(this);
				tipsy.hoverState = 'in';
				if (options.delayIn == 0) {
					tipsy.show();
				} else {
					tipsy.fixTitle();
					setTimeout(function() { if (tipsy.hoverState == 'in') tipsy.show(); }, options.delayIn);
				}
			};
			
			function leave() {
				var tipsy = get(this);
				tipsy.hoverState = 'out';
				if (options.delayOut == 0) {
					tipsy.hide();
				} else {
					setTimeout(function() { if (tipsy.hoverState == 'out') tipsy.hide(); }, options.delayOut);
				}
			};
			
			if (!options.live) this.each(function() { get(this); });
			
			if (options.trigger != 'manual') {
				var binder   = options.live ? 'live' : 'bind',
					eventIn  = options.trigger == 'hover' ? 'mouseenter' : 'focus',
					eventOut = options.trigger == 'hover' ? 'mouseleave' : 'blur';
				this[binder](eventIn, enter)[binder](eventOut, leave);
			}
			
			return this;
			
		};
		
		$.fn.tipsy.defaults = {
			className: null,
			delayIn: 0,
			delayOut: 0,
			fade: false,
			fallback: '',
			gravity: 'n',
			html: false,
			live: false,
			offset: 0,
			opacity: 0.8,
			title: 'title',
			trigger: 'hover'
		};
		
		// Overwrite this method to provide options on a per-element basis.
		// For example, you could store the gravity in a 'tipsy-gravity' attribute:
		// return $.extend({}, options, {gravity: $(ele).attr('tipsy-gravity') || 'n' });
		// (remember - do not modify 'options' in place!)
		$.fn.tipsy.elementOptions = function(ele, options) {
			return $.metadata ? $.extend({}, options, $(ele).metadata()) : options;
		};
		
		$.fn.tipsy.autoNS = function() {
			return $(this).offset().top > ($(document).scrollTop() + $(window).height() / 2) ? 's' : 'n';
		};
		
		$.fn.tipsy.autoWE = function() {
			return $(this).offset().left > ($(document).scrollLeft() + $(window).width() / 2) ? 'e' : 'w';
		};
		
		/**
		 * yields a closure of the supplied parameters, producing a function that takes
		 * no arguments and is suitable for use as an autogravity function like so:
		 *
		 * @param margin (int) - distance from the viewable region edge that an
		 *        element should be before setting its tooltip's gravity to be away
		 *        from that edge.
		 * @param prefer (string, e.g. 'n', 'sw', 'w') - the direction to prefer
		 *        if there are no viewable region edges effecting the tooltip's
		 *        gravity. It will try to vary from this minimally, for example,
		 *        if 'sw' is preferred and an element is near the right viewable 
		 *        region edge, but not the top edge, it will set the gravity for
		 *        that element's tooltip to be 'se', preserving the southern
		 *        component.
		 */
		 $.fn.tipsy.autoBounds = function(margin, prefer) {
			return function() {
				var dir = {ns: prefer[0], ew: (prefer.length > 1 ? prefer[1] : false)},
					boundTop = $(document).scrollTop() + margin,
					boundLeft = $(document).scrollLeft() + margin,
					$this = $(this);

				if ($this.offset().top < boundTop) dir.ns = 'n';
				if ($this.offset().left < boundLeft) dir.ew = 'w';
				if ($(window).width() + $(document).scrollLeft() - $this.offset().left < margin) dir.ew = 'e';
				if ($(window).height() + $(document).scrollTop() - $this.offset().top < margin) dir.ns = 's';

				return dir.ns + (dir.ew ? dir.ew : '');
			}
		};
		
	})(jQuery);

//});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{}],15:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

function setMessageAmount(amount) {
    amount = amount + '';
    amount = amount.replace(/\s*/g, "");
    var afterPayMessage = $('afterpay-placement');
    for (var i = 0; i < afterPayMessage.length; i++) {
        afterPayMessage[i].setAttribute('data-amount', amount);
    }

    var klarnaPayLaterMessage = $('klarna-placement');
    if (klarnaPayLaterMessage.length > 0) {
        for (var i = 0; i < klarnaPayLaterMessage.length; i++) {
            klarnaPayLaterMessage[i].setAttribute('data-purchase-amount', amount * 100);
        }
        window.KlarnaOnsiteService = window.KlarnaOnsiteService || []
        window.KlarnaOnsiteService.push({ eventName: 'refresh-placements' })
    }
}


module.exports = {
    "setMessageAmount": setMessageAmount,
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvbGliL3BheW1lbnRQbGFjZW1lbnRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyICQgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snJCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnJCddIDogbnVsbCk7XHJcblxyXG5mdW5jdGlvbiBzZXRNZXNzYWdlQW1vdW50KGFtb3VudCkge1xyXG4gICAgYW1vdW50ID0gYW1vdW50ICsgJyc7XHJcbiAgICBhbW91bnQgPSBhbW91bnQucmVwbGFjZSgvXFxzKi9nLCBcIlwiKTtcclxuICAgIHZhciBhZnRlclBheU1lc3NhZ2UgPSAkKCdhZnRlcnBheS1wbGFjZW1lbnQnKTtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWZ0ZXJQYXlNZXNzYWdlLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgYWZ0ZXJQYXlNZXNzYWdlW2ldLnNldEF0dHJpYnV0ZSgnZGF0YS1hbW91bnQnLCBhbW91bnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBrbGFybmFQYXlMYXRlck1lc3NhZ2UgPSAkKCdrbGFybmEtcGxhY2VtZW50Jyk7XHJcbiAgICBpZiAoa2xhcm5hUGF5TGF0ZXJNZXNzYWdlLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtsYXJuYVBheUxhdGVyTWVzc2FnZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBrbGFybmFQYXlMYXRlck1lc3NhZ2VbaV0uc2V0QXR0cmlidXRlKCdkYXRhLXB1cmNoYXNlLWFtb3VudCcsIGFtb3VudCAqIDEwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHdpbmRvdy5LbGFybmFPbnNpdGVTZXJ2aWNlID0gd2luZG93LktsYXJuYU9uc2l0ZVNlcnZpY2UgfHwgW11cclxuICAgICAgICB3aW5kb3cuS2xhcm5hT25zaXRlU2VydmljZS5wdXNoKHsgZXZlbnROYW1lOiAncmVmcmVzaC1wbGFjZW1lbnRzJyB9KVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBcInNldE1lc3NhZ2VBbW91bnRcIjogc2V0TWVzc2FnZUFtb3VudCxcclxufVxyXG4iXX0=
},{}],16:[function(require,module,exports){
var dialog = require('./dialog');

function AlertMessage() {}
module.exports = new AlertMessage();

AlertMessage.prototype.open = function(message, canClose, modId) {
    canClose = typeof canClose === 'undefined' ? true : canClose;
    modId = typeof modId === 'undefined' ? 'dialog' : modId;
    var html = '<div class="alert-message-container">' +
        '<div class="alert-message-content">' + message + '</div>';
    if(canClose) {
        html += '<input type="button" class="bt-1-new alert-message-confirm-btn" value="' + _lang.page_common_confirm + '"/>';
    }
    html += '</div>';
    var alertMessageDialog = dialog.open({
        modId: modId,
        html: html,
        canClose: canClose,
        isUpdateHtml: true
    });
    if(canClose) {
        $('.alert-message-confirm-btn').click(function () {
            dialog.close(alertMessageDialog, true);
        });
    }
    return alertMessageDialog;
}

AlertMessage.prototype.close = function(alertMessageDialog) {
    dialog.close(alertMessageDialog, true);
}

},{"./dialog":21}],17:[function(require,module,exports){
(function (global){
//define(function(require, exports, module) {

var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

$.fn.carousel = function () {
    var viewport = $(this).find(".viewport");
    var itemList = $(this).find("ul:first-child:not(.custom_img)");
    var items = itemList.find('li:visible');
    var narrowViewport = $(".narrow-viewport");
    var narrowItemList = narrowViewport.find("ul");
    var narrowItems = narrowItemList.find("li:visible");
    var btnPrev = narrowViewport.siblings(".prev-arraw");
    var btnNext = narrowViewport.siblings(".next-arraw");
    var btnTop = $(this).find(".top-arraw");
    var btnDown = $(this).find(".down-arraw");

    var isShowBtn = false;
    var isShowHorizontalBtn = false;
    var isMoveOne = true;
    var itemsLen = items.length;
    var narrowItemsLen = narrowItems.length;
    var direction = "";
    if (viewport.find("#thumblist").is(':visible')) {
        if (itemsLen < 2) {
            return false;
        } else {
            direction = 'slideLeft';
        }
    }
    if (narrowViewport.find("#thumblist").is(':visible')) {
        if (narrowItemsLen < 2) {
            return false;
        } else {
            direction = 'slideDown';
        }
    }
    if (direction == "") {
        return false;
    }

    items.mouseover(function(){
        $(this).addClass('hov');
    }).mouseout(function() {
        $(this).removeClass('hov');
    });

    if(direction == 'slideLeft') {
        var viewportHeight = viewport.height();
        var unit = items.eq(1).offset().top - items.eq(0).offset().top;
        var viewItemsLen = Math.floor(viewportHeight / unit);
        if (itemsLen > (viewportHeight / unit)) {
            // me.css('margin-top', btnSpace);
            btnTop.css('display','block');
            btnDown.css('display','block');
            isShowHorizontalBtn = true;
            viewport.addClass('btn-show');
            $('.video_thumb-container').addClass('btn-show')
        } else {
            btnTop.css('display','none');
            btnDown.css('display','none');
            isShowHorizontalBtn = false;
            viewport.removeClass('btn-show');
            $('.video_thumb-container').removeClass('btn-show')
        }
        viewport.scrollTop(0);


    } else {
        var viewportWidth = narrowViewport.width();
        var unit = narrowItems.eq(1).offset().left - narrowItems.eq(0).offset().left;
        narrowItemList.width(narrowItemsLen * unit);
        var viewItemsLen = Math.floor(viewportWidth / unit);
        if (narrowItemsLen > viewItemsLen) {
            btnPrev.show();
            btnNext.show();
            isShowBtn = true;
            narrowViewport.addClass('btn-show');
            narrowViewport.siblings('.video_thumb-container').addClass('btn-show');
            $('.video_thumb-container').addClass('btn-show')
        } else {
            btnPrev.hide();
            btnNext.hide();
            isShowBtn = false;
            narrowViewport.removeClass('btn-show')
            narrowViewport.siblings('.video_thumb-container').removeClass('btn-show');
            $('.video_thumb-container').removeClass('btn-show')
        }
        narrowViewport.scrollLeft(0);
    }
    var moveLen = 1;
    var speed = 200;
    var topStep = function(idx){
        if(idx <= 0) return false;
        if(itemList.find("li:last-child:visible").length == 0){
            var itemListVisible = itemList.find("li:visible");
            itemListVisible.appendTo(itemList);
        }
        itemList.find("li:last-child").prependTo(itemList);
        viewport.scrollTop(unit);
        viewport.animate({
            scrollTop : 0
        }, speed, function(){
            topStep(idx - 1);
        });
    };
    var downStep = function(idx){
        if(idx <= 0) return false;
        viewport.animate({
            scrollTop : unit
        }, 0, function(){
            //goods shopbycolor pic >= 4, hide photo li
            if(itemList.find("li:first-child:visible").length == 0){
                var itemListVisible = itemList.find("li:visible");
                itemListVisible.prependTo(itemList);
            }
            itemList.find("li:first-child").appendTo(itemList);
            viewport.scrollTop(0);
            downStep(idx - 1);
        });
    };
    var leftStep = function(idx){
        if(idx <= 0) return false;
        if(narrowItemList.find("li:last-child:visible").length == 0){
            var narrowItemListVisible = narrowItemList.find("li:visible");
            narrowItemListVisible.appendTo(narrowItemList);
        }
        narrowItemList.find("li:last-child").prependTo(narrowItemList);
        narrowViewport.scrollLeft(unit);
        narrowViewport.animate({
            scrollLeft : 0
        }, speed, function(){
            leftStep(idx - 1);
        });
    };
    var rightStep = function(idx){
        if(idx <= 0) return false;
        narrowViewport.animate({
            scrollLeft : unit
        }, speed, function(){
            if(narrowItemList.find("li:first-child:visible").length == 0){
                var narrowItemListVisible = narrowItemList.find("li:visible");
                narrowItemListVisible.prependTo(narrowItemList);
            }
            narrowItemList.find("li:first-child").appendTo(narrowItemList);
            narrowViewport.scrollLeft(0);
            rightStep(idx - 1);
        });
    };
    if(isShowBtn){
        btnPrev.click(function () {
            if (!narrowViewport.is(':animated')) {
                leftStep(moveLen);
                topStep(moveLen);
            }
        });

        btnNext.click(function () {
            if (!narrowViewport.is(':animated')) {
                rightStep(moveLen);
                downStep(moveLen);
            }
        });
    }
    if(isShowHorizontalBtn){
        btnTop.click(function () {
            if (!viewport.is(':animated')) {
                topStep(moveLen);
                leftStep(moveLen);
            }
        });
        btnDown.click(function () {
            if (!viewport.is(':animated')) {
                downStep(moveLen);
                rightStep(moveLen);
            }
        });
    }
    items.find('img').click(function(){
        $(".prod-thumb-right").find("#color_type").text($(this).attr('color'));
        if(isMoveOne && isShowHorizontalBtn) {
            var idx = itemList.find('li:visible').index($(this).closest('li'));
            if(idx == 0) {
                topStep(1);
                leftStep(1);
            } else if(idx == viewItemsLen - 1) {
                downStep(1);
                rightStep(1);
            } else {
            }
        }
    });
    narrowItems.find('img').click(function(){
        $(".prod-thumb-right").find("#color_type").text($(this).attr('color'));
        if(isMoveOne && isShowBtn) {
            var idx = narrowItemList.find('li:visible').index($(this).closest('li'));
            if(idx == 0) {
                leftStep(1);
                topStep(1);
            } else if (idx == viewItemsLen - 1) {
                rightStep(1);
                downStep(1);
            } else {
            }
        }
    });
};

//});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{}],18:[function(require,module,exports){
//define(function (require, exports, module) {

	function CommentDrawImage(ImgD,isrc,iwidth, iheight, isMiddle) {
		this.ImgD = ImgD;
		this.iwidth = iwidth;
		this.iheight = iheight;
		this.isMiddle = (typeof(isMiddle) == 'undefined') ? false : isMiddle;
		this.isrc = !isrc?ImgD.src:isrc;
	}
	module.exports = CommentDrawImage;

	CommentDrawImage.prototype.init = function () {
		var me = this;
		var ImgD = this.ImgD;
 		var image = new Image();
 		ImgD.src = this.isrc;
		image.src = this.isrc;
		if(image.complete) {
			me.setSize(image.width, image.height);
			return false;
		}
		image.onload = function(){
			me.setSize(image.width, image.height);
		};
	}
	
	CommentDrawImage.prototype.setSize = function (twidth, theight) {
		var ImgD = this.ImgD;
		var iwidth = this.iwidth;
		var iheight = this.iheight;
		var isMiddle = this.isMiddle;
		if (twidth > 0 && theight > 0) {
			if (twidth / theight >= iwidth / iheight) {
				if (twidth > iwidth) {
					ImgD.width = iwidth;
					ImgD.height = Math.round((theight * iwidth) / twidth);
				} else {
					ImgD.width = twidth;
					ImgD.height = theight;
				}
			} else {
				if (theight > iheight) {
					ImgD.height = iheight;
					ImgD.width = Math.round((twidth * iheight) / theight);
				} else {
					ImgD.width = twidth;
					ImgD.height = theight;
				}
			}
			if (isMiddle && (ImgD.height < iheight)) {
				ImgD.style.marginTop = Math.floor((iheight - ImgD.height) / 2) + 'px';
			} else {
				ImgD.style.marginTop = '0';
			}
		}
	}
	
//});

},{}],19:[function(require,module,exports){
//define(function (require, exports, module) {

	function Cookie() {}
	module.exports = Cookie;
	var cookie_domain = webData.cookie_domain
	
	Cookie.prototype.setCookie = function (NameOfCookie, value, expiredays, domain) {
		if (expiredays == null || expiredays == undefined || expiredays == '' || isNaN(expiredays)) {
			expiredays = 365;
		}
		var ExpireDate = new Date();
		ExpireDate.setTime(ExpireDate.getTime() + (expiredays * 24 * 3600 * 1000));
		domain = domain ? domain : cookie_domain
        var _domain = domain ? ";domain=" + domain : ""
		document.cookie = NameOfCookie + "=" + escape(value) + _domain + ((expiredays == null) ? "": ";path=/; expires=" + ExpireDate.toGMTString());
	}

	Cookie.prototype.getCookie = function (NameOfCookie) {
		if (document.cookie.length > 0) {
			begin = document.cookie.indexOf(NameOfCookie + "=");
			if (begin != -1) {
				begin += NameOfCookie.length + 1;
				end = document.cookie.indexOf(";", begin);
				if (end == -1) end = document.cookie.length;
				return unescape(document.cookie.substring(begin, end));
			}
		}
		return null;
	}
	
//});

},{}],20:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

function Countdown(container, time, format, isWrap, isWeeklyDeal, isSpecialOffer) {
    this.container = $(container);
    this.time = time;
    this.format = (typeof(format) == 'undefined') ? '' : format;
    this.isWrap = isWrap || false;
    this.isWeeklyDeal = isWeeklyDeal || false;
    this.isSpecialOffer = isSpecialOffer || false;
}
module.exports = Countdown;

Countdown.prototype.run = function () {
    if (this.container[0]) {
        this.init(this.time);
    } else {
        return false;
    }
};

Countdown.prototype.init = function (time) {
    var me = this;
    var container = me.container;
    var next_time = time = time - 1 > 0 ? time - 1 : 0;
    var _day = '', _dayTxt = '', isDays = false;
    if (this.format == 'days') {
        _day = Math.floor(time / (24 * 60 * 60));
        time = time - _day * 24 * 60 * 60;
        _dayTxt = _lang.page_common_day;
        if (_day >= 2) {
            _dayTxt = _lang.page_common_days;
            isDays = true;
        }
        if (!this.isWeeklyDeal) {
            _dayTxt = '<span class="day_txt">' + _dayTxt + '</span>';
        }
    }

    var _hour = Math.floor(time / (60 * 60));
    time = time - _hour * 60 * 60;
    var _minute = Math.floor(time / 60);
    var _second = time - _minute * 60;
    if (_hour < 10) {
        _hour = "0" + _hour;
    }
    if (_minute < 10) {
        _minute = '0' + _minute;
    }
    if (_second < 10) {
        _second = '0' + _second;
    }

    //wrap date time format
    var time_str = _hour + ':' + _minute + ':' + _second;
    if (this.isWrap) {
        _day = '<span class="day">' + _day + '</span>';
        time_str = '<span class="hour">' + time_str + '</span>';
    }

    txt = _day + ' ' + _dayTxt + ' ' + time_str;
    if (this.isWeeklyDeal) {
        var dayTxtClass = "weekly_day_txt";
        if (isDays) {
            dayTxtClass = "weekly_days_txt";
        }
        var dayTxtLangId = dayTxtClass + "_" + webData.lang;
        _day = '<span class="weekly_day">' + _day + '</span>';
        _dayTxt = '<span class= ' + dayTxtClass + ' id=' + dayTxtLangId + ' >' + _dayTxt + '</span>';
        _hour = '<span class="weekly_hour">' + _hour + '</span>';
        _minute = '<span class="weekly_minute">' + _minute + '</span>';
        _second = '<span class="weekly_second">' + _second + '</span>';

        var txt = _day + _dayTxt + _hour + _minute + _second;
    }
    if(this.isSpecialOffer) {
        if (_day < 10) {
            _day = "0" + _day;
        }
        _dayTxt = '<em class="special-offer-day-txt">D</em>';
        var colon = '<em class="special-offer-colon">:</em>';
        _day = '<span class="special-offer-day">' + _day + _dayTxt + '</span>';
        _hour = '<span class="special-offer-hour">' + _hour + colon + '</span>';
        _minute = '<span class="special-offer-minute">' + _minute + colon + '</span>';
        _second = '<span class="special-offer-second">' + _second + '</span>';

        txt = _day + _hour + _minute + _second;
    }
    container.html(txt);

    setTimeout(function () {
        me.init(next_time);
    }, 1000);
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvbW9kL2NvdW50ZG93bi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WyckJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWyckJ10gOiBudWxsKTtcclxuXHJcbmZ1bmN0aW9uIENvdW50ZG93bihjb250YWluZXIsIHRpbWUsIGZvcm1hdCwgaXNXcmFwLCBpc1dlZWtseURlYWwsIGlzU3BlY2lhbE9mZmVyKSB7XHJcbiAgICB0aGlzLmNvbnRhaW5lciA9ICQoY29udGFpbmVyKTtcclxuICAgIHRoaXMudGltZSA9IHRpbWU7XHJcbiAgICB0aGlzLmZvcm1hdCA9ICh0eXBlb2YoZm9ybWF0KSA9PSAndW5kZWZpbmVkJykgPyAnJyA6IGZvcm1hdDtcclxuICAgIHRoaXMuaXNXcmFwID0gaXNXcmFwIHx8IGZhbHNlO1xyXG4gICAgdGhpcy5pc1dlZWtseURlYWwgPSBpc1dlZWtseURlYWwgfHwgZmFsc2U7XHJcbiAgICB0aGlzLmlzU3BlY2lhbE9mZmVyID0gaXNTcGVjaWFsT2ZmZXIgfHwgZmFsc2U7XHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSBDb3VudGRvd247XHJcblxyXG5Db3VudGRvd24ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmICh0aGlzLmNvbnRhaW5lclswXSkge1xyXG4gICAgICAgIHRoaXMuaW5pdCh0aGlzLnRpbWUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbn07XHJcblxyXG5Db3VudGRvd24ucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAodGltZSkge1xyXG4gICAgdmFyIG1lID0gdGhpcztcclxuICAgIHZhciBjb250YWluZXIgPSBtZS5jb250YWluZXI7XHJcbiAgICB2YXIgbmV4dF90aW1lID0gdGltZSA9IHRpbWUgLSAxID4gMCA/IHRpbWUgLSAxIDogMDtcclxuICAgIHZhciBfZGF5ID0gJycsIF9kYXlUeHQgPSAnJywgaXNEYXlzID0gZmFsc2U7XHJcbiAgICBpZiAodGhpcy5mb3JtYXQgPT0gJ2RheXMnKSB7XHJcbiAgICAgICAgX2RheSA9IE1hdGguZmxvb3IodGltZSAvICgyNCAqIDYwICogNjApKTtcclxuICAgICAgICB0aW1lID0gdGltZSAtIF9kYXkgKiAyNCAqIDYwICogNjA7XHJcbiAgICAgICAgX2RheVR4dCA9IF9sYW5nLnBhZ2VfY29tbW9uX2RheTtcclxuICAgICAgICBpZiAoX2RheSA+PSAyKSB7XHJcbiAgICAgICAgICAgIF9kYXlUeHQgPSBfbGFuZy5wYWdlX2NvbW1vbl9kYXlzO1xyXG4gICAgICAgICAgICBpc0RheXMgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMuaXNXZWVrbHlEZWFsKSB7XHJcbiAgICAgICAgICAgIF9kYXlUeHQgPSAnPHNwYW4gY2xhc3M9XCJkYXlfdHh0XCI+JyArIF9kYXlUeHQgKyAnPC9zcGFuPic7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHZhciBfaG91ciA9IE1hdGguZmxvb3IodGltZSAvICg2MCAqIDYwKSk7XHJcbiAgICB0aW1lID0gdGltZSAtIF9ob3VyICogNjAgKiA2MDtcclxuICAgIHZhciBfbWludXRlID0gTWF0aC5mbG9vcih0aW1lIC8gNjApO1xyXG4gICAgdmFyIF9zZWNvbmQgPSB0aW1lIC0gX21pbnV0ZSAqIDYwO1xyXG4gICAgaWYgKF9ob3VyIDwgMTApIHtcclxuICAgICAgICBfaG91ciA9IFwiMFwiICsgX2hvdXI7XHJcbiAgICB9XHJcbiAgICBpZiAoX21pbnV0ZSA8IDEwKSB7XHJcbiAgICAgICAgX21pbnV0ZSA9ICcwJyArIF9taW51dGU7XHJcbiAgICB9XHJcbiAgICBpZiAoX3NlY29uZCA8IDEwKSB7XHJcbiAgICAgICAgX3NlY29uZCA9ICcwJyArIF9zZWNvbmQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy93cmFwIGRhdGUgdGltZSBmb3JtYXRcclxuICAgIHZhciB0aW1lX3N0ciA9IF9ob3VyICsgJzonICsgX21pbnV0ZSArICc6JyArIF9zZWNvbmQ7XHJcbiAgICBpZiAodGhpcy5pc1dyYXApIHtcclxuICAgICAgICBfZGF5ID0gJzxzcGFuIGNsYXNzPVwiZGF5XCI+JyArIF9kYXkgKyAnPC9zcGFuPic7XHJcbiAgICAgICAgdGltZV9zdHIgPSAnPHNwYW4gY2xhc3M9XCJob3VyXCI+JyArIHRpbWVfc3RyICsgJzwvc3Bhbj4nO1xyXG4gICAgfVxyXG5cclxuICAgIHR4dCA9IF9kYXkgKyAnICcgKyBfZGF5VHh0ICsgJyAnICsgdGltZV9zdHI7XHJcbiAgICBpZiAodGhpcy5pc1dlZWtseURlYWwpIHtcclxuICAgICAgICB2YXIgZGF5VHh0Q2xhc3MgPSBcIndlZWtseV9kYXlfdHh0XCI7XHJcbiAgICAgICAgaWYgKGlzRGF5cykge1xyXG4gICAgICAgICAgICBkYXlUeHRDbGFzcyA9IFwid2Vla2x5X2RheXNfdHh0XCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBkYXlUeHRMYW5nSWQgPSBkYXlUeHRDbGFzcyArIFwiX1wiICsgd2ViRGF0YS5sYW5nO1xyXG4gICAgICAgIF9kYXkgPSAnPHNwYW4gY2xhc3M9XCJ3ZWVrbHlfZGF5XCI+JyArIF9kYXkgKyAnPC9zcGFuPic7XHJcbiAgICAgICAgX2RheVR4dCA9ICc8c3BhbiBjbGFzcz0gJyArIGRheVR4dENsYXNzICsgJyBpZD0nICsgZGF5VHh0TGFuZ0lkICsgJyA+JyArIF9kYXlUeHQgKyAnPC9zcGFuPic7XHJcbiAgICAgICAgX2hvdXIgPSAnPHNwYW4gY2xhc3M9XCJ3ZWVrbHlfaG91clwiPicgKyBfaG91ciArICc8L3NwYW4+JztcclxuICAgICAgICBfbWludXRlID0gJzxzcGFuIGNsYXNzPVwid2Vla2x5X21pbnV0ZVwiPicgKyBfbWludXRlICsgJzwvc3Bhbj4nO1xyXG4gICAgICAgIF9zZWNvbmQgPSAnPHNwYW4gY2xhc3M9XCJ3ZWVrbHlfc2Vjb25kXCI+JyArIF9zZWNvbmQgKyAnPC9zcGFuPic7XHJcblxyXG4gICAgICAgIHZhciB0eHQgPSBfZGF5ICsgX2RheVR4dCArIF9ob3VyICsgX21pbnV0ZSArIF9zZWNvbmQ7XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmlzU3BlY2lhbE9mZmVyKSB7XHJcbiAgICAgICAgaWYgKF9kYXkgPCAxMCkge1xyXG4gICAgICAgICAgICBfZGF5ID0gXCIwXCIgKyBfZGF5O1xyXG4gICAgICAgIH1cclxuICAgICAgICBfZGF5VHh0ID0gJzxlbSBjbGFzcz1cInNwZWNpYWwtb2ZmZXItZGF5LXR4dFwiPkQ8L2VtPic7XHJcbiAgICAgICAgdmFyIGNvbG9uID0gJzxlbSBjbGFzcz1cInNwZWNpYWwtb2ZmZXItY29sb25cIj46PC9lbT4nO1xyXG4gICAgICAgIF9kYXkgPSAnPHNwYW4gY2xhc3M9XCJzcGVjaWFsLW9mZmVyLWRheVwiPicgKyBfZGF5ICsgX2RheVR4dCArICc8L3NwYW4+JztcclxuICAgICAgICBfaG91ciA9ICc8c3BhbiBjbGFzcz1cInNwZWNpYWwtb2ZmZXItaG91clwiPicgKyBfaG91ciArIGNvbG9uICsgJzwvc3Bhbj4nO1xyXG4gICAgICAgIF9taW51dGUgPSAnPHNwYW4gY2xhc3M9XCJzcGVjaWFsLW9mZmVyLW1pbnV0ZVwiPicgKyBfbWludXRlICsgY29sb24gKyAnPC9zcGFuPic7XHJcbiAgICAgICAgX3NlY29uZCA9ICc8c3BhbiBjbGFzcz1cInNwZWNpYWwtb2ZmZXItc2Vjb25kXCI+JyArIF9zZWNvbmQgKyAnPC9zcGFuPic7XHJcblxyXG4gICAgICAgIHR4dCA9IF9kYXkgKyBfaG91ciArIF9taW51dGUgKyBfc2Vjb25kO1xyXG4gICAgfVxyXG4gICAgY29udGFpbmVyLmh0bWwodHh0KTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBtZS5pbml0KG5leHRfdGltZSk7XHJcbiAgICB9LCAxMDAwKTtcclxufTsiXX0=
},{}],21:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {

    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
    var Cookie = require('../mod/cookie');
    var cookie = new Cookie();

	function Dialog() {}
	module.exports = new Dialog();

	Dialog.prototype.open = function(setting) {
		var me = this;
		var params = $.extend({
				modId : 'dialog',
				overlayOpacity : 0.5,
				overlayBgColor : '#000',
				width : Math.min(900, $(window).width() - 100),
				html : '',
			    canClose : true,
				closeWhenClickingBg : false,
                isUpdateHtml : false
			}, setting);

		//show overlayer
		if ($('#dialogOverlay').size() > 0) {
			var layer = $('#dialogOverlay');
		} else {
			var layer = $('<div id="dialogOverlay"><div style="background:' + params.overlayBgColor + ';"></div></div>').prependTo('body');
		};

        layer.show().children('div').stop().fadeTo(0, 0.1).fadeTo("fast", params.overlayOpacity);

		//show dialog box
		if($('#' + params.modId).size() == 0) {
			var html = ['<div class="dialog" id="' + params.modId + '">', '<div class="dialog-wrapper">', '<div class="dialog-content" oncontextmenu="return false">', '<img src="' + webData.IMG_PATH + 'tran.gif" class="dialog-img">', '</div>', '<a href="javascript:void(0)" class="dialog-close"></a>', '</div>', '</div>'];
			if (!params.canClose) {
				html[5] = "";
			}
			layer.after(html.join(''));
		}
		var winbox = $('#' + params.modId);
		var mainShow = winbox.find('.dialog-content');
		var btnClose = winbox.find('.dialog-close');

		if((params.html != "" && mainShow.find('.dialog-img').size() > 0) || (params.html != "" && params.isUpdateHtml)) {
			mainShow.html(params.html);
		}

		winbox.show().css({
			"top" : Math.max(50, $(window).scrollTop() + $(window).height() / 2 - winbox.height() / 2),
			"left" : Math.max(0, $(window).scrollLeft() + $(window).width() / 2 - winbox.width() / 2)
		});

		//click Esc key to hide all dialogs
		$(document).bind('keydown', enableEsc);

		//click overlayer
		layer.unbind();
		if (params.closeWhenClickingBg) {
			layer.bind('click', function () {
				me.close(winbox, true);
			});
		}

		//click close btn
		btnClose.unbind().bind('click', function () {
            if (!$.isEmptyObject(window.review) && window.review.status) {
                window.review = {
                    status: false,
                    url: webData.WEB_ROOT
                }
            }
            if (typeof cookie.getCookie('signInGoogle') != 'undefined' && cookie.getCookie('signInGoogle')) {
                cookie.setCookie('signInGoogle', false, 30);
            }
            cookie.setCookie('scrollTop', 0, -1);
            cookie.setCookie('scrollLeft', 0, -1);
			cookie.setCookie('favGoodsId', 0, -1);
			me.close(winbox, true);
			//return false
		});
		return winbox;
	};
	Dialog.prototype.openRegisterLogin = function(setting) {
		var me = this;
		var params = $.extend({
				modId : 'dialog',
				overlayOpacity : 0.5,
				overlayBgColor : '#000',
				width : Math.min(900, $(window).width() - 100),
				html : '',
			    canClose : true,
				closeWhenClickingBg : false,
                isUpdateHtml : false
			}, setting);

		//show overlayer
		if ($('#dialogOverlay').size() > 0) {
			var layer = $('#dialogOverlay');
		} else {
			var layer = $('<div id="dialogOverlay"><div style="background:' + params.overlayBgColor + ';"></div></div>').prependTo('body');
		};

        layer.show().children('div').stop().fadeTo(0, 0.1).fadeTo("fast", params.overlayOpacity);

		//show dialog box
		if($('#' + params.modId).size() == 0) {
			var html = ['<div class="dialog showroom-login-dialog" id="' + params.modId + '">', '<div class="dialog-wrapper">', '<div class="dialog-content" oncontextmenu="return false">', '<img src="' + webData.IMG_PATH + 'tran.gif" class="dialog-img">', '</div>', '<a href="javascript:void(0)" class="dialog-close"></a>', '</div>', '</div>'];
			if (!params.canClose) {
				html[5] = "";
			}
			layer.after(html.join(''));
		}
		var winbox = $('#' + params.modId);
		var mainShow = winbox.find('.dialog-content');
		var btnClose = winbox.find('.dialog-close');

		if((params.html != "" && mainShow.find('.dialog-img').size() > 0) || (params.html != "" && params.isUpdateHtml)) {
			mainShow.html(params.html);
		}

		// winbox.show().css({
		// 	"top" : Math.max(50, $(window).scrollTop() + $(window).height() / 2 - winbox.height() / 2),
		// 	"left" : Math.max(0, $(window).scrollLeft() + $(window).width() / 2 - winbox.width() / 2)
		// });
		winbox.css('display', 'flex')
		winbox.find('.dialog-close-icon').on('click', function () {
			layer.hide();
			winbox.hide();
		})
		//click Esc key to hide all dialogs
		$(document).bind('keydown', enableEsc);

		//click overlayer
		layer.unbind();
		if (params.closeWhenClickingBg) {
			layer.bind('click', function () {
				me.close(winbox, true);
			});
		}

		//click close btn
		btnClose.unbind().bind('click', function () {
            if (!$.isEmptyObject(window.review) && window.review.status) {
                window.review = {
                    status: false,
                    url: webData.WEB_ROOT
                }
            }
            if (typeof cookie.getCookie('signInGoogle') != 'undefined' && cookie.getCookie('signInGoogle')) {
                cookie.setCookie('signInGoogle', false, 30);
            }
            cookie.setCookie('scrollTop', 0, -1);
            cookie.setCookie('scrollLeft', 0, -1);
			cookie.setCookie('favGoodsId', 0, -1);
			me.close(winbox, true);
			//return false
		});
		return winbox;
	};

	Dialog.prototype.close = function(winbox, isHideOverlay) {
		$(winbox).hide();
		if(isHideOverlay) {
			var layer = $('#dialogOverlay');
			layer.children('div').stop().fadeTo("fast", 0.1, function () {
				layer.hide();
				layer.unbind();
			});
		}
		$(document).unbind('keydown', enableEsc);
	};

	function enableEsc(e) {
		var unicode = e.keyCode ? e.keyCode : e.charCode;
		if (unicode == 27) {
			$('.dialog:visible').hide();
			var layer = $('#dialogOverlay');
			layer.children('div').stop().fadeTo("fast", 0.1, function () {
				layer.hide()
			})
			$(document).unbind('keydown', enableEsc)
		}
	}

//});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{"../mod/cookie":19}],22:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {
	var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
	
	$.fn.formCheck = function (items, params) {
		if (!params)
			params = {};
		params.rules = $.extend({
				'null' : function (obj, checks) {
					return $.trim($(obj).val()).length > 0
				},
				'maxlength' : function (obj, checks) {
					return $.trim($(obj).val()).length <= checks.maxlength
				},
				'minlength' : function (obj, checks) {
					return $.trim($(obj).val()).length >= checks.minlength
				},
				'digitMinlength' : function (obj, checks) {
					return $.trim($(obj).val().replace(/[^0-9]/g, '')).length >= checks.minlength
				},
				'email' : function (obj, checks) {
					return /(\,|^)([\w+._]+@\w+\.(\w+\.){0,3}\w{2,4})/.test($(obj).val().replace(/-|\//g, ''))
				},
				'checked' : function (obj, checks) {
					return obj.checked
				},
				'phone' : function (obj, checks) {
					return /^[\d-\s]{1,20}$/.test($(obj).val()) && $.trim($(obj).val()).replace(/[\s]+/g, ' ').length <= checks.maxlength
				},
				'number' : function (obj, checks) {
					return /^[0-9]+$/.test($.trim($(obj).val()))
				},
				'min' : function (obj, checks) {
					return parseInt($(obj).val()) >= checks.min
				},
				"regexp" : function (obj, checks) {
					return checks.pattern.test($.trim($(obj).val()))
				},
				'select' : function (obj, checks) {
					return $(obj).val() != checks.value
				},
				'user' : function (obj, checks) {
					return /^(?!\d)[a-zA-Z0-9\u4e00-\u9fa5_]{5,18}$/.test($.trim($(obj).val()))
				}
			}, params.rules);
		var result = true,
		focused = false;
		function checkItem(item, checks) {
			for (j in checks) {
				if (params.rules[checks[j].type])
					if (params.rules[checks[j].type](item, checks[j]))
						continue;
                /*
				if (!focused && !checks[j].noFocus) {
					if ($(item).offset().top < $(window).scrollTop()) {
						$('html, body').animate({
							scrollTop : $(item).offset().top
						}, 'fast')
					}
					focused = true
				};
                 */
				if (checks[j].showError) {
					checks[j].showError();
					result = false;
					break
				} else if (params.showError) {
					params.showError($(item), checks[j].errMsg, checks[j].errEvent);
					result = false;
					break
				} else if (params.errinfoFinder) {
					params.errinfoFinder($(item)).text(checks[j].errMsg);
					$(item).focus(function () {
						params.errinfoFinder($(item)).text('');
					});
					if ($(item).attr('type') != null && $(item).attr('type').toLowerCase() == 'checkbox') {
						$(item).click(function () {
							$(item).focus()
						})
					};
					result = false;
					break
				} else if (checks[j].errMsg) {
					alert(checks[j].errMsg);
					return false
				}
			};
			return true
		};
		for (i = 0; i < this[0].length; i++) {
			if ($(this[0][i]).attr('name') && $(this[0][i]).attr('name').length == 0 || $(this[0][i]).prop('disabled'))
				continue;
			var checks = items[$(this[0][i]).attr('name')];
			if (!checks)
				continue;
			if (!checkItem(this[0][i], checks))
				return false
		};
		return result
	};
	
//});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvbW9kL2Zvcm1DaGVjay5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLy9kZWZpbmUoZnVuY3Rpb24gKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkge1xyXG5cdHZhciAkID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJyQnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJyQnXSA6IG51bGwpO1xyXG5cdFxyXG5cdCQuZm4uZm9ybUNoZWNrID0gZnVuY3Rpb24gKGl0ZW1zLCBwYXJhbXMpIHtcclxuXHRcdGlmICghcGFyYW1zKVxyXG5cdFx0XHRwYXJhbXMgPSB7fTtcclxuXHRcdHBhcmFtcy5ydWxlcyA9ICQuZXh0ZW5kKHtcclxuXHRcdFx0XHQnbnVsbCcgOiBmdW5jdGlvbiAob2JqLCBjaGVja3MpIHtcclxuXHRcdFx0XHRcdHJldHVybiAkLnRyaW0oJChvYmopLnZhbCgpKS5sZW5ndGggPiAwXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHQnbWF4bGVuZ3RoJyA6IGZ1bmN0aW9uIChvYmosIGNoZWNrcykge1xyXG5cdFx0XHRcdFx0cmV0dXJuICQudHJpbSgkKG9iaikudmFsKCkpLmxlbmd0aCA8PSBjaGVja3MubWF4bGVuZ3RoXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHQnbWlubGVuZ3RoJyA6IGZ1bmN0aW9uIChvYmosIGNoZWNrcykge1xyXG5cdFx0XHRcdFx0cmV0dXJuICQudHJpbSgkKG9iaikudmFsKCkpLmxlbmd0aCA+PSBjaGVja3MubWlubGVuZ3RoXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHQnZGlnaXRNaW5sZW5ndGgnIDogZnVuY3Rpb24gKG9iaiwgY2hlY2tzKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gJC50cmltKCQob2JqKS52YWwoKS5yZXBsYWNlKC9bXjAtOV0vZywgJycpKS5sZW5ndGggPj0gY2hlY2tzLm1pbmxlbmd0aFxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0J2VtYWlsJyA6IGZ1bmN0aW9uIChvYmosIGNoZWNrcykge1xyXG5cdFx0XHRcdFx0cmV0dXJuIC8oXFwsfF4pKFtcXHcrLl9dK0BcXHcrXFwuKFxcdytcXC4pezAsM31cXHd7Miw0fSkvLnRlc3QoJChvYmopLnZhbCgpLnJlcGxhY2UoLy18XFwvL2csICcnKSlcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdCdjaGVja2VkJyA6IGZ1bmN0aW9uIChvYmosIGNoZWNrcykge1xyXG5cdFx0XHRcdFx0cmV0dXJuIG9iai5jaGVja2VkXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHQncGhvbmUnIDogZnVuY3Rpb24gKG9iaiwgY2hlY2tzKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gL15bXFxkLVxcc117MSwyMH0kLy50ZXN0KCQob2JqKS52YWwoKSkgJiYgJC50cmltKCQob2JqKS52YWwoKSkucmVwbGFjZSgvW1xcc10rL2csICcgJykubGVuZ3RoIDw9IGNoZWNrcy5tYXhsZW5ndGhcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdCdudW1iZXInIDogZnVuY3Rpb24gKG9iaiwgY2hlY2tzKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gL15bMC05XSskLy50ZXN0KCQudHJpbSgkKG9iaikudmFsKCkpKVxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0J21pbicgOiBmdW5jdGlvbiAob2JqLCBjaGVja3MpIHtcclxuXHRcdFx0XHRcdHJldHVybiBwYXJzZUludCgkKG9iaikudmFsKCkpID49IGNoZWNrcy5taW5cclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdFwicmVnZXhwXCIgOiBmdW5jdGlvbiAob2JqLCBjaGVja3MpIHtcclxuXHRcdFx0XHRcdHJldHVybiBjaGVja3MucGF0dGVybi50ZXN0KCQudHJpbSgkKG9iaikudmFsKCkpKVxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0J3NlbGVjdCcgOiBmdW5jdGlvbiAob2JqLCBjaGVja3MpIHtcclxuXHRcdFx0XHRcdHJldHVybiAkKG9iaikudmFsKCkgIT0gY2hlY2tzLnZhbHVlXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHQndXNlcicgOiBmdW5jdGlvbiAob2JqLCBjaGVja3MpIHtcclxuXHRcdFx0XHRcdHJldHVybiAvXig/IVxcZClbYS16QS1aMC05XFx1NGUwMC1cXHU5ZmE1X117NSwxOH0kLy50ZXN0KCQudHJpbSgkKG9iaikudmFsKCkpKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSwgcGFyYW1zLnJ1bGVzKTtcclxuXHRcdHZhciByZXN1bHQgPSB0cnVlLFxyXG5cdFx0Zm9jdXNlZCA9IGZhbHNlO1xyXG5cdFx0ZnVuY3Rpb24gY2hlY2tJdGVtKGl0ZW0sIGNoZWNrcykge1xyXG5cdFx0XHRmb3IgKGogaW4gY2hlY2tzKSB7XHJcblx0XHRcdFx0aWYgKHBhcmFtcy5ydWxlc1tjaGVja3Nbal0udHlwZV0pXHJcblx0XHRcdFx0XHRpZiAocGFyYW1zLnJ1bGVzW2NoZWNrc1tqXS50eXBlXShpdGVtLCBjaGVja3Nbal0pKVxyXG5cdFx0XHRcdFx0XHRjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIC8qXHJcblx0XHRcdFx0aWYgKCFmb2N1c2VkICYmICFjaGVja3Nbal0ubm9Gb2N1cykge1xyXG5cdFx0XHRcdFx0aWYgKCQoaXRlbSkub2Zmc2V0KCkudG9wIDwgJCh3aW5kb3cpLnNjcm9sbFRvcCgpKSB7XHJcblx0XHRcdFx0XHRcdCQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0XHRzY3JvbGxUb3AgOiAkKGl0ZW0pLm9mZnNldCgpLnRvcFxyXG5cdFx0XHRcdFx0XHR9LCAnZmFzdCcpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRmb2N1c2VkID0gdHJ1ZVxyXG5cdFx0XHRcdH07XHJcbiAgICAgICAgICAgICAgICAgKi9cclxuXHRcdFx0XHRpZiAoY2hlY2tzW2pdLnNob3dFcnJvcikge1xyXG5cdFx0XHRcdFx0Y2hlY2tzW2pdLnNob3dFcnJvcigpO1xyXG5cdFx0XHRcdFx0cmVzdWx0ID0gZmFsc2U7XHJcblx0XHRcdFx0XHRicmVha1xyXG5cdFx0XHRcdH0gZWxzZSBpZiAocGFyYW1zLnNob3dFcnJvcikge1xyXG5cdFx0XHRcdFx0cGFyYW1zLnNob3dFcnJvcigkKGl0ZW0pLCBjaGVja3Nbal0uZXJyTXNnLCBjaGVja3Nbal0uZXJyRXZlbnQpO1xyXG5cdFx0XHRcdFx0cmVzdWx0ID0gZmFsc2U7XHJcblx0XHRcdFx0XHRicmVha1xyXG5cdFx0XHRcdH0gZWxzZSBpZiAocGFyYW1zLmVycmluZm9GaW5kZXIpIHtcclxuXHRcdFx0XHRcdHBhcmFtcy5lcnJpbmZvRmluZGVyKCQoaXRlbSkpLnRleHQoY2hlY2tzW2pdLmVyck1zZyk7XHJcblx0XHRcdFx0XHQkKGl0ZW0pLmZvY3VzKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0cGFyYW1zLmVycmluZm9GaW5kZXIoJChpdGVtKSkudGV4dCgnJyk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGlmICgkKGl0ZW0pLmF0dHIoJ3R5cGUnKSAhPSBudWxsICYmICQoaXRlbSkuYXR0cigndHlwZScpLnRvTG93ZXJDYXNlKCkgPT0gJ2NoZWNrYm94Jykge1xyXG5cdFx0XHRcdFx0XHQkKGl0ZW0pLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0XHQkKGl0ZW0pLmZvY3VzKClcclxuXHRcdFx0XHRcdFx0fSlcclxuXHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHRyZXN1bHQgPSBmYWxzZTtcclxuXHRcdFx0XHRcdGJyZWFrXHJcblx0XHRcdFx0fSBlbHNlIGlmIChjaGVja3Nbal0uZXJyTXNnKSB7XHJcblx0XHRcdFx0XHRhbGVydChjaGVja3Nbal0uZXJyTXNnKTtcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdFx0cmV0dXJuIHRydWVcclxuXHRcdH07XHJcblx0XHRmb3IgKGkgPSAwOyBpIDwgdGhpc1swXS5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRpZiAoJCh0aGlzWzBdW2ldKS5hdHRyKCduYW1lJykgJiYgJCh0aGlzWzBdW2ldKS5hdHRyKCduYW1lJykubGVuZ3RoID09IDAgfHwgJCh0aGlzWzBdW2ldKS5wcm9wKCdkaXNhYmxlZCcpKVxyXG5cdFx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0XHR2YXIgY2hlY2tzID0gaXRlbXNbJCh0aGlzWzBdW2ldKS5hdHRyKCduYW1lJyldO1xyXG5cdFx0XHRpZiAoIWNoZWNrcylcclxuXHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0aWYgKCFjaGVja0l0ZW0odGhpc1swXVtpXSwgY2hlY2tzKSlcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdH07XHJcblx0XHRyZXR1cm4gcmVzdWx0XHJcblx0fTtcclxuXHRcclxuLy99KTsiXX0=
},{}],23:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {
    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

    require('./formCheck');


    function FormCheckEach(setting) {
        this.params = $.extend({
            "elem_form": $('form:eq(0)'),
            "items": {},
            "showError": function (obj, errMsg) {
                alert(errMsg);
                obj.focus();
            },
            "cleanError": function (obj) {
            },
            "rules": {}
        }, setting);
    }

    module.exports = FormCheckEach;

    FormCheckEach.prototype.checkOne = function (ipt, isShowError) {
        var me = this;
        var ipt_name = ipt.attr('name');

        //检查之前清除错误
        me.params.cleanError(ipt);

        for (var key in me.params.items) {
            if (ipt_name == key) {
                var item = {};
                item[ipt_name] = me.params.items[key];
                var isChecked = me.params.elem_form.formCheck(item, {
                    showError: function (obj, errMsg) {
                        if (isShowError) {
                            me.params.showError(obj, errMsg);
                        }
                    },
                    rules: me.params.rules
                });

                if (isChecked) {
                    me.params.cleanError(ipt);
                } else {
                    return false;
                }
                break;
            }
        }
        return true;
    };

    FormCheckEach.prototype.checkAll = function (ipts, isShowError) {
        var me = this;

        //检查之前清除错误
        for (var i = 0; i < ipts.length; i++) {
            me.params.cleanError(ipts.eq(i));
        }

        for (var i = 0; i < ipts.length; i++) {
            if(! me.checkOne(ipts.eq(i), isShowError)) {
                return false;
            }
        }
        return true;
    };

//});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvbW9kL2Zvcm1DaGVja0VhY2guanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvL2RlZmluZShmdW5jdGlvbiAocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7XHJcbiAgICB2YXIgJCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WyckJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWyckJ10gOiBudWxsKTtcclxuXHJcbiAgICByZXF1aXJlKCcuL2Zvcm1DaGVjaycpO1xyXG5cclxuXHJcbiAgICBmdW5jdGlvbiBGb3JtQ2hlY2tFYWNoKHNldHRpbmcpIHtcclxuICAgICAgICB0aGlzLnBhcmFtcyA9ICQuZXh0ZW5kKHtcclxuICAgICAgICAgICAgXCJlbGVtX2Zvcm1cIjogJCgnZm9ybTplcSgwKScpLFxyXG4gICAgICAgICAgICBcIml0ZW1zXCI6IHt9LFxyXG4gICAgICAgICAgICBcInNob3dFcnJvclwiOiBmdW5jdGlvbiAob2JqLCBlcnJNc2cpIHtcclxuICAgICAgICAgICAgICAgIGFsZXJ0KGVyck1zZyk7XHJcbiAgICAgICAgICAgICAgICBvYmouZm9jdXMoKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJjbGVhbkVycm9yXCI6IGZ1bmN0aW9uIChvYmopIHtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJydWxlc1wiOiB7fVxyXG4gICAgICAgIH0sIHNldHRpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIG1vZHVsZS5leHBvcnRzID0gRm9ybUNoZWNrRWFjaDtcclxuXHJcbiAgICBGb3JtQ2hlY2tFYWNoLnByb3RvdHlwZS5jaGVja09uZSA9IGZ1bmN0aW9uIChpcHQsIGlzU2hvd0Vycm9yKSB7XHJcbiAgICAgICAgdmFyIG1lID0gdGhpcztcclxuICAgICAgICB2YXIgaXB0X25hbWUgPSBpcHQuYXR0cignbmFtZScpO1xyXG5cclxuICAgICAgICAvL+ajgOafpeS5i+WJjea4hemZpOmUmeivr1xyXG4gICAgICAgIG1lLnBhcmFtcy5jbGVhbkVycm9yKGlwdCk7XHJcblxyXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBtZS5wYXJhbXMuaXRlbXMpIHtcclxuICAgICAgICAgICAgaWYgKGlwdF9uYW1lID09IGtleSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB7fTtcclxuICAgICAgICAgICAgICAgIGl0ZW1baXB0X25hbWVdID0gbWUucGFyYW1zLml0ZW1zW2tleV07XHJcbiAgICAgICAgICAgICAgICB2YXIgaXNDaGVja2VkID0gbWUucGFyYW1zLmVsZW1fZm9ybS5mb3JtQ2hlY2soaXRlbSwge1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3dFcnJvcjogZnVuY3Rpb24gKG9iaiwgZXJyTXNnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1Nob3dFcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUucGFyYW1zLnNob3dFcnJvcihvYmosIGVyck1zZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHJ1bGVzOiBtZS5wYXJhbXMucnVsZXNcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChpc0NoZWNrZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBtZS5wYXJhbXMuY2xlYW5FcnJvcihpcHQpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH07XHJcblxyXG4gICAgRm9ybUNoZWNrRWFjaC5wcm90b3R5cGUuY2hlY2tBbGwgPSBmdW5jdGlvbiAoaXB0cywgaXNTaG93RXJyb3IpIHtcclxuICAgICAgICB2YXIgbWUgPSB0aGlzO1xyXG5cclxuICAgICAgICAvL+ajgOafpeS5i+WJjea4hemZpOmUmeivr1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXB0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBtZS5wYXJhbXMuY2xlYW5FcnJvcihpcHRzLmVxKGkpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXB0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZighIG1lLmNoZWNrT25lKGlwdHMuZXEoaSksIGlzU2hvd0Vycm9yKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfTtcclxuXHJcbi8vfSk7Il19
},{"./formCheck":22}],24:[function(require,module,exports){
(function (global){
//define(function(require, exports, module) {

    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

    $.fn.fullScreenCarousel = function (obj) {
        var viewport = $(this).find("#full_screen_viewport");
        var itemList = viewport.find("ul");
        var items = itemList.find("li:visible");
        var btnPrev = $(this).find(".full-screen-prev-arraw");
        var btnNext = $(this).find(".full-screen-next-arraw");

        var init_left_right = (obj && obj.init_left_right) ? obj.init_left_right : false;
        var btnLeft = $(".full-screen-left-arraw");
        var btnRight = $(".full-screen-right-arraw");

        var isShowBtn = false;
        var isMoveOne = true;
        var itemsLen = items.length;
        if (itemsLen < 2) {
            return false;
        }

        btnLeft.show();
        btnRight.show();

        var viewportHeight = viewport.height();
        var unit = items.eq(1).height();
        var viewItemsLen = Math.floor((viewportHeight + 2 + 30) / (unit + 8));
        if (itemsLen > viewItemsLen) {
            btnPrev.show();
            btnNext.show();
            isShowBtn = true;
        }

        var moveLen = 1;
        var speed = 200;
        viewport.scrollTop(0);

        var prevStep = function(idx){
            if(idx <= 0) return false;
            if(itemList.find("li:last-child:visible").length == 0){
                var itemListVisible = itemList.find("li:visible");
                itemListVisible.appendTo(itemList);
            }
            itemList.find("li:last-child").prependTo(itemList);
            viewport.scrollTop(unit);
            viewport.animate({
                scrollTop : 0
            }, speed, function(){
                prevStep(idx - 1);
            });
        };
        var nextStep = function(idx){
            if(idx <= 0) return false;
            viewport.animate({
                scrollTop : unit
            }, speed, function(){
                if(itemList.find("li:first-child:visible").length == 0){
                    var itemListVisible = itemList.find("li:visible");
                    itemListVisible.prependTo(itemList);
                }
                itemList.find("li:first-child").appendTo(itemList);
                viewport.scrollTop(0);
                nextStep(idx - 1);
            });
        };

        if(isShowBtn){
            btnPrev.click(function () {
                if (!viewport.is(':animated')) {
                    prevStep(moveLen);
                }
            });

            btnNext.click(function () {
                if (!viewport.is(':animated')) {
                    nextStep(moveLen);
                }
            });
        }

        items.find('img').click(function(){
            if (isMoveOne && isShowBtn) {
                var idx = $(this).closest('li').index();
                if (idx == 0) {
                    prevStep(1);
                } else if(idx == viewItemsLen - 1) {
                    if (!viewport.is(':animated')) {
                        nextStep(1);
                    }
                }
            }
        });

        if (init_left_right) {
            btnLeft.unbind("click");
            btnRight.unbind("click");

            btnLeft.click(function () {
                var activeThumb = itemList.find('a.full-screen-zoomThumb.full-screen-zoomThumbActive');
                var liIdx = activeThumb.closest('li').index();
                if (itemsLen > viewItemsLen) {
                    if (liIdx == 0) {
                        itemList.find("li:last-child").prependTo(itemList);
                        itemList.find('.full-screen-zoomThumb:eq('+liIdx+')').find('img').click();
                    } else {
                        itemList.find('.full-screen-zoomThumb:eq('+(liIdx-1)+')').find('img').click();
                    }
                } else {
                    if (liIdx == 0) {
                        itemList.find('.full-screen-zoomThumb:eq('+(itemsLen-1)+')').find('img').click();
                    } else {
                        itemList.find('.full-screen-zoomThumb:eq('+(liIdx-1)+')').find('img').click();
                    }
                }
            });

            btnRight.click(function () {
                var activeThumb = itemList.find('a.full-screen-zoomThumb.full-screen-zoomThumbActive');
                var liIdx = activeThumb.closest('li').index();
                if (itemsLen > viewItemsLen) {
                    if (liIdx == viewItemsLen - 1) {
                        itemList.find("li:first-child").appendTo(itemList);
                        itemList.find('.full-screen-zoomThumb:eq('+liIdx+')').find('img').click();
                    } else {
                        itemList.find('.full-screen-zoomThumb:eq('+(liIdx+1)+')').find('img').click();
                    }
                } else {
                    if (liIdx == itemsLen - 1) {
                        itemList.find('.full-screen-zoomThumb:eq(0)').find('img').click();
                    } else {
                        itemList.find('.full-screen-zoomThumb:eq('+(liIdx+1)+')').find('img').click();
                    }
                }
            });
        }
    };

//});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{}],25:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

var dialog = $('#offgoods-subscribe-dialog')

function popSubscribeOffGoods(goods_id, source, onSuccess) {
    this.goods_id = goods_id
    this.source = source
    this.onSuccess = onSuccess
    this.isSubmitting = false
}

module.exports = popSubscribeOffGoods;

function checkEmail() {
    var email = $(dialog).find('#offgoods_subscribe_email').val()
    email = $.trim(email.replace(/-|\//g, ''))

    clearError()

    if (email.length <= 0) {
        showError(_lang.page_login_enter_email)
        return false;
    }

    if (!/(\,|^)([\w+._]+@\w+\.(\w+\.){0,3}\w{2,4})/.test(email)) {
        showError(_lang.page_login_email_invalid)
        return false;
    }

    return email;
}


function clearError() {
    var errorTip = $(dialog).find('.error-tip')
    errorTip.text()
    errorTip.hide()
}

function showError(msg) {
    var errorTip = $(dialog).find('.error-tip')
    errorTip.text(msg)
    errorTip.show()
}

popSubscribeOffGoods.prototype.showSuccessPanel = function() {
    var subscribePanel = $(dialog).find('.subscribe-container')
    var successPanel = $(dialog).find('.success-container')
    var self = this

    this.openDialog()
    $(subscribePanel).hide()
    $(successPanel).show()
    $(dialog).find('.dialog-close-icon').hide()

    setTimeout(function() {
        self.closeDialog()
    }, 3000)
}

popSubscribeOffGoods.prototype.showFailPanel = function() {
    var dialogWrapper = $(dialog).find('.dialog-wrapper')
    var subscribePanel = $(dialog).find('.subscribe-container')
    var failPanel = $(dialog).find('.fail-container')
    var self = this


    this.openDialog()
    $(dialogWrapper).addClass('mini')
    $(subscribePanel).hide()
    $(failPanel).show()
    $(dialog).find('.dialog-close-icon').hide()

    setTimeout(function() {
        if (window.login_status) {
            self.closeDialog()
        } else {
            self.hideFailPanel()
        }
    }, 1000)
}

popSubscribeOffGoods.prototype.hideFailPanel = function() {
    var dialogWrapper = $(dialog).find('.dialog-wrapper')
    var subscribePanel = $(dialog).find('.subscribe-container')
    var failPanel = $(dialog).find('.fail-container')

    $(dialogWrapper).removeClass('mini')

    $(failPanel).hide()
    $(subscribePanel).show()
    $(dialog).find('.dialog-close-icon').show()
}

popSubscribeOffGoods.prototype.subscribeOffGoods = function(email) {
    if (this.isSubmitting) {
        return false
    }

    var self = this
    var data = {
        act: "subscribe_off_goods",
        goods_id: this.goods_id,
        source: this.source,
    }

    if (email != undefined) {
        data.email = email
    }

    this.isSubmitting = true
    $.ajax({
        method: "POST",
        url: "/ajax.php",
        dataType: 'json',
        data: data,
        success: function(r) {
            this.isSubmitting = false
            if (r.error == 0) {
                self.showSuccessPanel()
                self.onSuccess()
            } else {
                self.showFailPanel()
            }
        },
        error: function() {
            this.isSubmitting = false
            self.showFailPanel()
        }
    });
}

popSubscribeOffGoods.prototype.closeDialog = function() {
    $('#dialogOverlay').hide()
    $(dialog).hide()
}


popSubscribeOffGoods.prototype.bindEvent = function() {
    var self = this
    $(dialog).find('.editable-clear-x').on('click', function() {
        $(dialog).find('#offgoods_subscribe_email').val("")
    })
    $(dialog).find('#offgoods_subscribe_button').on('click', function() {
        var email = checkEmail()
        if (email) {
            self.subscribeOffGoods(email)
        }
    })
    $(dialog).find('.dialog-close-icon').on('click', this.closeDialog)
}

popSubscribeOffGoods.prototype.openDialog = function() {
    if (dialog.length == 0) {
        return false
    }

    if ($('#dialogOverlay').size() > 0) {
        var layer = $('#dialogOverlay')
    } else {
        var layer = $('<div id="dialogOverlay"><div style="background:rgb(0,0,0);"></div></div>').prependTo('body')
    }
    layer.show().children('div').stop().fadeTo(0, 0.1).fadeTo("fast", 0.5)
    $(dialog).css('display', 'flex')

    clearError()
    $(dialog).find('#offgoods_subscribe_email').val("")

    return true
}

popSubscribeOffGoods.prototype.open = function() {
    this.bindEvent()
    if (window.login_status) {
        this.subscribeOffGoods()
    } else {
        this.openDialog()
    }
}


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{}],26:[function(require,module,exports){
//define(function (require, exports, module) {
function number_format(number, decimals, dec_point, thousands_sep) {
    var n = !isFinite(+number) ? 0 : +number;
    var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals);
    var sep = (typeof thousands_sep === "undefined") ? "," : thousands_sep;
    var dec = (typeof dec_point === "undefined") ? "." : dec_point;
    var s = "";
    var toFixedFix = function(n, prec) {
        var k = Math.pow(10, prec);
        return "" + Math.round(n * k) / k;
    };
    s = (prec ? toFixedFix(n, prec) : "" + Math.round(n)).split(".");
    if (s[0].length > 3) {
        s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
    }
    if ((s[1] || "").length < prec) {
        s[1] = s[1] || "";
        s[1] += new Array(prec - s[1].length + 1).join("0");
    }
    return s.join(dec);
}

    function PriceStyle() {
        this.currency = webData.currency;
        this.lang = webData.lang;
        this.customPriceDisplay = (webData.price_display_format && webData.price_display_format[this.currency]) ? webData.price_display_format[this.currency] : {};
    }
    module.exports = new PriceStyle();


    PriceStyle.prototype.formatPrice = function (price) {
        var currency = this.currency;
        var lang = webData.lang;
        var customPriceDisplayTemp = this.customPriceDisplay && this.customPriceDisplay['default'] ? this.customPriceDisplay['default'] : this.customPriceDisplay
        var customPriceDisplayTemp = this.customPriceDisplay && this.customPriceDisplay[lang] ? this.customPriceDisplay[lang] : this.customPriceDisplay
        this.customPriceDisplay = customPriceDisplayTemp;

        if (this.customPriceDisplay.format) {
            var format = this.customPriceDisplay.format;
            if (format.ceil) {
                price = number_format(Math.ceil(price), format.decimals, format.dec_point, format.thousands_sep);
            } else {
                price = number_format(price, format.decimals, format.dec_point, format.thousands_sep);
            }
        } else {
            if (!currency) {
                return price;
            }
            switch (currency) {
                case "JPY":
                case "MXN":
                case "INR":
                    price = number_format(price, 0, "", ",");
                    break;
                case "NOK":
                case "RUB":
                case "SEK":
                    price = number_format(price, 0, "", " ");
                    break;
                case "DKK":
                case "ARS":
                case "CLP":
                    price = number_format(price, 0, "", ".");
                    break;
                case "USD":
                case "GBP":
                case "AUD":
                case "CHF":
                case "CAD":
                case "NZD":
                case "ZAR":
                case "SGD":
                case "HKD":
                case "AED":
                    price = number_format(price, 2, ".", ",");
                    break;
                case "BRL":
                case "TRY":
                    price = number_format(price, 2, ",", ".");
                    break;
                case "PLN":
                case "CZK":
                    price = number_format(price, 2, ",", " ");
                    break;
                case 'EUR':
                    switch (lang) {
                        case 'fr':
                        case 'fi':
                            price = number_format(price, 2, ",", " ");
                            break;
                        case 'de':
                        case 'nl':
                        case 'pt':
                        case 'es':
                            price = number_format(price, 2, ",", ".");
                            break;
                        default:
                            price = number_format(price, 2, ".", ",");
                    }
                    break;
                case 'COP':
                    price = number_format(price, 0, ",", ".");
                    break;
                case 'ARS':
                    price = number_format(price, 0, ",", ".");
                    break;
                case 'MAD':
                    price = number_format(price, 2, ".", ",");
                    break;
                case 'NGN':
                    price = number_format(price, 2, ".", ",");
                    break;
                default:
                    price = number_format(price, 2, ".", "");
            }
        }
        return price;
    }

    PriceStyle.prototype.priceStyleModify = function (price, str) {
        var _price = price + '';
        if (_price.indexOf(str) > 0) {
            var _str = _price.split(str);
            price = _str[0] + str + '<sup>' + _str[1] + '</sup>';
        }else{
            price = price + '<sup></sup>';
        }
        return price;
    };

    PriceStyle.prototype.formatStyle = function (price) {
        var currency = this.currency;
        var _price = this.formatPrice(price);
        if (this.customPriceDisplay.format) {
            var format = this.customPriceDisplay.format;
            var des_point_array = {
                '.': '.<sup>',
                ',': ',<sup>',
            }
            _price = _price.replace(format.dec_point, des_point_array[format.dec_point], _price) + '</sup>';
            return _price;
        };

        if (currency === 'RUB' || currency === 'BRL' || currency === 'NOK') {
            _price = this.priceStyleModify(_price, ',')
        } else {
            _price = this.priceStyleModify(_price, '.')
        }
        return _price
    };



    PriceStyle.prototype.formatWithSymbol = function (price, hasSpace) {
        var price = this.formatPrice(price);
        var currency = this.currency;
        var customPriceDisplay = this.customPriceDisplay;
        var space = hasSpace ? ' ' : '';
        if ((currency == "EUR" && this.lang == "fr") || (customPriceDisplay.format && customPriceDisplay.format.amount_first)) {
            result = price + space + webData.currency_symbol;
        } else {
            result = webData.currency_symbol + space + price;
        }
        return result;
    };

PriceStyle.prototype.toUSD = function (value,currency) {
    if (!currency) {
        return value
    }
    return value * parseFloat(currency.base) / parseFloat(currency.exchange)
}

PriceStyle.prototype.fromUSD = function (value,currency) {
    if (!currency) {
        return value
    }
    var currentCurrencyValue = value * parseFloat(currency.exchange) / parseFloat(currency.base)
    var methods = webData.price_change_method || {}
    var method = methods[currency.name] || ''
    currentCurrencyValue = priceAfterChange(method, currentCurrencyValue, value)
    return currentCurrencyValue
}

function priceAfterChange(method, currentCurrencyValue, value) {
    switch(method) {
        case 'ceil':
            currentCurrencyValue = Math.ceil(currentCurrencyValue)
            break
        case 'round':
            if (Math.abs(value) > 5) {
                var sign = currentCurrencyValue < 0 ? -1 : 1
                currentCurrencyValue = Math.round(Math.abs(currentCurrencyValue)) * sign
            }
            break
        case 'floor':
            currentCurrencyValue = Math.floor(currentCurrencyValue)
            break
        default:
            break
    }
    return currentCurrencyValue
}


},{}],27:[function(require,module,exports){
//define(function(require, exports, module) {
function StringHandle() {}
module.exports = StringHandle;

StringHandle.prototype.quoteattr = function (string, preserveCR) {
	preserveCR = preserveCR ? '&#13;' : '\n';
	return ('' + string)                   /* Forces the conversion to string. */
		.replace(/&/g, '&amp;')            /* This MUST be the 1st replacement. */
		.replace(/'/g, '&apos;')           /* The 4 other predefined entities, required. */
		.replace(/"/g, '&quot;')
		.replace(/</g, '&lt;')
		.replace(/>/g, '&gt;')
		/*
		 You may add other replacements here for HTML only
		 (but it's not necessary).
		 Or for XML, only if the named entities are defined in its DTD.
		 */
		.replace(/\r\n/g, preserveCR)      /* Must be before the next replacement. */
		.replace(/[\r\n]/g, preserveCR);
	;
}

//});
},{}],28:[function(require,module,exports){
(function (global){
//define(function(require, exports, module) {

	var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
	
	$.fn.texttip = function(options) {
		var me = $(this);
		if (!$('#texttip')[0]) $('body').prepend('<span id="texttip" class="texttip"><em class="arrow"></em></span>');
		function findTotalOffset(obj) {
			var ol = ot = 0;
			if (obj.offsetParent) {
				do {
					ol += obj.offsetLeft;
					ot += obj.offsetTop
				} while ( obj = obj . offsetParent )
			};
			return {
				left: ol,
				top: ot
			}
		};
		$(this).hover(function() {
			var _obj = findTotalOffset($(this)[0]);
			var offset_left = (options.left == undefined ? 8 : options.left),
			    offset_top  = (options.top == undefined ? 4 : options.top);
			$('#texttip').html('<em class="arrow"></em>' + options.html).css({
				top: (_obj.top + me.height() + offset_top),
				left: _obj.left - offset_left
			}).show();
		},
		function() {
			$('#texttip').hide()
		})
	};
	
//});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvbW9kL3RleHR0aXAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLy9kZWZpbmUoZnVuY3Rpb24ocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7XHJcblxyXG5cdHZhciAkID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJyQnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJyQnXSA6IG51bGwpO1xyXG5cdFxyXG5cdCQuZm4udGV4dHRpcCA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcclxuXHRcdHZhciBtZSA9ICQodGhpcyk7XHJcblx0XHRpZiAoISQoJyN0ZXh0dGlwJylbMF0pICQoJ2JvZHknKS5wcmVwZW5kKCc8c3BhbiBpZD1cInRleHR0aXBcIiBjbGFzcz1cInRleHR0aXBcIj48ZW0gY2xhc3M9XCJhcnJvd1wiPjwvZW0+PC9zcGFuPicpO1xyXG5cdFx0ZnVuY3Rpb24gZmluZFRvdGFsT2Zmc2V0KG9iaikge1xyXG5cdFx0XHR2YXIgb2wgPSBvdCA9IDA7XHJcblx0XHRcdGlmIChvYmoub2Zmc2V0UGFyZW50KSB7XHJcblx0XHRcdFx0ZG8ge1xyXG5cdFx0XHRcdFx0b2wgKz0gb2JqLm9mZnNldExlZnQ7XHJcblx0XHRcdFx0XHRvdCArPSBvYmoub2Zmc2V0VG9wXHJcblx0XHRcdFx0fSB3aGlsZSAoIG9iaiA9IG9iaiAuIG9mZnNldFBhcmVudCApXHJcblx0XHRcdH07XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0bGVmdDogb2wsXHJcblx0XHRcdFx0dG9wOiBvdFxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0JCh0aGlzKS5ob3ZlcihmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyIF9vYmogPSBmaW5kVG90YWxPZmZzZXQoJCh0aGlzKVswXSk7XHJcblx0XHRcdHZhciBvZmZzZXRfbGVmdCA9IChvcHRpb25zLmxlZnQgPT0gdW5kZWZpbmVkID8gOCA6IG9wdGlvbnMubGVmdCksXHJcblx0XHRcdCAgICBvZmZzZXRfdG9wICA9IChvcHRpb25zLnRvcCA9PSB1bmRlZmluZWQgPyA0IDogb3B0aW9ucy50b3ApO1xyXG5cdFx0XHQkKCcjdGV4dHRpcCcpLmh0bWwoJzxlbSBjbGFzcz1cImFycm93XCI+PC9lbT4nICsgb3B0aW9ucy5odG1sKS5jc3Moe1xyXG5cdFx0XHRcdHRvcDogKF9vYmoudG9wICsgbWUuaGVpZ2h0KCkgKyBvZmZzZXRfdG9wKSxcclxuXHRcdFx0XHRsZWZ0OiBfb2JqLmxlZnQgLSBvZmZzZXRfbGVmdFxyXG5cdFx0XHR9KS5zaG93KCk7XHJcblx0XHR9LFxyXG5cdFx0ZnVuY3Rpb24oKSB7XHJcblx0XHRcdCQoJyN0ZXh0dGlwJykuaGlkZSgpXHJcblx0XHR9KVxyXG5cdH07XHJcblx0XHJcbi8vfSk7XHJcbiJdfQ==
},{}],29:[function(require,module,exports){
//define(function (require, exports, module) {

    function UserAgent() {}
    module.exports = UserAgent;

    UserAgent.prototype.isIpad = function () {
        if (navigator.userAgent.match(/iPad/i)) {
            return true;
        } else {
            return false;
        }
    }
    
    UserAgent.prototype.isPhone = function () {
        if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/) || navigator.userAgent.match(/Windows Phone/i) ||	navigator.userAgent.match(/ZuneWP7/i)) {
            return true;
        } else {
            return false;
        }
    }

    UserAgent.prototype.isIE = function () {
        var userAgent = navigator.userAgent.toLowerCase();
        var isIE = (/msie/.test(userAgent) && !/opera/.test(userAgent)) ? true : false;
        return isIE;
    }

    UserAgent.prototype.isIEVersion = function (version) {
        var userAgent = navigator.userAgent.toLowerCase();
        var isIE = (/msie/.test(userAgent) && !/opera/.test(userAgent)) ? true : false;
        var uaVersion = (userAgent.match( /.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/ ) || [])[1];
        if(isIE && parseInt(uaVersion) == parseInt(version)) {
            return true;
        } else {
            return false;
        }
    }
    UserAgent.prototype.detectBrowser=function(){
        var ua= navigator.userAgent, tem, 
        M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
        if(/trident/i.test(M[1])){
            tem=  /\brv[ :]+(\d+)/g.exec(ua) || [];
            return 'IE '+(tem[1] || '');
        }
        if(M[1]=== 'Chrome'){
            tem= ua.match(/\bOPR\/(\d+)/)
            if(tem!= null) return 'Opera '+tem[1];
        }
        M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];
        if((tem= ua.match(/version\/(\d+)/i))!= null) M.splice(1, 1, tem[1]);
        return M.join(' ');
    };

//});
},{}],"goodsform":[function(require,module,exports){
//define(function (require, exports, module) {
	// price and off-countdown
	require('./goods/price');
	
	// add_to_cart
	require('./goods/add_to_cart').init();

    require('./goods/necklaces_preview').init();
    require('./goods/sale_gift').init();
//});
},{"./goods/add_to_cart":3,"./goods/necklaces_preview":6,"./goods/price":7,"./goods/sale_gift":8}]},{},[])
//# sourceMappingURL=data:application/json;base64,
