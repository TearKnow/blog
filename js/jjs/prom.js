require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
//define(function (require, exports, module) {

	function Cookie() {}
	module.exports = Cookie;
	var cookie_domain = webData.cookie_domain
	
	Cookie.prototype.setCookie = function (NameOfCookie, value, expiredays, domain) {
		if (expiredays == null || expiredays == undefined || expiredays == '' || isNaN(expiredays)) {
			expiredays = 365;
		}
		var ExpireDate = new Date();
		ExpireDate.setTime(ExpireDate.getTime() + (expiredays * 24 * 3600 * 1000));
		domain = domain ? domain : cookie_domain
        var _domain = domain ? ";domain=" + domain : ""
		document.cookie = NameOfCookie + "=" + escape(value) + _domain + ((expiredays == null) ? "": ";path=/; expires=" + ExpireDate.toGMTString());
	}

	Cookie.prototype.getCookie = function (NameOfCookie) {
		if (document.cookie.length > 0) {
			begin = document.cookie.indexOf(NameOfCookie + "=");
			if (begin != -1) {
				begin += NameOfCookie.length + 1;
				end = document.cookie.indexOf(";", begin);
				if (end == -1) end = document.cookie.length;
				return unescape(document.cookie.substring(begin, end));
			}
		}
		return null;
	}
	
//});

},{}],2:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {
	
	var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
	
	function Referer() {}
	module.exports = Referer;
	
	Referer.prototype.run = function() {
		var referer = document.referrer;
		var url = document.URL;
		var re = new RegExp(/https*:\/\/(dev|ft|p|www)\.jjshouse\.com/);
		if(referer == '' || referer.search(re) == -1) {
			$.ajax({
				type: 'POST',
				url: webData.WEB_ROOT + 'v5_ajax.php',
				dataType: 'text',
				data: {'act':'mark_referer','referer':referer,'url':url},
				success: function(r){}
			});
		}
	}

	$(document).ready(function () {
        var Cookie = require('../mod/cookie');
        var cookie = new Cookie();
        var referer = document.referrer;
        var re = new RegExp(/\.(google|facebook|pinterest|youtube|bing|instagram)\./);
        if(cookie.getCookie('shareasaleSSCID') != null && referer.search(re) >= 0) {
            cookie.setCookie('shareasaleSSCID', '', 1);
        }
	})
//});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvbW9kL3JlZmVyZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLy9kZWZpbmUoZnVuY3Rpb24gKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkge1xyXG5cdFxyXG5cdHZhciAkID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJyQnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJyQnXSA6IG51bGwpO1xyXG5cdFxyXG5cdGZ1bmN0aW9uIFJlZmVyZXIoKSB7fVxyXG5cdG1vZHVsZS5leHBvcnRzID0gUmVmZXJlcjtcclxuXHRcclxuXHRSZWZlcmVyLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciByZWZlcmVyID0gZG9jdW1lbnQucmVmZXJyZXI7XHJcblx0XHR2YXIgdXJsID0gZG9jdW1lbnQuVVJMO1xyXG5cdFx0dmFyIHJlID0gbmV3IFJlZ0V4cCgvaHR0cHMqOlxcL1xcLyhkZXZ8ZnR8cHx3d3cpXFwuampzaG91c2VcXC5jb20vKTtcclxuXHRcdGlmKHJlZmVyZXIgPT0gJycgfHwgcmVmZXJlci5zZWFyY2gocmUpID09IC0xKSB7XHJcblx0XHRcdCQuYWpheCh7XHJcblx0XHRcdFx0dHlwZTogJ1BPU1QnLFxyXG5cdFx0XHRcdHVybDogd2ViRGF0YS5XRUJfUk9PVCArICd2NV9hamF4LnBocCcsXHJcblx0XHRcdFx0ZGF0YVR5cGU6ICd0ZXh0JyxcclxuXHRcdFx0XHRkYXRhOiB7J2FjdCc6J21hcmtfcmVmZXJlcicsJ3JlZmVyZXInOnJlZmVyZXIsJ3VybCc6dXJsfSxcclxuXHRcdFx0XHRzdWNjZXNzOiBmdW5jdGlvbihyKXt9XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0JChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBDb29raWUgPSByZXF1aXJlKCcuLi9tb2QvY29va2llJyk7XHJcbiAgICAgICAgdmFyIGNvb2tpZSA9IG5ldyBDb29raWUoKTtcclxuICAgICAgICB2YXIgcmVmZXJlciA9IGRvY3VtZW50LnJlZmVycmVyO1xyXG4gICAgICAgIHZhciByZSA9IG5ldyBSZWdFeHAoL1xcLihnb29nbGV8ZmFjZWJvb2t8cGludGVyZXN0fHlvdXR1YmV8YmluZ3xpbnN0YWdyYW0pXFwuLyk7XHJcbiAgICAgICAgaWYoY29va2llLmdldENvb2tpZSgnc2hhcmVhc2FsZVNTQ0lEJykgIT0gbnVsbCAmJiByZWZlcmVyLnNlYXJjaChyZSkgPj0gMCkge1xyXG4gICAgICAgICAgICBjb29raWUuc2V0Q29va2llKCdzaGFyZWFzYWxlU1NDSUQnLCAnJywgMSk7XHJcbiAgICAgICAgfVxyXG5cdH0pXHJcbi8vfSk7XHJcbiJdfQ==
},{"../mod/cookie":1}],3:[function(require,module,exports){
//define(function (require, exports, module) {

    function UserAgent() {}
    module.exports = UserAgent;

    UserAgent.prototype.isIpad = function () {
        if (navigator.userAgent.match(/iPad/i)) {
            return true;
        } else {
            return false;
        }
    }
    
    UserAgent.prototype.isPhone = function () {
        if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/) || navigator.userAgent.match(/Windows Phone/i) ||	navigator.userAgent.match(/ZuneWP7/i)) {
            return true;
        } else {
            return false;
        }
    }

    UserAgent.prototype.isIE = function () {
        var userAgent = navigator.userAgent.toLowerCase();
        var isIE = (/msie/.test(userAgent) && !/opera/.test(userAgent)) ? true : false;
        return isIE;
    }

    UserAgent.prototype.isIEVersion = function (version) {
        var userAgent = navigator.userAgent.toLowerCase();
        var isIE = (/msie/.test(userAgent) && !/opera/.test(userAgent)) ? true : false;
        var uaVersion = (userAgent.match( /.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/ ) || [])[1];
        if(isIE && parseInt(uaVersion) == parseInt(version)) {
            return true;
        } else {
            return false;
        }
    }
    UserAgent.prototype.detectBrowser=function(){
        var ua= navigator.userAgent, tem, 
        M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
        if(/trident/i.test(M[1])){
            tem=  /\brv[ :]+(\d+)/g.exec(ua) || [];
            return 'IE '+(tem[1] || '');
        }
        if(M[1]=== 'Chrome'){
            tem= ua.match(/\bOPR\/(\d+)/)
            if(tem!= null) return 'Opera '+tem[1];
        }
        M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];
        if((tem= ua.match(/version\/(\d+)/i))!= null) M.splice(1, 1, tem[1]);
        return M.join(' ');
    };

//});
},{}],"prom":[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {
	// mark referer
	require('./mod/referer');
	
	var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);	
	var UserAgent = require('./mod/userAgent');
	var userAgent = new UserAgent();	
	var isPadOrPhone = userAgent.isIpad() || userAgent.isPhone();	
	var isIE67 = userAgent.isIEVersion('6.0') || userAgent.isIEVersion('7.0');

	if (!isIE67 && $(".prom-menu").length > 0) {	
		var menu_height = $(".prom-menu").height(),
		menu_fixed_top = 17,
		menu_fixed_height = menu_height + menu_fixed_top,
		menu_offtop = $(".prom-menu").offset().top,
		rightbot_offtop = $(".prom-right").offset().top + $(".prom-right").height(),
		win_height = $(window).height(),
		win_scrolltop = $(window).scrollTop();

		$(window).resize(function () {
			win_height = $(window).height();
			win_scrolltop = $(window).scrollTop();
			$(".prom-menu").removeClass("fixed");
			$(window).triggerHandler("scroll");
		});
		$(window).scroll(function () {
			win_scrolltop = $(this).scrollTop();
			if (win_height > menu_fixed_height && !isPadOrPhone) {
				if (win_scrolltop >= rightbot_offtop - menu_fixed_height) {					
					$(".prom-menu").removeClass("fixed");
				} else{
					if(win_scrolltop >= menu_offtop - menu_fixed_top) {
						$(".prom-menu").addClass("fixed").css("top", menu_fixed_top)
					} else {
						$(".prom-menu").removeClass("fixed");
					}
				}
			}
			
			var a = $("body").scrollTop(),
			b = $("html").scrollTop(),
			doc_scrolltop = b > a ? b : a,
			menu_offtop_cur = $(".prom-menu").offset().top;
			$(".prom-grid").each(function (d) {
				var menu_eq = $(".prom-menu a").eq(d),
				w = $(this).offset().top - (menu_eq.offset().top - menu_offtop_cur);
				if (w <= doc_scrolltop) {
					$(".prom-menu a.active").removeClass("active");
					menu_eq.addClass("active")
				} else {
					menu_eq.removeClass("active")
				}
			});	
		})
	}
	
	function clickLink(href) {
		var hrefarr = href.split("#");
		var menu_eq = $('.prom-menu a[href="' + href + '"]');
		var grid = $(href);
		$(".prom-menu .active").removeClass("active");
		menu_eq.addClass("active");
		if(grid.find(".pg-list-c:hidden").length > 0) {
			grid.find(".pg-btn").click();
		}
		isIE67 || $(window).triggerHandler("scroll");
		return true
	}
	
	$(".prom-menu a, #sub_nav_999999 a").click(function () {
		clickLink($(this).attr('href'));
	});
	
	$(".pg-more .pg-btn").click(function () {
		var btn = $(this);
		var grid = btn.closest(".prom-grid"),
		grid_id = grid.attr('id'),
		more_list = grid.find(".pg-list-c"),
		isNotLink = (btn.attr('href').length > 0) ? false : true;
		if(more_list.length > 0) {
			if(more_list.is(':hidden')) {
				//lazy load thumb pictures
				more_list.find("img[data-src]").not("[data-src*=imgLoading]").each(function () {
					$(this).attr("src", $(this).attr("data-src"))
				});
				//handle the button
				if (isIE67) {
					more_list.show();
					isNotLink && btn.addClass('pg-btn-less').removeClass('pg-btn-more').html('LESS');
				} else {
					more_list.slideDown(1E3, function() {
						isNotLink && btn.addClass('pg-btn-less').removeClass('pg-btn-more').html('LESS');
						rightbot_offtop = $(".prom-right").offset().top + $(".prom-right").height();
						$(window).triggerHandler("scroll");
					});
				}
				return false;
			} else {
				if(isNotLink) {
					window.scrollTo(0, grid.offset().top);
					if (isIE67) {
						more_list.hide();
						isNotLink && btn.addClass('pg-btn-more').removeClass('pg-btn-less').html('MORE');
					} else {
						more_list.slideUp(1E3, function() {
							isNotLink && btn.addClass('pg-btn-more').removeClass('pg-btn-less').html('MORE');
							$(window).triggerHandler("scroll");
							rightbot_offtop = $(".prom-right").offset().top + $(".prom-right").height();
						});
					}
					return false;
				}
			}			
		} else {
			if(isNotLink) {
				return false;
			}
		}
	});
	
	//locating the anchor when loading
	(function () {
		var grid = $(window.location.hash);
		if(grid.hasClass('prom-grid')) {
			if(grid.find(".pg-list-c").is(':hidden')) {
				grid.find(".pg-btn").click();
			}
		}
	})();
	
	//no scroll Event in IE6 and IE7
	isIE67 || $(window).triggerHandler("scroll");	
//});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvcHJvbS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLy9kZWZpbmUoZnVuY3Rpb24gKHJlcXVpcmUsIGV4cG9ydHMsIG1vZHVsZSkge1xyXG5cdC8vIG1hcmsgcmVmZXJlclxyXG5cdHJlcXVpcmUoJy4vbW9kL3JlZmVyZXInKTtcclxuXHRcclxuXHR2YXIgJCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WyckJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWyckJ10gOiBudWxsKTtcdFxyXG5cdHZhciBVc2VyQWdlbnQgPSByZXF1aXJlKCcuL21vZC91c2VyQWdlbnQnKTtcclxuXHR2YXIgdXNlckFnZW50ID0gbmV3IFVzZXJBZ2VudCgpO1x0XHJcblx0dmFyIGlzUGFkT3JQaG9uZSA9IHVzZXJBZ2VudC5pc0lwYWQoKSB8fCB1c2VyQWdlbnQuaXNQaG9uZSgpO1x0XHJcblx0dmFyIGlzSUU2NyA9IHVzZXJBZ2VudC5pc0lFVmVyc2lvbignNi4wJykgfHwgdXNlckFnZW50LmlzSUVWZXJzaW9uKCc3LjAnKTtcclxuXHJcblx0aWYgKCFpc0lFNjcgJiYgJChcIi5wcm9tLW1lbnVcIikubGVuZ3RoID4gMCkge1x0XHJcblx0XHR2YXIgbWVudV9oZWlnaHQgPSAkKFwiLnByb20tbWVudVwiKS5oZWlnaHQoKSxcclxuXHRcdG1lbnVfZml4ZWRfdG9wID0gMTcsXHJcblx0XHRtZW51X2ZpeGVkX2hlaWdodCA9IG1lbnVfaGVpZ2h0ICsgbWVudV9maXhlZF90b3AsXHJcblx0XHRtZW51X29mZnRvcCA9ICQoXCIucHJvbS1tZW51XCIpLm9mZnNldCgpLnRvcCxcclxuXHRcdHJpZ2h0Ym90X29mZnRvcCA9ICQoXCIucHJvbS1yaWdodFwiKS5vZmZzZXQoKS50b3AgKyAkKFwiLnByb20tcmlnaHRcIikuaGVpZ2h0KCksXHJcblx0XHR3aW5faGVpZ2h0ID0gJCh3aW5kb3cpLmhlaWdodCgpLFxyXG5cdFx0d2luX3Njcm9sbHRvcCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcclxuXHJcblx0XHQkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0d2luX2hlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTtcclxuXHRcdFx0d2luX3Njcm9sbHRvcCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcclxuXHRcdFx0JChcIi5wcm9tLW1lbnVcIikucmVtb3ZlQ2xhc3MoXCJmaXhlZFwiKTtcclxuXHRcdFx0JCh3aW5kb3cpLnRyaWdnZXJIYW5kbGVyKFwic2Nyb2xsXCIpO1xyXG5cdFx0fSk7XHJcblx0XHQkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0d2luX3Njcm9sbHRvcCA9ICQodGhpcykuc2Nyb2xsVG9wKCk7XHJcblx0XHRcdGlmICh3aW5faGVpZ2h0ID4gbWVudV9maXhlZF9oZWlnaHQgJiYgIWlzUGFkT3JQaG9uZSkge1xyXG5cdFx0XHRcdGlmICh3aW5fc2Nyb2xsdG9wID49IHJpZ2h0Ym90X29mZnRvcCAtIG1lbnVfZml4ZWRfaGVpZ2h0KSB7XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0JChcIi5wcm9tLW1lbnVcIikucmVtb3ZlQ2xhc3MoXCJmaXhlZFwiKTtcclxuXHRcdFx0XHR9IGVsc2V7XHJcblx0XHRcdFx0XHRpZih3aW5fc2Nyb2xsdG9wID49IG1lbnVfb2ZmdG9wIC0gbWVudV9maXhlZF90b3ApIHtcclxuXHRcdFx0XHRcdFx0JChcIi5wcm9tLW1lbnVcIikuYWRkQ2xhc3MoXCJmaXhlZFwiKS5jc3MoXCJ0b3BcIiwgbWVudV9maXhlZF90b3ApXHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHQkKFwiLnByb20tbWVudVwiKS5yZW1vdmVDbGFzcyhcImZpeGVkXCIpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRcclxuXHRcdFx0dmFyIGEgPSAkKFwiYm9keVwiKS5zY3JvbGxUb3AoKSxcclxuXHRcdFx0YiA9ICQoXCJodG1sXCIpLnNjcm9sbFRvcCgpLFxyXG5cdFx0XHRkb2Nfc2Nyb2xsdG9wID0gYiA+IGEgPyBiIDogYSxcclxuXHRcdFx0bWVudV9vZmZ0b3BfY3VyID0gJChcIi5wcm9tLW1lbnVcIikub2Zmc2V0KCkudG9wO1xyXG5cdFx0XHQkKFwiLnByb20tZ3JpZFwiKS5lYWNoKGZ1bmN0aW9uIChkKSB7XHJcblx0XHRcdFx0dmFyIG1lbnVfZXEgPSAkKFwiLnByb20tbWVudSBhXCIpLmVxKGQpLFxyXG5cdFx0XHRcdHcgPSAkKHRoaXMpLm9mZnNldCgpLnRvcCAtIChtZW51X2VxLm9mZnNldCgpLnRvcCAtIG1lbnVfb2ZmdG9wX2N1cik7XHJcblx0XHRcdFx0aWYgKHcgPD0gZG9jX3Njcm9sbHRvcCkge1xyXG5cdFx0XHRcdFx0JChcIi5wcm9tLW1lbnUgYS5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcblx0XHRcdFx0XHRtZW51X2VxLmFkZENsYXNzKFwiYWN0aXZlXCIpXHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdG1lbnVfZXEucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIilcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1x0XHJcblx0XHR9KVxyXG5cdH1cclxuXHRcclxuXHRmdW5jdGlvbiBjbGlja0xpbmsoaHJlZikge1xyXG5cdFx0dmFyIGhyZWZhcnIgPSBocmVmLnNwbGl0KFwiI1wiKTtcclxuXHRcdHZhciBtZW51X2VxID0gJCgnLnByb20tbWVudSBhW2hyZWY9XCInICsgaHJlZiArICdcIl0nKTtcclxuXHRcdHZhciBncmlkID0gJChocmVmKTtcclxuXHRcdCQoXCIucHJvbS1tZW51IC5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcblx0XHRtZW51X2VxLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xyXG5cdFx0aWYoZ3JpZC5maW5kKFwiLnBnLWxpc3QtYzpoaWRkZW5cIikubGVuZ3RoID4gMCkge1xyXG5cdFx0XHRncmlkLmZpbmQoXCIucGctYnRuXCIpLmNsaWNrKCk7XHJcblx0XHR9XHJcblx0XHRpc0lFNjcgfHwgJCh3aW5kb3cpLnRyaWdnZXJIYW5kbGVyKFwic2Nyb2xsXCIpO1xyXG5cdFx0cmV0dXJuIHRydWVcclxuXHR9XHJcblx0XHJcblx0JChcIi5wcm9tLW1lbnUgYSwgI3N1Yl9uYXZfOTk5OTk5IGFcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0Y2xpY2tMaW5rKCQodGhpcykuYXR0cignaHJlZicpKTtcclxuXHR9KTtcclxuXHRcclxuXHQkKFwiLnBnLW1vcmUgLnBnLWJ0blwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcblx0XHR2YXIgYnRuID0gJCh0aGlzKTtcclxuXHRcdHZhciBncmlkID0gYnRuLmNsb3Nlc3QoXCIucHJvbS1ncmlkXCIpLFxyXG5cdFx0Z3JpZF9pZCA9IGdyaWQuYXR0cignaWQnKSxcclxuXHRcdG1vcmVfbGlzdCA9IGdyaWQuZmluZChcIi5wZy1saXN0LWNcIiksXHJcblx0XHRpc05vdExpbmsgPSAoYnRuLmF0dHIoJ2hyZWYnKS5sZW5ndGggPiAwKSA/IGZhbHNlIDogdHJ1ZTtcclxuXHRcdGlmKG1vcmVfbGlzdC5sZW5ndGggPiAwKSB7XHJcblx0XHRcdGlmKG1vcmVfbGlzdC5pcygnOmhpZGRlbicpKSB7XHJcblx0XHRcdFx0Ly9sYXp5IGxvYWQgdGh1bWIgcGljdHVyZXNcclxuXHRcdFx0XHRtb3JlX2xpc3QuZmluZChcImltZ1tkYXRhLXNyY11cIikubm90KFwiW2RhdGEtc3JjKj1pbWdMb2FkaW5nXVwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdCQodGhpcykuYXR0cihcInNyY1wiLCAkKHRoaXMpLmF0dHIoXCJkYXRhLXNyY1wiKSlcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHQvL2hhbmRsZSB0aGUgYnV0dG9uXHJcblx0XHRcdFx0aWYgKGlzSUU2Nykge1xyXG5cdFx0XHRcdFx0bW9yZV9saXN0LnNob3coKTtcclxuXHRcdFx0XHRcdGlzTm90TGluayAmJiBidG4uYWRkQ2xhc3MoJ3BnLWJ0bi1sZXNzJykucmVtb3ZlQ2xhc3MoJ3BnLWJ0bi1tb3JlJykuaHRtbCgnTEVTUycpO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRtb3JlX2xpc3Quc2xpZGVEb3duKDFFMywgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdGlzTm90TGluayAmJiBidG4uYWRkQ2xhc3MoJ3BnLWJ0bi1sZXNzJykucmVtb3ZlQ2xhc3MoJ3BnLWJ0bi1tb3JlJykuaHRtbCgnTEVTUycpO1xyXG5cdFx0XHRcdFx0XHRyaWdodGJvdF9vZmZ0b3AgPSAkKFwiLnByb20tcmlnaHRcIikub2Zmc2V0KCkudG9wICsgJChcIi5wcm9tLXJpZ2h0XCIpLmhlaWdodCgpO1xyXG5cdFx0XHRcdFx0XHQkKHdpbmRvdykudHJpZ2dlckhhbmRsZXIoXCJzY3JvbGxcIik7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGlmKGlzTm90TGluaykge1xyXG5cdFx0XHRcdFx0d2luZG93LnNjcm9sbFRvKDAsIGdyaWQub2Zmc2V0KCkudG9wKTtcclxuXHRcdFx0XHRcdGlmIChpc0lFNjcpIHtcclxuXHRcdFx0XHRcdFx0bW9yZV9saXN0LmhpZGUoKTtcclxuXHRcdFx0XHRcdFx0aXNOb3RMaW5rICYmIGJ0bi5hZGRDbGFzcygncGctYnRuLW1vcmUnKS5yZW1vdmVDbGFzcygncGctYnRuLWxlc3MnKS5odG1sKCdNT1JFJyk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRtb3JlX2xpc3Quc2xpZGVVcCgxRTMsIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdGlzTm90TGluayAmJiBidG4uYWRkQ2xhc3MoJ3BnLWJ0bi1tb3JlJykucmVtb3ZlQ2xhc3MoJ3BnLWJ0bi1sZXNzJykuaHRtbCgnTU9SRScpO1xyXG5cdFx0XHRcdFx0XHRcdCQod2luZG93KS50cmlnZ2VySGFuZGxlcihcInNjcm9sbFwiKTtcclxuXHRcdFx0XHRcdFx0XHRyaWdodGJvdF9vZmZ0b3AgPSAkKFwiLnByb20tcmlnaHRcIikub2Zmc2V0KCkudG9wICsgJChcIi5wcm9tLXJpZ2h0XCIpLmhlaWdodCgpO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cdFx0XHRcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGlmKGlzTm90TGluaykge1xyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdFxyXG5cdC8vbG9jYXRpbmcgdGhlIGFuY2hvciB3aGVuIGxvYWRpbmdcclxuXHQoZnVuY3Rpb24gKCkge1xyXG5cdFx0dmFyIGdyaWQgPSAkKHdpbmRvdy5sb2NhdGlvbi5oYXNoKTtcclxuXHRcdGlmKGdyaWQuaGFzQ2xhc3MoJ3Byb20tZ3JpZCcpKSB7XHJcblx0XHRcdGlmKGdyaWQuZmluZChcIi5wZy1saXN0LWNcIikuaXMoJzpoaWRkZW4nKSkge1xyXG5cdFx0XHRcdGdyaWQuZmluZChcIi5wZy1idG5cIikuY2xpY2soKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0pKCk7XHJcblx0XHJcblx0Ly9ubyBzY3JvbGwgRXZlbnQgaW4gSUU2IGFuZCBJRTdcclxuXHRpc0lFNjcgfHwgJCh3aW5kb3cpLnRyaWdnZXJIYW5kbGVyKFwic2Nyb2xsXCIpO1x0XHJcbi8vfSk7XHJcbiJdfQ==
},{"./mod/referer":2,"./mod/userAgent":3}]},{},[])
//# sourceMappingURL=data:application/json;base64,
