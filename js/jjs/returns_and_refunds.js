require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){

var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

//loading
var loadingSelector = '.pop-loading';
function open() {
    if($(loadingSelector).length < 1) {
        $('body').append('<div class="pop-loading"></div>')
    }
    var loading = $(loadingSelector);

    var cw = $(window).width();
    var ch = $(window).height();
    var ldw = loading.width();
    var ldh = loading.height();
    loading.css({'left': cw / 2 - ldw / 2, 'top': ch / 2 - ldh / 2 + $(document).scrollTop()}).show();
}
function close() {
    $(loadingSelector).hide();
}

module.exports = {
    "open": open,
    "close": close
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvY2hlY2tvdXQvbG9hZGluZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnZhciAkID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJyQnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJyQnXSA6IG51bGwpO1xyXG5cclxuLy9sb2FkaW5nXHJcbnZhciBsb2FkaW5nU2VsZWN0b3IgPSAnLnBvcC1sb2FkaW5nJztcclxuZnVuY3Rpb24gb3BlbigpIHtcclxuICAgIGlmKCQobG9hZGluZ1NlbGVjdG9yKS5sZW5ndGggPCAxKSB7XHJcbiAgICAgICAgJCgnYm9keScpLmFwcGVuZCgnPGRpdiBjbGFzcz1cInBvcC1sb2FkaW5nXCI+PC9kaXY+JylcclxuICAgIH1cclxuICAgIHZhciBsb2FkaW5nID0gJChsb2FkaW5nU2VsZWN0b3IpO1xyXG5cclxuICAgIHZhciBjdyA9ICQod2luZG93KS53aWR0aCgpO1xyXG4gICAgdmFyIGNoID0gJCh3aW5kb3cpLmhlaWdodCgpO1xyXG4gICAgdmFyIGxkdyA9IGxvYWRpbmcud2lkdGgoKTtcclxuICAgIHZhciBsZGggPSBsb2FkaW5nLmhlaWdodCgpO1xyXG4gICAgbG9hZGluZy5jc3MoeydsZWZ0JzogY3cgLyAyIC0gbGR3IC8gMiwgJ3RvcCc6IGNoIC8gMiAtIGxkaCAvIDIgKyAkKGRvY3VtZW50KS5zY3JvbGxUb3AoKX0pLnNob3coKTtcclxufVxyXG5mdW5jdGlvbiBjbG9zZSgpIHtcclxuICAgICQobG9hZGluZ1NlbGVjdG9yKS5oaWRlKCk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgXCJvcGVuXCI6IG9wZW4sXHJcbiAgICBcImNsb3NlXCI6IGNsb3NlXHJcbn07XHJcbiJdfQ==
},{}],2:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

var errorTip = $('.search-order-error'),
    orderSnInput = $('input[name="order_sn"]');

var searchOrder = function(e) {
    e.preventDefault();
    var orderSn = orderSnInput.val();
    orderSn = orderSn.replace(/(^\s+)|(\s+$)/,"");
    if(orderSn.length <= 0) {
        errorTip.show();
        orderSnInput.on('input', null, {}, function() {
            errorTip.hide();
            orderSnInput.off('input');
        });
    }
    $.get(webData.WEB_ROOT + 'ajax.php', {
        'act': 'check_order_sn',
        'order_sn': orderSn
    }, function(data) {
        if (data.error) {
            errorTip.show();
            orderSnInput.on('input', null, {}, function() {
                errorTip.hide();
                orderSnInput.off('input');
            });
        } else {
            location.href = webData.WEB_ROOT + 'account/order.php?order_sn=' + orderSn;
        }
    }, 'json');
    return false;
};
var init = function() {
    var input_order_tips = $('.input-order-tips');

    input_order_tips.bind('click', function () {
        if(!$('.input-order-tips-more').hasClass('up')) {
            $('.input-order-tips-more').show();
            $('.input-order-tips-more').addClass('up');
        }else {
            $('.input-order-tips-more').hide();
            $('.input-order-tips-more').removeClass('up');
        }
    });
    
    $('#search-order').submit(searchOrder);
};
module.exports = {
    init: init
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvY29tbW9uL2FjY291bnRfbWVudS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyICQgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snJCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnJCddIDogbnVsbCk7XHJcblxyXG52YXIgZXJyb3JUaXAgPSAkKCcuc2VhcmNoLW9yZGVyLWVycm9yJyksXHJcbiAgICBvcmRlclNuSW5wdXQgPSAkKCdpbnB1dFtuYW1lPVwib3JkZXJfc25cIl0nKTtcclxuXHJcbnZhciBzZWFyY2hPcmRlciA9IGZ1bmN0aW9uKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIHZhciBvcmRlclNuID0gb3JkZXJTbklucHV0LnZhbCgpO1xyXG4gICAgb3JkZXJTbiA9IG9yZGVyU24ucmVwbGFjZSgvKF5cXHMrKXwoXFxzKyQpLyxcIlwiKTtcclxuICAgIGlmKG9yZGVyU24ubGVuZ3RoIDw9IDApIHtcclxuICAgICAgICBlcnJvclRpcC5zaG93KCk7XHJcbiAgICAgICAgb3JkZXJTbklucHV0Lm9uKCdpbnB1dCcsIG51bGwsIHt9LCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgZXJyb3JUaXAuaGlkZSgpO1xyXG4gICAgICAgICAgICBvcmRlclNuSW5wdXQub2ZmKCdpbnB1dCcpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgJC5nZXQod2ViRGF0YS5XRUJfUk9PVCArICdhamF4LnBocCcsIHtcclxuICAgICAgICAnYWN0JzogJ2NoZWNrX29yZGVyX3NuJyxcclxuICAgICAgICAnb3JkZXJfc24nOiBvcmRlclNuXHJcbiAgICB9LCBmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgaWYgKGRhdGEuZXJyb3IpIHtcclxuICAgICAgICAgICAgZXJyb3JUaXAuc2hvdygpO1xyXG4gICAgICAgICAgICBvcmRlclNuSW5wdXQub24oJ2lucHV0JywgbnVsbCwge30sIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgZXJyb3JUaXAuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgb3JkZXJTbklucHV0Lm9mZignaW5wdXQnKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbG9jYXRpb24uaHJlZiA9IHdlYkRhdGEuV0VCX1JPT1QgKyAnYWNjb3VudC9vcmRlci5waHA/b3JkZXJfc249JyArIG9yZGVyU247XHJcbiAgICAgICAgfVxyXG4gICAgfSwgJ2pzb24nKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxufTtcclxudmFyIGluaXQgPSBmdW5jdGlvbigpIHtcclxuICAgIHZhciBpbnB1dF9vcmRlcl90aXBzID0gJCgnLmlucHV0LW9yZGVyLXRpcHMnKTtcclxuXHJcbiAgICBpbnB1dF9vcmRlcl90aXBzLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmKCEkKCcuaW5wdXQtb3JkZXItdGlwcy1tb3JlJykuaGFzQ2xhc3MoJ3VwJykpIHtcclxuICAgICAgICAgICAgJCgnLmlucHV0LW9yZGVyLXRpcHMtbW9yZScpLnNob3coKTtcclxuICAgICAgICAgICAgJCgnLmlucHV0LW9yZGVyLXRpcHMtbW9yZScpLmFkZENsYXNzKCd1cCcpO1xyXG4gICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgJCgnLmlucHV0LW9yZGVyLXRpcHMtbW9yZScpLmhpZGUoKTtcclxuICAgICAgICAgICAgJCgnLmlucHV0LW9yZGVyLXRpcHMtbW9yZScpLnJlbW92ZUNsYXNzKCd1cCcpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICAkKCcjc2VhcmNoLW9yZGVyJykuc3VibWl0KHNlYXJjaE9yZGVyKTtcclxufTtcclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBpbml0OiBpbml0XHJcbn07Il19
},{}],3:[function(require,module,exports){
var dialog = require('./dialog');

function AlertMessage() {}
module.exports = new AlertMessage();

AlertMessage.prototype.open = function(message, canClose, modId) {
    canClose = typeof canClose === 'undefined' ? true : canClose;
    modId = typeof modId === 'undefined' ? 'dialog' : modId;
    var html = '<div class="alert-message-container">' +
        '<div class="alert-message-content">' + message + '</div>';
    if(canClose) {
        html += '<input type="button" class="bt-1-new alert-message-confirm-btn" value="' + _lang.page_common_confirm + '"/>';
    }
    html += '</div>';
    var alertMessageDialog = dialog.open({
        modId: modId,
        html: html,
        canClose: canClose,
        isUpdateHtml: true
    });
    if(canClose) {
        $('.alert-message-confirm-btn').click(function () {
            dialog.close(alertMessageDialog, true);
        });
    }
    return alertMessageDialog;
}

AlertMessage.prototype.close = function(alertMessageDialog) {
    dialog.close(alertMessageDialog, true);
}

},{"./dialog":5}],4:[function(require,module,exports){
//define(function (require, exports, module) {

	function Cookie() {}
	module.exports = Cookie;
	var cookie_domain = webData.cookie_domain
	
	Cookie.prototype.setCookie = function (NameOfCookie, value, expiredays, domain) {
		if (expiredays == null || expiredays == undefined || expiredays == '' || isNaN(expiredays)) {
			expiredays = 365;
		}
		var ExpireDate = new Date();
		ExpireDate.setTime(ExpireDate.getTime() + (expiredays * 24 * 3600 * 1000));
		domain = domain ? domain : cookie_domain
        var _domain = domain ? ";domain=" + domain : ""
		document.cookie = NameOfCookie + "=" + escape(value) + _domain + ((expiredays == null) ? "": ";path=/; expires=" + ExpireDate.toGMTString());
	}

	Cookie.prototype.getCookie = function (NameOfCookie) {
		if (document.cookie.length > 0) {
			begin = document.cookie.indexOf(NameOfCookie + "=");
			if (begin != -1) {
				begin += NameOfCookie.length + 1;
				end = document.cookie.indexOf(";", begin);
				if (end == -1) end = document.cookie.length;
				return unescape(document.cookie.substring(begin, end));
			}
		}
		return null;
	}
	
//});

},{}],5:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {

    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
    var Cookie = require('../mod/cookie');
    var cookie = new Cookie();

	function Dialog() {}
	module.exports = new Dialog();

	Dialog.prototype.open = function(setting) {
		var me = this;
		var params = $.extend({
				modId : 'dialog',
				overlayOpacity : 0.5,
				overlayBgColor : '#000',
				width : Math.min(900, $(window).width() - 100),
				html : '',
			    canClose : true,
				closeWhenClickingBg : false,
                isUpdateHtml : false
			}, setting);

		//show overlayer
		if ($('#dialogOverlay').size() > 0) {
			var layer = $('#dialogOverlay');
		} else {
			var layer = $('<div id="dialogOverlay"><div style="background:' + params.overlayBgColor + ';"></div></div>').prependTo('body');
		};

        layer.show().children('div').stop().fadeTo(0, 0.1).fadeTo("fast", params.overlayOpacity);

		//show dialog box
		if($('#' + params.modId).size() == 0) {
			var html = ['<div class="dialog" id="' + params.modId + '">', '<div class="dialog-wrapper">', '<div class="dialog-content" oncontextmenu="return false">', '<img src="' + webData.IMG_PATH + 'tran.gif" class="dialog-img">', '</div>', '<a href="javascript:void(0)" class="dialog-close"></a>', '</div>', '</div>'];
			if (!params.canClose) {
				html[5] = "";
			}
			layer.after(html.join(''));
		}
		var winbox = $('#' + params.modId);
		var mainShow = winbox.find('.dialog-content');
		var btnClose = winbox.find('.dialog-close');

		if((params.html != "" && mainShow.find('.dialog-img').size() > 0) || (params.html != "" && params.isUpdateHtml)) {
			mainShow.html(params.html);
		}

		winbox.show().css({
			"top" : Math.max(50, $(window).scrollTop() + $(window).height() / 2 - winbox.height() / 2),
			"left" : Math.max(0, $(window).scrollLeft() + $(window).width() / 2 - winbox.width() / 2)
		});

		//click Esc key to hide all dialogs
		$(document).bind('keydown', enableEsc);

		//click overlayer
		layer.unbind();
		if (params.closeWhenClickingBg) {
			layer.bind('click', function () {
				me.close(winbox, true);
			});
		}

		//click close btn
		btnClose.unbind().bind('click', function () {
            if (!$.isEmptyObject(window.review) && window.review.status) {
                window.review = {
                    status: false,
                    url: webData.WEB_ROOT
                }
            }
            if (typeof cookie.getCookie('signInGoogle') != 'undefined' && cookie.getCookie('signInGoogle')) {
                cookie.setCookie('signInGoogle', false, 30);
            }
            cookie.setCookie('scrollTop', 0, -1);
            cookie.setCookie('scrollLeft', 0, -1);
			cookie.setCookie('favGoodsId', 0, -1);
			me.close(winbox, true);
			//return false
		});
		return winbox;
	};
	Dialog.prototype.openRegisterLogin = function(setting) {
		var me = this;
		var params = $.extend({
				modId : 'dialog',
				overlayOpacity : 0.5,
				overlayBgColor : '#000',
				width : Math.min(900, $(window).width() - 100),
				html : '',
			    canClose : true,
				closeWhenClickingBg : false,
                isUpdateHtml : false
			}, setting);

		//show overlayer
		if ($('#dialogOverlay').size() > 0) {
			var layer = $('#dialogOverlay');
		} else {
			var layer = $('<div id="dialogOverlay"><div style="background:' + params.overlayBgColor + ';"></div></div>').prependTo('body');
		};

        layer.show().children('div').stop().fadeTo(0, 0.1).fadeTo("fast", params.overlayOpacity);

		//show dialog box
		if($('#' + params.modId).size() == 0) {
			var html = ['<div class="dialog showroom-login-dialog" id="' + params.modId + '">', '<div class="dialog-wrapper">', '<div class="dialog-content" oncontextmenu="return false">', '<img src="' + webData.IMG_PATH + 'tran.gif" class="dialog-img">', '</div>', '<a href="javascript:void(0)" class="dialog-close"></a>', '</div>', '</div>'];
			if (!params.canClose) {
				html[5] = "";
			}
			layer.after(html.join(''));
		}
		var winbox = $('#' + params.modId);
		var mainShow = winbox.find('.dialog-content');
		var btnClose = winbox.find('.dialog-close');

		if((params.html != "" && mainShow.find('.dialog-img').size() > 0) || (params.html != "" && params.isUpdateHtml)) {
			mainShow.html(params.html);
		}

		// winbox.show().css({
		// 	"top" : Math.max(50, $(window).scrollTop() + $(window).height() / 2 - winbox.height() / 2),
		// 	"left" : Math.max(0, $(window).scrollLeft() + $(window).width() / 2 - winbox.width() / 2)
		// });
		winbox.css('display', 'flex')
		winbox.find('.dialog-close-icon').on('click', function () {
			layer.hide();
			winbox.hide();
		})
		//click Esc key to hide all dialogs
		$(document).bind('keydown', enableEsc);

		//click overlayer
		layer.unbind();
		if (params.closeWhenClickingBg) {
			layer.bind('click', function () {
				me.close(winbox, true);
			});
		}

		//click close btn
		btnClose.unbind().bind('click', function () {
            if (!$.isEmptyObject(window.review) && window.review.status) {
                window.review = {
                    status: false,
                    url: webData.WEB_ROOT
                }
            }
            if (typeof cookie.getCookie('signInGoogle') != 'undefined' && cookie.getCookie('signInGoogle')) {
                cookie.setCookie('signInGoogle', false, 30);
            }
            cookie.setCookie('scrollTop', 0, -1);
            cookie.setCookie('scrollLeft', 0, -1);
			cookie.setCookie('favGoodsId', 0, -1);
			me.close(winbox, true);
			//return false
		});
		return winbox;
	};

	Dialog.prototype.close = function(winbox, isHideOverlay) {
		$(winbox).hide();
		if(isHideOverlay) {
			var layer = $('#dialogOverlay');
			layer.children('div').stop().fadeTo("fast", 0.1, function () {
				layer.hide();
				layer.unbind();
			});
		}
		$(document).unbind('keydown', enableEsc);
	};

	function enableEsc(e) {
		var unicode = e.keyCode ? e.keyCode : e.charCode;
		if (unicode == 27) {
			$('.dialog:visible').hide();
			var layer = $('#dialogOverlay');
			layer.children('div').stop().fadeTo("fast", 0.1, function () {
				layer.hide()
			})
			$(document).unbind('keydown', enableEsc)
		}
	}

//});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{"../mod/cookie":4}],6:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

var init = function() {
    $('.show-size-detail').click(function () {
        var sizeDetail = $(this).siblings('.size-detail');
        if(sizeDetail.is(":hidden")) {
            sizeDetail.removeClass('hide');
        } else {
            sizeDetail.addClass('hide');
        }
    });
};

module.exports = {
    init: init
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvb3JkZXIvc2hvd19zaXplX2RldGFpbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbInZhciAkID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJyQnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJyQnXSA6IG51bGwpO1xyXG5cclxudmFyIGluaXQgPSBmdW5jdGlvbigpIHtcclxuICAgICQoJy5zaG93LXNpemUtZGV0YWlsJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBzaXplRGV0YWlsID0gJCh0aGlzKS5zaWJsaW5ncygnLnNpemUtZGV0YWlsJyk7XHJcbiAgICAgICAgaWYoc2l6ZURldGFpbC5pcyhcIjpoaWRkZW5cIikpIHtcclxuICAgICAgICAgICAgc2l6ZURldGFpbC5yZW1vdmVDbGFzcygnaGlkZScpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHNpemVEZXRhaWwuYWRkQ2xhc3MoJ2hpZGUnKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgaW5pdDogaW5pdFxyXG59OyJdfQ==
},{}],7:[function(require,module,exports){
(function (global){
var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);
var alert = require('../mod/alertMessage');
var loading = require('../checkout/loading');
var order = typeof pageData.order !== 'undefined' ? pageData.order : {};
var carrierInfo = typeof pageData.carrierInfo !== 'undefined' ? pageData.carrierInfo : {};
var picUploadUrl = typeof pageData.picUploadUrl !== 'undefined' ? pageData.picUploadUrl : '';
var maxImageLen = typeof pageData.maxImageLen !== 'undefined' ? pageData.maxImageLen : 2;
var maxFileSize = typeof pageData.maxFileSize !== 'undefined' ? pageData.maxFileSize : 2*1024*1024;
var uploadFiles = {};
var returnGoodsInput = $("input[type='hidden'][name='returnGoods']");
var returnGoods = returnGoodsInput.length > 0 ? returnGoodsInput.val().split(",") : [];
var returnGoodsData = typeof pageData.returnGoodsData !== 'undefined' ? pageData.returnGoodsData : {};
var userName = typeof pageData.userName !== 'undefined' ? pageData.userName : '';
var please_wait_tips_str = typeof pageData.please_wait_tips_str !== 'undefined' ? pageData.please_wait_tips_str : '';
var isNoReasonReturn = typeof pageData.isNoReasonReturn !== 'undefined' ? pageData.isNoReasonReturn : false;
var step = typeof pageData.step !== 'undefined' ? pageData.step : 'items';
var ticketIds = [];
var labelFileImg = $('#label-file');
var labelFile = labelFileImg.length > 0 ? labelFileImg.attr("data-src") : '';
var disabled = false;
var reasons = typeof pageData.reasons !== 'undefined' ? pageData.reasons : [];

var form = $('#form-returns-and-refunds');

function uploadSubmit(index) {
    if(index < returnGoods.length) {
        var recId = returnGoods[index];

        var len = uploadFiles[recId].length;
        var formData = new FormData();
        for (var i = 0; i < len; i++) {
            formData.append("fileList[]", uploadFiles[recId][i])
        }
        formData.append('fileNumMax', String(maxImageLen));
        formData.append('fileSizeMax', String(maxFileSize));

        $.ajax({
            url : picUploadUrl,
            type : 'POST',
            data : formData,
            dataType : 'json',
            contentType : false,
            processData : false,
            cache : false,
            success : function(r) {
                if (r.error == 0) {
                    returnGoodsData[recId].fileListId = r.datas.data_str;
                    returnGoodsData[recId].fileListSize = r.datas.size_str;
                    returnGoodsData[recId].fileListType = r.datas.filetype_str;
                }
            },
            complete: function() {
                uploadSubmit(index + 1);
            }
        });
    } else {
        $("input[type='hidden'][name='step']").val('shipping');
        $("input[type='hidden'][name='returnGoodsData']").val(JSON.stringify(returnGoodsData));
        form.submit();
    }
}

function submitTicket(index) {
    if(index < returnGoods.length) {
        var recId = returnGoods[index];

        var len = uploadFiles[recId].length;
        var formData = new FormData();
        for (var i = 0; i < len; i++) {
            formData.append("fileList[]", uploadFiles[recId][i])
        }
        formData.append('fileNumMax', String(maxImageLen));
        formData.append('fileSizeMax', String(maxFileSize));

        $.ajax({
            url : picUploadUrl,
            type : 'POST',
            data : formData,
            dataType : 'json',
            contentType : false,
            processData : false,
            cache : false,
            success : function(r) {
                if (r.error == 0) {
                    returnGoodsData[recId].fileListId = r.datas.data_str;
                    returnGoodsData[recId].fileListSize = r.datas.size_str;
                    returnGoodsData[recId].fileListType = r.datas.filetype_str;
                }
            },
            complete: function() {
                var data = returnGoodsData[recId];
                var postData = {
                    reason_id: 5,
                    order_sn: order.order_sn,
                    email: order.email.trim(),
                    phone: order.tel,
                    user_name: userName,
                    question_type_id: data.reason,
                    message: getQuestionType(data.reason),
                    goods_id: data.goods_id,
                    order_goods_id: recId,
                    add_log: true,
                    fileListId: data.fileListId,
                    fileListSize: data.fileListSize,
                    fileListType: data.fileListType,
                };
                $.ajax({
                    url : webData.WEB_ROOT + "account/email.php?act=after",
                    type : 'POST',
                    data : postData,
                    dataType : 'json',
                    success : function(r) {
                        if (r.error == 0) {
                            ticketIds.push(r.ticket_id)
                        }
                    },
                    complete: function() {
                        submitTicket(index + 1);
                    }
                });
            }
        });
    } else {
        if(ticketIds.length === 0) {
            loading.close();
            disabled = false;
            alert.open(_lang.page_returns_and_refunds_fail_ticket);
            return false;
        }
        $("input[type='hidden'][name='step']").val('success');
        $("input[type='hidden'][name='ticketIds']").val(ticketIds.join(','));
        form.submit();
    }
}

function getQuestionType(questionTypeId)
{
    for (var idx in reasons) {
        if (reasons[idx].question_type_id == questionTypeId) {
            return reasons[idx].question_type;
        }
    }
    return '';
}

var init = function() {
    //pre create label
    if(isNoReasonReturn && step === 'reason') {
        var sku = [];
        for(var i = 0; i < order.products.length; i++) {
            var goods = order.products[i];
            if(returnGoods.indexOf(goods.rec_id) !== -1) {
                sku.push(goods.order_goods_sku);
            }
        }

        $.ajax({
            'type': 'POST',
            'url': webData.WEB_ROOT + 'ajax.php?act=pre_create_label',
            'data': {
                order_sn: order.order_sn,
                sku: sku
            },
            'dataType': 'json',
        })
    }

    $('.returns-and-refunds-container .go-back-btn').click(function () {
        window.history.go(-1);
    });

    $('.choose-return-reason').click(function () {
        if($('.return-reason-others:checked').length <= 0) {
            $('.detail-message').addClass('hide');
        }else {
            $('.detail-message').removeClass('hide');
        }
    })

    $('.returns-and-refunds-container ._file').each(function () {
        var errorType = 0;
        var recId = $(this).attr("data-rec-id");
        uploadFiles[recId] = [];

        $('#_file_' + recId).on('change',function(){
            var fileList = Array.from(this.files);
            if (!fileList.length) {
                return;
            }
            var newFileList = uploadFiles[recId].concat(fileList.filter(imageFilter));
            var allFileListLength = fileList.length + uploadFiles[recId].length;
            var hasFilterFile = (allFileListLength !== newFileList.length || allFileListLength > maxImageLen);
            uploadFiles[recId] = newFileList.concat();
            if(uploadFiles[recId].length > maxImageLen) {
                uploadFiles[recId] = uploadFiles[recId].slice(0, maxImageLen);
                errorType = 2;
            }
            if (hasFilterFile) {
                if (errorType === 1) {
                    alert.open(_lang.page_ticket_upload_jpg_only);
                } else {
                    alert.open(_lang.page_goods_photo_rule);
                }
            }
            preview_pic();
            this.value = '';
        });

        $('.close_' + recId).on('click',function(){
            var index = $(this).attr('index');
            if(typeof index !== 'undefined') {
                uploadFiles[recId].splice(index-1, 1);
                preview_pic();
            }
        });

        function imageFilter (file) {
            var valid = true;
            if (!file.type.match("image.*")) {
                valid = false;
                errorType = 1;
            } else if (file.size > maxFileSize) {
                valid = false;
                errorType = 2;
            }
            return valid;
        }

        function preview_pic () {
            var len = uploadFiles[recId].length;
            for(var i = 1; i <= len; i++) {
                var file = uploadFiles[recId][i-1];
                var reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function(i, recId) {
                    return function() {
                        var pic = $('#liar_label_' + i + '_' + recId);
                        pic.attr('src', this.result);
                        pic.parent().css('display', 'inline-block');
                    }
                } (i, recId);
            }
            for(var i = len + 1; i <= maxImageLen; i++) {
                var pic = $('#liar_label_' + i + '_' + recId);
                pic.attr('src', '');
                pic.parent().css('display', 'none');
            }
        }
    });

    $(".returns-and-refunds-container input[type='radio'][name='shippingMethod']").change(function () {
        var selfSendingGuideDiv = $('.returns-and-refunds-shipping-method .self-sending-guide');
        if($(this).val() == 0) {
            selfSendingGuideDiv.show();
        } else {
            selfSendingGuideDiv.hide();
        }
    });
    
    $('#next-step-btn-items').click(function () {
        if(disabled) {
            return false;
        }

        var returnGoods = $("input[type='checkbox'][name='returnGoods[]']:checked");
        if(returnGoods.length === 0) {
            alert.open(_lang.page_common_select_goods);
            return false;
        }

        disabled = true;
        loading.open();

        var sku = [];
        for(var i = 0; i < order.products.length; i++) {
            var goods = order.products[i];
            var returnGoodsCheckBox = $("input[type='checkbox'][name='returnGoods[]'][value=" + goods.rec_id + "]");
            if(returnGoodsCheckBox.length > 0 && returnGoodsCheckBox.is(':checked')) {
                sku.push(goods.order_goods_sku);
            }
        }

        var data = {
            act: 'is_no_reason_return',
            order_sn: order.order_sn,
            sku: sku
        };
        $.ajax({
            'type': 'POST',
            'url': webData.WEB_ROOT + 'ajax.php',
            'data': data,
            'dataType': 'json',
            'success': function (r) {
                $("input[type='hidden'][name='isNoReasonReturn']").val(r.isNoReasonReturn > 0 ? 1 : 0);
            },
            "complete" : function() {
                $("input[type='hidden'][name='step']").val('reason');
                form.submit();
            }
        })
    });

    $('#next-step-btn-reason-0').click(function () {
        if(disabled) {
            return false;
        }

        for(var i = 0; i < order.products.length; i++) {
            var goods = order.products[i];
            var recId = goods.rec_id;
            if($("input[type='radio'][name='returnGoodsReason_" + recId + "']").length > 0) {
                var reasonRadioChecked = $("input[type='radio'][name='returnGoodsReason_" + recId + "']:checked");
                if(reasonRadioChecked.length === 0) {
                    alert.open(_lang.page_return_refund_main_reason);
                    return false;
                }

                if(uploadFiles[recId].length === 0) {
                    alert.open(_lang.page_gallery_photo_limit);
                    return false;
                }

                returnGoodsData[recId] = {
                    goods_id: goods.goods_id,
                    sku: goods.order_goods_sku,
                    reason: reasonRadioChecked.val(),
                    fileListId: "",
                    fileListSize: "",
                    fileListType: "",
                };
            }
        }



        disabled = true;
        loading.open();
        submitTicket(0);
    });

    $('#next-step-btn-reason-1').click(function () {
        if(disabled) {
            return false;
        }

        for(var i = 0; i < order.products.length; i++) {
            var goods = order.products[i];
            var recId = goods.rec_id;
            var reasonText = "";
            if($("input[type='radio'][name='returnGoodsReason_" + recId + "']").length > 0) {
                var reasonRadioChecked = $("input[type='radio'][name='returnGoodsReason_" + recId + "']:checked");
                if(reasonRadioChecked.length === 0) {
                    alert.open(_lang.page_return_refund_main_reason);
                    return false;
                }

                //当reason为others时记录理由
                if(reasonRadioChecked.val() == 12) {
                    if($('#return-detail-message').val().trim().length === 0) {
                        alert.open(_lang.page_ticket_please_enter_your_detailed_message);
                        return false;
                    }
                    reasonText = $('#return-detail-message').val();
                }

                if(uploadFiles[recId].length === 0) {
                    alert.open(_lang.page_gallery_photo_limit);
                    return false;
                }

                returnGoodsData[recId] = {
                    goods_id: goods.goods_id,
                    sku: goods.order_goods_sku,
                    priceUSD: goods.shop_price * goods.goods_number,
                    reason: reasonRadioChecked.val(),
                    message: reasonText.length == 0 ? reasonRadioChecked.val() : reasonText,
                    fileListId: "",
                    fileListSize: "",
                    fileListType: "",
                };
            }
        }

        disabled = true;
        loading.open();
        uploadSubmit(0);
    });

    $('#next-step-btn-shipping').click(function () {
        disabled = true;
        var refundsLoadingDialog = alert.open('<img id="loader_pic" src="' + webData.IMG_PATH + 'loading.gif" rel="nofollow"/>' + please_wait_tips_str, false, 'refunds-loading-dialog');

        var shippingMethod = $("input[type='radio'][name='shippingMethod']:checked").val();
        var data = {
            order_sn: order.order_sn,
            returnGoodsData: returnGoodsData,
            shippingMethod: shippingMethod,
        };
        $.ajax({
            'type': 'POST',
            'url': webData.WEB_ROOT + 'ajax.php?act=returns_and_refunds',
            'data': data,
            'dataType': 'json',
            'success': function (r) {
                if(r.error == 0) {
                    $("input[type='hidden'][name='step']").val('success');
                    $("input[type='hidden'][name='labelFile']").val(r.labelFile);
                    form.submit();
                } else {
                    disabled = false;
                    alert.close(refundsLoadingDialog);
                    alert.open(_lang.page_returns_and_refunds_fail);
                }
            },
            "error" : function() {
                disabled = false;
                alert.close(refundsLoadingDialog);
                alert.open(_lang.page_returns_and_refunds_fail);
            }
        })
    });

    $('#send-label-btn').click(function () {
        var email = $('.returns-and-refunds-container #send-label-email').val().trim();
        if (email.length === 0) {
            alert.open(_lang.page_common_enter_friend_email);
            return false;
        }
        if (/(\,|^)([\w+._]+@\w+\.(\w+\.){0,3}\w{2,4})/.test(email.replace(/-|\//g, '')) === false) {
            alert.open(_lang.page_login_check_email_format);
            return false;
        }

        disabled = true;
        loading.open();

        var data = {
            act: 'send_label',
            order_sn: order.order_sn,
            email: email,
            labelFile: labelFile,
            isLabel:typeof pageData.isLabel != "undefined" ? pageData.isLabel : 0,
            displayPrice: carrierInfo != null && typeof carrierInfo.display_price != "undefined" ? carrierInfo.display_price : ""
        };
        $.ajax({
            'type': 'POST',
            'url': webData.WEB_ROOT + 'ajax.php',
            'data': data,
            'dataType': 'json',
            'success': function (r) {
                disabled = false;
                loading.close();
                if(r.error == 0) {
                    alert.open(_lang.page_common_send_email_successfully);
                } else {
                    alert.open(_lang.page_ticket_operation_failed);
                }
            },
            "error" : function() {
                disabled = false;
                loading.close();
                alert.open(_lang.page_ticket_operation_failed);
            }
        })
    });
};

module.exports = {
    init: init
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{"../checkout/loading":1,"../mod/alertMessage":3}],"returns_and_refunds":[function(require,module,exports){
// require('./common')
require('../common/account_menu').init();
require('../order/show_size_detail').init();
require('../pages/returns_and_refunds').init();
},{"../common/account_menu":2,"../order/show_size_detail":6,"../pages/returns_and_refunds":7}]},{},[])
//# sourceMappingURL=data:application/json;base64,
