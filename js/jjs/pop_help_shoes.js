require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {

    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

    function loadImage(url, callback, id) {
        var img = new Image();
        img.src = url;
        if (img.complete) {
            callback.call(img, id);
        } else {
            $(img).bind("load", function () {
                callback.call(img, id);
            });
        }
    }

    var generate_html = function (setting) {
        var params = $.extend({
            "container": $('.chart_img:eq(0)'),
            "list": [],
            "colWidth": 0,
            "rowHeight": 0
        }, setting);

        var spans = '';
        var isNewVersion = true;
        if (isNewVersion) {
            var y = 30;
            var rows = 0;
            var list = params.list;
            for (var i = 0; i < list.length; i++) {
                var cols = i % 8;
                if (cols == 7) {
                    rows++;
                }
                var x = (params.colWidth) * cols + 72;
                spans += '<span to="' + list[i]['img'] + '" title="' + list[i]['name'] + '" style="left:' + (x + 1) + 'px;top:' + (y + 1) + 'px"></span>';
                y = (params.rowHeight) * rows + 30;
            }
        }
        else {
            var y = 0;
            var rows = 0;
            var list = params.list;
            for (var i = 0; i < list.length; i++) {
                var cols = i % 7;
                if (cols == 6) {
                    rows++;
                }
                var x = (params.colWidth) * cols + 15;
                spans += '<span to="' + list[i]['img'] + '" title="' + list[i]['name'] + '" style="left:' + (x + 1) + 'px;top:' + (y + 1) + 'px"></span>';
                y = (params.rowHeight) * rows;
            }
        }
        $(params.container).append(spans);

    };

    var init_all_groups = function () {
        var list = pageData.color_list;
        var isNewVersion = true;
        if (isNewVersion) {
            for (var obj in list) {
                generate_html({
                    "container": $('#' + obj),
                    "list": list[obj],
                    "colWidth": 68,
                    "rowHeight": 56
                });
            }
        }
        else {
            for (var obj in list) {
                generate_html({
                    "container": $('#' + obj),
                    "list": list[obj],
                    "colWidth": 68,
                    "rowHeight": 56
                });
            }
        }
    };

    var init_one_group = function () {
        generate_html({
            "container": $('.chart_img:eq(0)'),
            "list": pageData.color_list,
            "colWidth": 68,
            "rowHeight": 67
        });
    }

    var init_fabric_tab = function () {
        var tab_title = $('#fabric_tab_title');
        var tab_cont = $('#fabric_tab_cont');
        tab_title.delegate('a', 'click', function() {
            var elem_a = $(this);
            if(! elem_a.hasClass('on')) {
                elem_a.addClass('on').siblings().removeClass('on');
                if(elem_a.attr('data-id')) {
                    tab_cont.find('#' + elem_a.attr('data-id')).show().siblings().hide();
                } else {
                    tab_cont.children('div').eq(elem_a.index()).show().siblings().hide();
                }
            }
        });
    }

    exports.init = function (isOnlyOne) {
        //tab
        init_fabric_tab();

        if(! pageData.color_list) {
            return false;
        }

        var enableFlash = false;        //disabled now.
        if (enableFlash) {
            //初始化半透明小方块
            if (isOnlyOne) {
                init_one_group();
            } else {
                init_all_groups();
            }

            //绑定事件
            var pop_color = $('.shoes_color:eq(0)').parent();
            pop_color.delegate('.chart_img span', 'mouseenter', function () {
                //鼠标悬浮时透明小方块动画效果
                $(this).css({opacity: 0.8}).stop().animate({opacity: 0}, 600);

            }).delegate('.chart_img span', 'click', function () {
                //切换大图
                var title = $(this).attr('title');
                var url = webData.IMG_PATH + $(this).attr('to') + '.jpg?' + webData.version;
                var bigImg = $(this).closest('.shoes_color').children('.fl');
                var html = '<p class="pic"><img src="' + url + '" /></p><p class="name">' + title + '</p>';
                bigImg.html('<span class="loading">' + _lang.page_common_loading + ' ' + title + '</span>');
                loadImage(url, function () {
                    bigImg.html(html);
                });
            });
        }

    };

//});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
},{}],2:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {

    exports.init = function () {
        var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

        $(function() {
            $('table.size tr:first-child,table.size tr td:first-child').css('font-weight', 'bold');
            $('.size_a tr:nth-child(2)').css('font-weight','bold');
            $('.size_b tr td:nth-child(2).first').css('font-weight','bold');
            $('.size_c tr td:nth-child(2).first').css('font-weight','bold');
            $('.size_c tr:nth-child(4)').css('font-weight','bold');
        });
    }
//});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvaGVscC9zaXplX2NoYXJ0X3Nob2VzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvL2RlZmluZShmdW5jdGlvbiAocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7XHJcblxyXG4gICAgZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciAkID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJyQnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJyQnXSA6IG51bGwpO1xyXG5cclxuICAgICAgICAkKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCd0YWJsZS5zaXplIHRyOmZpcnN0LWNoaWxkLHRhYmxlLnNpemUgdHIgdGQ6Zmlyc3QtY2hpbGQnKS5jc3MoJ2ZvbnQtd2VpZ2h0JywgJ2JvbGQnKTtcclxuICAgICAgICAgICAgJCgnLnNpemVfYSB0cjpudGgtY2hpbGQoMiknKS5jc3MoJ2ZvbnQtd2VpZ2h0JywnYm9sZCcpO1xyXG4gICAgICAgICAgICAkKCcuc2l6ZV9iIHRyIHRkOm50aC1jaGlsZCgyKS5maXJzdCcpLmNzcygnZm9udC13ZWlnaHQnLCdib2xkJyk7XHJcbiAgICAgICAgICAgICQoJy5zaXplX2MgdHIgdGQ6bnRoLWNoaWxkKDIpLmZpcnN0JykuY3NzKCdmb250LXdlaWdodCcsJ2JvbGQnKTtcclxuICAgICAgICAgICAgJCgnLnNpemVfYyB0cjpudGgtY2hpbGQoNCknKS5jc3MoJ2ZvbnQtd2VpZ2h0JywnYm9sZCcpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4vL30pOyJdfQ==
},{}],3:[function(require,module,exports){
(function (global){
//define(function (require, exports, module) {

    var $ = (typeof window !== "undefined" ? window['$'] : typeof global !== "undefined" ? global['$'] : null);

    exports.init = function () {
        var tab_title = $('#pop_tab_title');
        var tab_cont = $('#pop_tab_cont');

        tab_title.delegate('td', 'click', function() {
            var elem_td = $(this);
            if(! elem_td.hasClass('on')) {
                elem_td.addClass('on').siblings().removeClass('on');
                tab_cont.find('.panel').eq(elem_td.index()).show().siblings().hide();
            }
        });

        //重置当前选项卡
        var cur_idx = -1;
        var curr_tab_hash = window.location.hash;
        if (curr_tab_hash != undefined && curr_tab_hash != '') {
        	cur_idx = curr_tab_hash.substr(1);
        }
        if (cur_idx == -1) { 
           cur_idx = window.location.search.substring(5,6);
        }
        var len = tab_title.find('td').length;
        if(cur_idx >= 0 && cur_idx < len) {
            tab_title.find('td').eq(cur_idx).click();
        }
    };
//});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhZWEvanMvaGVscC90YWJfc2hvZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvL2RlZmluZShmdW5jdGlvbiAocmVxdWlyZSwgZXhwb3J0cywgbW9kdWxlKSB7XHJcblxyXG4gICAgdmFyICQgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snJCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnJCddIDogbnVsbCk7XHJcblxyXG4gICAgZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB0YWJfdGl0bGUgPSAkKCcjcG9wX3RhYl90aXRsZScpO1xyXG4gICAgICAgIHZhciB0YWJfY29udCA9ICQoJyNwb3BfdGFiX2NvbnQnKTtcclxuXHJcbiAgICAgICAgdGFiX3RpdGxlLmRlbGVnYXRlKCd0ZCcsICdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB2YXIgZWxlbV90ZCA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIGlmKCEgZWxlbV90ZC5oYXNDbGFzcygnb24nKSkge1xyXG4gICAgICAgICAgICAgICAgZWxlbV90ZC5hZGRDbGFzcygnb24nKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKCdvbicpO1xyXG4gICAgICAgICAgICAgICAgdGFiX2NvbnQuZmluZCgnLnBhbmVsJykuZXEoZWxlbV90ZC5pbmRleCgpKS5zaG93KCkuc2libGluZ3MoKS5oaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy/ph43nva7lvZPliY3pgInpobnljaFcclxuICAgICAgICB2YXIgY3VyX2lkeCA9IC0xO1xyXG4gICAgICAgIHZhciBjdXJyX3RhYl9oYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2g7XHJcbiAgICAgICAgaWYgKGN1cnJfdGFiX2hhc2ggIT0gdW5kZWZpbmVkICYmIGN1cnJfdGFiX2hhc2ggIT0gJycpIHtcclxuICAgICAgICBcdGN1cl9pZHggPSBjdXJyX3RhYl9oYXNoLnN1YnN0cigxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGN1cl9pZHggPT0gLTEpIHsgXHJcbiAgICAgICAgICAgY3VyX2lkeCA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyaW5nKDUsNik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBsZW4gPSB0YWJfdGl0bGUuZmluZCgndGQnKS5sZW5ndGg7XHJcbiAgICAgICAgaWYoY3VyX2lkeCA+PSAwICYmIGN1cl9pZHggPCBsZW4pIHtcclxuICAgICAgICAgICAgdGFiX3RpdGxlLmZpbmQoJ3RkJykuZXEoY3VyX2lkeCkuY2xpY2soKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4vL30pOyJdfQ==
},{}],"pop_help_shoes":[function(require,module,exports){
// require('./common')

require('../help/tab_shoes').init(); //tab
require('../help/color_chart').init(true); //Color Chart
require('../help/size_chart_shoes').init(); //Size Chart
},{"../help/color_chart":1,"../help/size_chart_shoes":2,"../help/tab_shoes":3}]},{},[])
//# sourceMappingURL=data:application/json;base64,
